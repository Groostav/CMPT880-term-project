package ca.sfu.cs.porter;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

  public static boolean debug = false;

  @Test
  public void test001() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test001"); }


    java.util.SortedSet sortedSet0 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.util.TreeSet treeSet1 = new java.util.TreeSet(sortedSet0);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test002() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test002"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet4 = treeSet0.subSet((Object)(-1.0d), (Object)(byte)1);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);

  }

  @Test
  public void test003() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test003"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.function.Consumer consumer5 = null;
    // The following exception was thrown during execution in test generation
    try {
      treeSet0.forEach(consumer5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);

  }

  @Test
  public void test004() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test004"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Iterator iterator2 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    java.util.Iterator iterator5 = treeSet3.descendingIterator();
    // The following exception was thrown during execution in test generation
    try {
      boolean b6 = treeSet0.remove((Object)treeSet3);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator5);

  }

  @Test
  public void test005() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test005"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = treeSet3.add((Object)treeSet7);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);

  }

  @Test
  public void test006() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test006"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    Object obj6 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet7 = treeSet0.headSet(obj6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);

  }

  @Test
  public void test007() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test007"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    // The following exception was thrown during execution in test generation
    try {
      Object obj6 = treeSet2.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test008() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test008"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.function.Consumer consumer6 = null;
    // The following exception was thrown during execution in test generation
    try {
      treeSet0.forEach(consumer6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);

  }

  @Test
  public void test009() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test009"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    Object obj6 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b7 = treeSet0.remove(obj6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test010() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test010"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    boolean b7 = treeSet6.isEmpty();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.Iterator iterator10 = treeSet8.descendingIterator();
    boolean b11 = treeSet6.containsAll((java.util.Collection)treeSet8);
    java.util.stream.Stream stream12 = treeSet6.parallelStream();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet13 = treeSet0.tailSet((Object)stream12);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream12);

  }

  @Test
  public void test011() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test011"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    Object obj8 = treeSet3.lower((Object)true);
    // The following exception was thrown during execution in test generation
    try {
      Object obj9 = treeSet3.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);

  }

  @Test
  public void test012() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test012"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    // The following exception was thrown during execution in test generation
    try {
      Object obj8 = treeSet7.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);

  }

  @Test
  public void test013() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test013"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    Object obj6 = treeSet0.pollLast();
    Object obj8 = treeSet0.lower((Object)1L);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);

  }

  @Test
  public void test014() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test014"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b6 = treeSet3.isEmpty();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    java.util.SortedSet sortedSet13 = treeSet7.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    Object[] obj_array17 = new Object[] { (byte)10 };
    Object[] obj_array18 = treeSet14.toArray(obj_array17);
    Object obj19 = treeSet14.pollLast();
    java.util.Comparator comparator20 = treeSet14.comparator();
    Object obj21 = null;
    Object obj22 = treeSet14.lower(obj21);
    boolean b23 = treeSet7.containsAll((java.util.Collection)treeSet14);
    java.util.NavigableSet navigableSet24 = treeSet14.descendingSet();
    java.util.TreeSet treeSet25 = new java.util.TreeSet((java.util.SortedSet)treeSet14);
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.Iterator iterator27 = treeSet26.descendingIterator();
    Object[] obj_array29 = new Object[] { (byte)10 };
    Object[] obj_array30 = treeSet26.toArray(obj_array29);
    Object obj31 = treeSet26.pollLast();
    java.util.Comparator comparator32 = treeSet26.comparator();
    Object obj33 = null;
    Object obj34 = treeSet26.lower(obj33);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet35 = treeSet3.subSet((Object)treeSet25, (Object)treeSet26);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj34);

  }

  @Test
  public void test015() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test015"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    Object obj1 = treeSet0.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj1);

  }

  @Test
  public void test016() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test016"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    Object obj4 = treeSet0.lower((Object)'#');
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj4);

  }

  @Test
  public void test017() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test017"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.Comparator comparator3 = treeSet0.comparator();
    java.util.TreeSet treeSet4 = new java.util.TreeSet();
    java.util.Iterator iterator5 = treeSet4.descendingIterator();
    Object[] obj_array7 = new Object[] { (byte)10 };
    Object[] obj_array8 = treeSet4.toArray(obj_array7);
    java.util.SortedSet sortedSet10 = treeSet4.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet11 = new java.util.TreeSet((java.util.Collection)sortedSet10);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet12 = treeSet0.headSet((Object)sortedSet10);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet10);

  }

  @Test
  public void test018() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test018"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    boolean b2 = treeSet1.isEmpty();
    java.util.SortedSet sortedSet3 = treeSet0.headSet((Object)b2);
    java.util.function.Consumer consumer4 = null;
    // The following exception was thrown during execution in test generation
    try {
      treeSet0.forEach(consumer4);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet3);

  }

  @Test
  public void test019() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test019"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    Object obj19 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet20 = treeSet7.tailSet(obj19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);

  }

  @Test
  public void test020() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test020"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object[] obj_array9 = new Object[] { (byte)10 };
    Object[] obj_array10 = treeSet6.toArray(obj_array9);
    Object obj11 = treeSet6.pollLast();
    java.util.Comparator comparator12 = treeSet6.comparator();
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet6);
    java.util.Iterator iterator14 = treeSet6.descendingIterator();
    java.util.function.Consumer consumer15 = null;
    // The following exception was thrown during execution in test generation
    try {
      treeSet6.forEach(consumer15);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);

  }

  @Test
  public void test021() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test021"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.headSet((Object)1.0d);
    java.util.function.Predicate predicate7 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = sortedSet6.removeIf(predicate7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);

  }

  @Test
  public void test022() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test022"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.Spliterator spliterator10 = treeSet0.spliterator();
    java.util.function.Consumer consumer11 = null;
    // The following exception was thrown during execution in test generation
    try {
      treeSet0.forEach(consumer11);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator10);

  }

  @Test
  public void test023() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test023"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.TreeSet treeSet5 = new java.util.TreeSet();
    java.util.Iterator iterator6 = treeSet5.descendingIterator();
    Object[] obj_array8 = new Object[] { (byte)10 };
    Object[] obj_array9 = treeSet5.toArray(obj_array8);
    java.util.SortedSet sortedSet11 = treeSet5.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet12 = new java.util.TreeSet((java.util.Collection)sortedSet11);
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet12);
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    boolean b15 = treeSet14.isEmpty();
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    java.util.Iterator iterator18 = treeSet16.descendingIterator();
    boolean b19 = treeSet14.containsAll((java.util.Collection)treeSet16);
    Object obj21 = treeSet14.higher((Object)(short)(-1));
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet22 = treeSet12.headSet(obj21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj21);

  }

  @Test
  public void test024() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test024"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.NavigableSet navigableSet1 = treeSet0.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
      Object obj2 = treeSet0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet1);

  }

  @Test
  public void test025() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test025"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object[] obj_array9 = new Object[] { (byte)10 };
    Object[] obj_array10 = treeSet6.toArray(obj_array9);
    java.util.SortedSet sortedSet12 = treeSet6.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet13 = new java.util.TreeSet((java.util.Collection)sortedSet12);
    Object obj14 = treeSet13.clone();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    java.util.Iterator iterator16 = treeSet15.descendingIterator();
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    Object[] obj_array20 = new Object[] { (byte)10 };
    Object[] obj_array21 = treeSet17.toArray(obj_array20);
    Object[] obj_array22 = treeSet15.toArray(obj_array21);
    Object obj24 = treeSet15.lower((Object)(-1.0f));
    java.util.Spliterator spliterator25 = treeSet15.spliterator();
    boolean b26 = treeSet13.addAll((java.util.Collection)treeSet15);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet27 = treeSet0.headSet((Object)treeSet13);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test026() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test026"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    Object obj7 = treeSet0.higher((Object)(short)(-1));
    Object[] obj_array8 = treeSet0.toArray();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    Object[] obj_array19 = new Object[] { (byte)10 };
    Object[] obj_array20 = treeSet16.toArray(obj_array19);
    Object obj21 = treeSet16.pollLast();
    java.util.Comparator comparator22 = treeSet16.comparator();
    Object obj23 = null;
    Object obj24 = treeSet16.lower(obj23);
    boolean b25 = treeSet9.containsAll((java.util.Collection)treeSet16);
    java.util.NavigableSet navigableSet26 = treeSet16.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet28 = treeSet0.tailSet((Object)treeSet16, false);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet26);

  }

  @Test
  public void test027() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test027"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    Object obj7 = treeSet0.higher((Object)(short)(-1));
    Object[] obj_array8 = treeSet0.toArray();
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)treeSet0);
    // The following exception was thrown during execution in test generation
    try {
      Object obj10 = treeSet9.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);

  }

  @Test
  public void test028() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test028"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet((java.util.Collection)treeSet18);
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object[] obj_array23 = new Object[] { (byte)10 };
    Object[] obj_array24 = treeSet20.toArray(obj_array23);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet25 = treeSet19.tailSet((Object)treeSet20);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);

  }

  @Test
  public void test029() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test029"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object[] obj_array9 = new Object[] { (byte)10 };
    Object[] obj_array10 = treeSet6.toArray(obj_array9);
    Object obj11 = treeSet6.pollLast();
    java.util.Comparator comparator12 = treeSet6.comparator();
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet6);
    java.util.Iterator iterator14 = treeSet6.descendingIterator();
    Object obj15 = treeSet6.pollLast();
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    Object[] obj_array21 = new Object[] { (byte)10 };
    Object[] obj_array22 = treeSet18.toArray(obj_array21);
    Object[] obj_array23 = treeSet16.toArray(obj_array22);
    Object obj25 = treeSet16.lower((Object)(-1.0f));
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.Iterator iterator27 = treeSet26.descendingIterator();
    java.util.Spliterator spliterator28 = treeSet26.spliterator();
    java.util.TreeSet treeSet29 = new java.util.TreeSet();
    java.util.Iterator iterator30 = treeSet29.descendingIterator();
    Object obj31 = treeSet26.lower((Object)treeSet29);
    boolean b32 = treeSet29.isEmpty();
    Object obj33 = treeSet16.floor((Object)treeSet29);
    // The following exception was thrown during execution in test generation
    try {
      boolean b34 = treeSet6.remove((Object)treeSet16);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj33);

  }

  @Test
  public void test030() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test030"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    Object obj8 = treeSet7.clone();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    Object[] obj_array16 = treeSet9.toArray(obj_array15);
    Object obj18 = treeSet9.lower((Object)(-1.0f));
    java.util.Spliterator spliterator19 = treeSet9.spliterator();
    boolean b20 = treeSet7.addAll((java.util.Collection)treeSet9);
    // The following exception was thrown during execution in test generation
    try {
      Object obj21 = treeSet7.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test031() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test031"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.Comparator comparator10 = treeSet0.comparator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    java.util.Spliterator spliterator13 = treeSet11.spliterator();
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    Object obj16 = treeSet11.lower((Object)treeSet14);
    Object obj17 = treeSet11.pollLast();
    // The following exception was thrown during execution in test generation
    try {
      boolean b18 = treeSet0.add((Object)treeSet11);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);

  }

  @Test
  public void test032() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test032"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    java.util.Spliterator spliterator5 = treeSet3.spliterator();
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object obj8 = treeSet3.lower((Object)treeSet6);
    Object obj9 = treeSet0.lower((Object)treeSet6);
    java.util.Collection collection10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = treeSet6.removeAll(collection10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);

  }

  @Test
  public void test033() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test033"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.NavigableSet navigableSet1 = treeSet0.descendingSet();
    java.util.Comparator comparator2 = treeSet0.comparator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    java.util.TreeSet treeSet5 = new java.util.TreeSet();
    java.util.Iterator iterator6 = treeSet5.descendingIterator();
    Object[] obj_array8 = new Object[] { (byte)10 };
    Object[] obj_array9 = treeSet5.toArray(obj_array8);
    Object[] obj_array10 = treeSet3.toArray(obj_array9);
    Object obj12 = treeSet3.lower((Object)(-1.0f));
    java.util.Spliterator spliterator13 = treeSet3.spliterator();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet14 = treeSet0.tailSet((Object)spliterator13);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator13);

  }

  @Test
  public void test034() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test034"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.SortedSet sortedSet21 = treeSet19.headSet((Object)(byte)0);
    Object obj22 = treeSet7.lower((Object)treeSet19);
    Object obj23 = treeSet7.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj23);

  }

  @Test
  public void test035() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test035"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    Object obj6 = treeSet0.pollLast();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    java.util.Spliterator spliterator9 = treeSet7.spliterator();
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    Object obj12 = treeSet7.lower((Object)treeSet10);
    int i13 = treeSet10.size();
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    boolean b15 = treeSet14.isEmpty();
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    Object[] obj_array19 = new Object[] { (byte)10 };
    Object[] obj_array20 = treeSet16.toArray(obj_array19);
    java.util.SortedSet sortedSet22 = treeSet16.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet23 = new java.util.TreeSet((java.util.Collection)sortedSet22);
    boolean b24 = treeSet14.addAll((java.util.Collection)sortedSet22);
    Object obj25 = treeSet10.lower((Object)b24);
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.Iterator iterator27 = treeSet26.descendingIterator();
    Object[] obj_array29 = new Object[] { (byte)10 };
    Object[] obj_array30 = treeSet26.toArray(obj_array29);
    java.util.SortedSet sortedSet32 = treeSet26.headSet((Object)1.0d);
    String str33 = treeSet26.toString();
    Object obj34 = treeSet10.higher((Object)treeSet26);
    java.util.TreeSet treeSet35 = new java.util.TreeSet();
    java.util.SortedSet sortedSet37 = treeSet35.headSet((Object)(byte)0);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet38 = treeSet0.subSet((Object)treeSet26, (Object)treeSet35);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i13 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "[]"+ "'", str33.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet37);

  }

  @Test
  public void test036() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test036"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    Object obj7 = treeSet0.higher((Object)(short)(-1));
    Object[] obj_array8 = treeSet0.toArray();
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)treeSet0);
    // The following exception was thrown during execution in test generation
    try {
      Object obj10 = treeSet9.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);

  }

  @Test
  public void test037() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test037"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    java.util.SortedSet sortedSet8 = treeSet2.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)sortedSet8);
    boolean b10 = treeSet0.addAll((java.util.Collection)sortedSet8);
    String str11 = treeSet0.toString();
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    boolean b13 = treeSet12.isEmpty();
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    java.util.Iterator iterator16 = treeSet14.descendingIterator();
    boolean b17 = treeSet12.containsAll((java.util.Collection)treeSet14);
    Object obj18 = treeSet12.pollLast();
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet20 = treeSet0.tailSet(obj18, true);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]"+ "'", str11.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);

  }

  @Test
  public void test038() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test038"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.NavigableSet navigableSet1 = treeSet0.descendingSet();
    java.util.stream.Stream stream2 = navigableSet1.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream2);

  }

  @Test
  public void test039() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test039"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    Object[] obj_array22 = new Object[] { (byte)10 };
    Object[] obj_array23 = treeSet19.toArray(obj_array22);
    java.util.SortedSet sortedSet25 = treeSet19.headSet((Object)1.0d);
    String str26 = treeSet19.toString();
    Object obj27 = treeSet3.higher((Object)treeSet19);
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.TreeSet treeSet29 = new java.util.TreeSet();
    boolean b30 = treeSet29.isEmpty();
    java.util.SortedSet sortedSet31 = treeSet28.headSet((Object)b30);
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    java.util.Spliterator spliterator34 = treeSet32.spliterator();
    java.util.TreeSet treeSet35 = new java.util.TreeSet();
    java.util.Iterator iterator36 = treeSet35.descendingIterator();
    Object obj37 = treeSet32.lower((Object)treeSet35);
    java.util.NavigableSet navigableSet40 = treeSet35.headSet((Object)(-1.0f), true);
    boolean b41 = treeSet28.addAll((java.util.Collection)treeSet35);
    // The following exception was thrown during execution in test generation
    try {
      boolean b42 = treeSet3.remove((Object)treeSet35);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[]"+ "'", str26.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);

  }

  @Test
  public void test040() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test040"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet((java.util.Collection)treeSet18);
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object[] obj_array23 = new Object[] { (byte)10 };
    Object[] obj_array24 = treeSet20.toArray(obj_array23);
    Object obj25 = treeSet20.pollLast();
    Object obj26 = treeSet20.pollLast();
    Object obj27 = treeSet20.pollLast();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet29 = treeSet19.subSet((Object)treeSet20, (Object)' ');
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);

  }

  @Test
  public void test041() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test041"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    Object[] obj_array22 = new Object[] { (byte)10 };
    Object[] obj_array23 = treeSet19.toArray(obj_array22);
    java.util.SortedSet sortedSet25 = treeSet19.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.Iterator iterator27 = treeSet26.descendingIterator();
    Object[] obj_array29 = new Object[] { (byte)10 };
    Object[] obj_array30 = treeSet26.toArray(obj_array29);
    Object obj31 = treeSet26.pollLast();
    java.util.Comparator comparator32 = treeSet26.comparator();
    Object obj33 = null;
    Object obj34 = treeSet26.lower(obj33);
    boolean b35 = treeSet19.containsAll((java.util.Collection)treeSet26);
    java.util.NavigableSet navigableSet36 = treeSet26.descendingSet();
    java.util.TreeSet treeSet37 = new java.util.TreeSet((java.util.SortedSet)treeSet26);
    // The following exception was thrown during execution in test generation
    try {
      boolean b38 = treeSet18.remove((Object)treeSet37);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet36);

  }

  @Test
  public void test042() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test042"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    Object obj6 = treeSet0.pollLast();
    Object obj7 = treeSet0.pollLast();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    boolean b9 = treeSet8.isEmpty();
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.Iterator iterator12 = treeSet10.descendingIterator();
    boolean b13 = treeSet8.containsAll((java.util.Collection)treeSet10);
    java.util.stream.Stream stream14 = treeSet8.parallelStream();
    Object obj15 = treeSet8.clone();
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet17 = treeSet0.headSet((Object)treeSet8, true);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);

  }

  @Test
  public void test043() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test043"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    Object[] obj_array18 = treeSet7.toArray();
    boolean b19 = treeSet7.isEmpty();
    Object obj20 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b21 = treeSet7.add(obj20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);

  }

  @Test
  public void test044() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test044"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    java.util.Spliterator spliterator20 = treeSet18.spliterator();
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.Iterator iterator22 = treeSet21.descendingIterator();
    Object obj23 = treeSet18.lower((Object)treeSet21);
    int i24 = treeSet21.size();
    java.util.TreeSet treeSet25 = new java.util.TreeSet();
    boolean b26 = treeSet25.isEmpty();
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    java.util.Iterator iterator28 = treeSet27.descendingIterator();
    Object[] obj_array30 = new Object[] { (byte)10 };
    Object[] obj_array31 = treeSet27.toArray(obj_array30);
    java.util.SortedSet sortedSet33 = treeSet27.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet34 = new java.util.TreeSet((java.util.Collection)sortedSet33);
    boolean b35 = treeSet25.addAll((java.util.Collection)sortedSet33);
    Object obj36 = treeSet21.lower((Object)b35);
    boolean b38 = treeSet21.contains((Object)(byte)100);
    java.util.stream.Stream stream39 = treeSet21.parallelStream();
    java.util.TreeSet treeSet41 = new java.util.TreeSet();
    java.util.Iterator iterator42 = treeSet41.descendingIterator();
    Object[] obj_array44 = new Object[] { (byte)10 };
    Object[] obj_array45 = treeSet41.toArray(obj_array44);
    Object obj46 = treeSet41.pollLast();
    java.util.TreeSet treeSet47 = new java.util.TreeSet((java.util.Collection)treeSet41);
    Object obj49 = treeSet47.ceiling((Object)0.0d);
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet51 = treeSet7.subSet((Object)treeSet21, true, (Object)treeSet47, true);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj49);

  }

  @Test
  public void test045() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test045"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    // The following exception was thrown during execution in test generation
    try {
      Object obj6 = treeSet0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test046() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test046"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.SortedSet sortedSet21 = treeSet19.headSet((Object)(byte)0);
    Object obj22 = treeSet7.lower((Object)treeSet19);
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    Object[] obj_array26 = new Object[] { (byte)10 };
    Object[] obj_array27 = treeSet23.toArray(obj_array26);
    java.util.SortedSet sortedSet29 = treeSet23.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet30 = new java.util.TreeSet((java.util.SortedSet)treeSet23);
    // The following exception was thrown during execution in test generation
    try {
      boolean b31 = treeSet7.remove((Object)treeSet30);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet29);

  }

  @Test
  public void test047() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test047"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    boolean b9 = treeSet0.add((Object)10.0d);
    java.util.SortedSet sortedSet11 = treeSet0.headSet((Object)0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet11);

  }

  @Test
  public void test048() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test048"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    Object obj8 = treeSet7.clone();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    Object[] obj_array16 = treeSet9.toArray(obj_array15);
    Object obj18 = treeSet9.lower((Object)(-1.0f));
    java.util.Spliterator spliterator19 = treeSet9.spliterator();
    boolean b20 = treeSet7.addAll((java.util.Collection)treeSet9);
    Object obj21 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet23 = treeSet7.headSet(obj21, false);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test049() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test049"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet((java.util.Collection)treeSet18);
    java.util.function.Predicate predicate20 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b21 = treeSet19.removeIf(predicate20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);

  }

  @Test
  public void test050() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test050"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.Comparator comparator10 = treeSet0.comparator();
    java.util.stream.Stream stream11 = treeSet0.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream11);

  }

  @Test
  public void test051() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test051"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    Object obj6 = treeSet0.pollLast();
    treeSet0.clear();
    java.util.NavigableSet navigableSet8 = treeSet0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet8);

  }

  @Test
  public void test052() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test052"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.Spliterator spliterator12 = treeSet10.spliterator();
    java.util.TreeSet treeSet13 = new java.util.TreeSet();
    java.util.Iterator iterator14 = treeSet13.descendingIterator();
    Object obj15 = treeSet10.lower((Object)treeSet13);
    boolean b16 = treeSet13.isEmpty();
    Object obj17 = treeSet0.floor((Object)treeSet13);
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    boolean b19 = treeSet18.isEmpty();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    java.util.Iterator iterator22 = treeSet20.descendingIterator();
    boolean b23 = treeSet18.containsAll((java.util.Collection)treeSet20);
    Object obj25 = treeSet18.higher((Object)(short)(-1));
    Object[] obj_array26 = treeSet18.toArray();
    java.util.TreeSet treeSet27 = new java.util.TreeSet((java.util.Collection)treeSet18);
    java.util.TreeSet treeSet29 = new java.util.TreeSet();
    java.util.Iterator iterator30 = treeSet29.descendingIterator();
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.Iterator iterator32 = treeSet31.descendingIterator();
    Object[] obj_array34 = new Object[] { (byte)10 };
    Object[] obj_array35 = treeSet31.toArray(obj_array34);
    Object[] obj_array36 = treeSet29.toArray(obj_array35);
    Object obj38 = treeSet29.floor((Object)(byte)(-1));
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet40 = treeSet13.subSet((Object)treeSet18, false, (Object)(byte)(-1), true);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);

  }

  @Test
  public void test053() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test053"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.SortedSet)treeSet0);
    Object obj9 = treeSet7.higher((Object)1.0d);
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.Iterator iterator12 = treeSet10.descendingIterator();
    Object obj13 = treeSet10.pollFirst();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet14 = treeSet7.tailSet((Object)treeSet10);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj13);

  }

  @Test
  public void test054() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test054"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    Object obj8 = treeSet7.clone();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    Object[] obj_array16 = treeSet9.toArray(obj_array15);
    Object obj18 = treeSet9.lower((Object)(-1.0f));
    java.util.Spliterator spliterator19 = treeSet9.spliterator();
    boolean b20 = treeSet7.addAll((java.util.Collection)treeSet9);
    Object obj21 = treeSet7.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj21);

  }

  @Test
  public void test055() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test055"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    java.util.Spliterator spliterator5 = treeSet3.spliterator();
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object obj8 = treeSet3.lower((Object)treeSet6);
    Object obj9 = treeSet0.lower((Object)treeSet6);
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    Object[] obj_array15 = new Object[] { (byte)10 };
    Object[] obj_array16 = treeSet12.toArray(obj_array15);
    Object[] obj_array17 = treeSet10.toArray(obj_array16);
    boolean b19 = treeSet10.add((Object)10.0d);
    java.util.SortedSet sortedSet20 = treeSet6.headSet((Object)b19);
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    boolean b22 = treeSet21.isEmpty();
    Object obj24 = treeSet21.ceiling((Object)(short)1);
    java.util.TreeSet treeSet25 = new java.util.TreeSet();
    java.util.Iterator iterator26 = treeSet25.descendingIterator();
    Object[] obj_array28 = new Object[] { (byte)10 };
    Object[] obj_array29 = treeSet25.toArray(obj_array28);
    java.util.SortedSet sortedSet31 = treeSet25.tailSet((Object)(byte)0);
    boolean b32 = treeSet21.retainAll((java.util.Collection)sortedSet31);
    java.util.TreeSet treeSet34 = new java.util.TreeSet();
    java.util.Iterator iterator35 = treeSet34.descendingIterator();
    java.util.Iterator iterator36 = treeSet34.descendingIterator();
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet38 = treeSet6.subSet((Object)b32, false, (Object)treeSet34, false);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator36);

  }

  @Test
  public void test056() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test056"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    boolean b2 = treeSet1.isEmpty();
    java.util.SortedSet sortedSet3 = treeSet0.headSet((Object)b2);
    // The following exception was thrown during execution in test generation
    try {
      Object obj4 = treeSet0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet3);

  }

  @Test
  public void test057() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test057"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    java.util.Iterator iterator2 = treeSet1.descendingIterator();
    Object[] obj_array4 = new Object[] { (byte)10 };
    Object[] obj_array5 = treeSet1.toArray(obj_array4);
    Object obj6 = treeSet1.pollLast();
    Object[] obj_array7 = treeSet1.toArray();
    Object obj8 = treeSet0.lower((Object)obj_array7);
    java.util.function.Predicate predicate9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = treeSet0.removeIf(predicate9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);

  }

  @Test
  public void test058() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test058"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b7 = treeSet3.remove((Object)(short)10);
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.Spliterator spliterator10 = treeSet8.spliterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object obj13 = treeSet8.lower((Object)treeSet11);
    Object obj14 = treeSet8.pollLast();
    boolean b15 = treeSet3.equals(obj14);
    java.util.NavigableSet navigableSet16 = treeSet3.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet16);

  }

  @Test
  public void test059() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test059"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.TreeSet treeSet6 = new java.util.TreeSet((java.util.Collection)treeSet0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    java.util.SortedSet sortedSet13 = treeSet7.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet14 = new java.util.TreeSet((java.util.Collection)sortedSet13);
    Object obj15 = treeSet14.clone();
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    Object[] obj_array21 = new Object[] { (byte)10 };
    Object[] obj_array22 = treeSet18.toArray(obj_array21);
    Object[] obj_array23 = treeSet16.toArray(obj_array22);
    Object obj25 = treeSet16.lower((Object)(-1.0f));
    java.util.Spliterator spliterator26 = treeSet16.spliterator();
    boolean b27 = treeSet14.addAll((java.util.Collection)treeSet16);
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet29 = treeSet6.headSet((Object)treeSet16, true);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);

  }

  @Test
  public void test060() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test060"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b7 = treeSet3.remove((Object)(short)10);
    int i8 = treeSet3.size();
    java.util.Spliterator spliterator9 = treeSet3.spliterator();
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    Object[] obj_array13 = new Object[] { (byte)10 };
    Object[] obj_array14 = treeSet10.toArray(obj_array13);
    java.util.SortedSet sortedSet16 = treeSet10.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet17 = new java.util.TreeSet((java.util.Collection)sortedSet16);
    // The following exception was thrown during execution in test generation
    try {
      boolean b18 = treeSet3.contains((Object)sortedSet16);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet16);

  }

  @Test
  public void test061() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test061"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    Object obj7 = treeSet0.clone();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.Spliterator spliterator10 = treeSet8.spliterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object obj13 = treeSet8.lower((Object)treeSet11);
    int i14 = treeSet11.size();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    boolean b16 = treeSet15.isEmpty();
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    Object[] obj_array20 = new Object[] { (byte)10 };
    Object[] obj_array21 = treeSet17.toArray(obj_array20);
    java.util.SortedSet sortedSet23 = treeSet17.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet24 = new java.util.TreeSet((java.util.Collection)sortedSet23);
    boolean b25 = treeSet15.addAll((java.util.Collection)sortedSet23);
    Object obj26 = treeSet11.lower((Object)b25);
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    java.util.Iterator iterator28 = treeSet27.descendingIterator();
    Object[] obj_array30 = new Object[] { (byte)10 };
    Object[] obj_array31 = treeSet27.toArray(obj_array30);
    java.util.SortedSet sortedSet33 = treeSet27.headSet((Object)1.0d);
    String str34 = treeSet27.toString();
    Object obj35 = treeSet11.higher((Object)treeSet27);
    Object obj36 = treeSet0.ceiling((Object)treeSet27);
    java.util.function.Predicate predicate37 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b38 = treeSet0.removeIf(predicate37);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "[]"+ "'", str34.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj36);

  }

  @Test
  public void test062() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test062"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    Object obj3 = treeSet0.ceiling((Object)(short)1);
    // The following exception was thrown during execution in test generation
    try {
      Object obj4 = treeSet0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj3);

  }

  @Test
  public void test063() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test063"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    Object obj7 = treeSet0.clone();
    Object obj9 = treeSet0.floor((Object)(-1.0d));
    String str10 = treeSet0.toString();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    java.util.SortedSet sortedSet17 = treeSet11.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    Object[] obj_array21 = new Object[] { (byte)10 };
    Object[] obj_array22 = treeSet18.toArray(obj_array21);
    Object obj23 = treeSet18.pollLast();
    java.util.Comparator comparator24 = treeSet18.comparator();
    Object obj25 = null;
    Object obj26 = treeSet18.lower(obj25);
    boolean b27 = treeSet11.containsAll((java.util.Collection)treeSet18);
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    Object[] obj_array31 = new Object[] { (byte)10 };
    Object[] obj_array32 = treeSet28.toArray(obj_array31);
    java.util.SortedSet sortedSet34 = treeSet28.headSet((Object)1.0d);
    boolean b35 = treeSet18.retainAll((java.util.Collection)sortedSet34);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet36 = treeSet0.tailSet((Object)sortedSet34);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[]"+ "'", str10.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);

  }

  @Test
  public void test064() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test064"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    boolean b20 = treeSet3.contains((Object)(byte)100);
    java.util.stream.Stream stream21 = treeSet3.parallelStream();
    java.util.TreeSet treeSet22 = new java.util.TreeSet((java.util.Collection)treeSet3);
    java.util.Comparator comparator23 = null;
    java.util.TreeSet treeSet24 = new java.util.TreeSet(comparator23);
    boolean b25 = treeSet22.containsAll((java.util.Collection)treeSet24);
    Object obj26 = treeSet24.pollFirst();
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    java.util.Iterator iterator28 = treeSet27.descendingIterator();
    java.util.Spliterator spliterator29 = treeSet27.spliterator();
    java.util.TreeSet treeSet30 = new java.util.TreeSet();
    java.util.Iterator iterator31 = treeSet30.descendingIterator();
    Object obj32 = treeSet27.lower((Object)treeSet30);
    java.util.stream.Stream stream33 = treeSet27.parallelStream();
    java.util.TreeSet treeSet34 = new java.util.TreeSet();
    boolean b35 = treeSet34.isEmpty();
    java.util.TreeSet treeSet36 = new java.util.TreeSet();
    java.util.Iterator iterator37 = treeSet36.descendingIterator();
    Object[] obj_array39 = new Object[] { (byte)10 };
    Object[] obj_array40 = treeSet36.toArray(obj_array39);
    java.util.SortedSet sortedSet42 = treeSet36.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet43 = new java.util.TreeSet((java.util.Collection)sortedSet42);
    boolean b44 = treeSet34.addAll((java.util.Collection)sortedSet42);
    boolean b45 = treeSet27.containsAll((java.util.Collection)sortedSet42);
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet47 = treeSet24.headSet((Object)treeSet27, false);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);

  }

  @Test
  public void test065() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test065"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Iterator iterator2 = treeSet0.descendingIterator();
    Object obj3 = treeSet0.pollFirst();
    java.util.NavigableSet navigableSet4 = treeSet0.descendingSet();
    java.util.TreeSet treeSet5 = new java.util.TreeSet();
    java.util.Iterator iterator6 = treeSet5.descendingIterator();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object[] obj_array12 = treeSet5.toArray(obj_array11);
    boolean b14 = treeSet5.add((Object)10.0d);
    boolean b15 = treeSet0.retainAll((java.util.Collection)treeSet5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);

  }

  @Test
  public void test066() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test066"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.stream.Stream stream5 = treeSet0.stream();
    java.util.function.Predicate predicate6 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b7 = treeSet0.removeIf(predicate6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream5);

  }

  @Test
  public void test067() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test067"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.NavigableSet navigableSet8 = treeSet3.headSet((Object)(-1.0f), true);
    Object obj9 = treeSet3.pollFirst();
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    Object[] obj_array13 = new Object[] { (byte)10 };
    Object[] obj_array14 = treeSet10.toArray(obj_array13);
    java.util.SortedSet sortedSet16 = treeSet10.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    Object[] obj_array20 = new Object[] { (byte)10 };
    Object[] obj_array21 = treeSet17.toArray(obj_array20);
    Object obj22 = treeSet17.pollLast();
    java.util.Comparator comparator23 = treeSet17.comparator();
    Object obj24 = null;
    Object obj25 = treeSet17.lower(obj24);
    boolean b26 = treeSet10.containsAll((java.util.Collection)treeSet17);
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    java.util.Iterator iterator28 = treeSet27.descendingIterator();
    Object[] obj_array30 = new Object[] { (byte)10 };
    Object[] obj_array31 = treeSet27.toArray(obj_array30);
    java.util.SortedSet sortedSet33 = treeSet27.headSet((Object)1.0d);
    boolean b34 = treeSet17.retainAll((java.util.Collection)sortedSet33);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet35 = treeSet3.headSet((Object)treeSet17);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == false);

  }

  @Test
  public void test068() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test068"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b7 = treeSet3.remove((Object)(short)10);
    int i8 = treeSet3.size();
    java.util.Spliterator spliterator9 = treeSet3.spliterator();
    java.util.Comparator comparator10 = treeSet3.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator10);

  }

  @Test
  public void test069() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test069"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.Spliterator spliterator10 = treeSet0.spliterator();
    Object[] obj_array11 = treeSet0.toArray();
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    java.util.Spliterator spliterator14 = treeSet12.spliterator();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    java.util.Iterator iterator16 = treeSet15.descendingIterator();
    Object obj17 = treeSet12.lower((Object)treeSet15);
    boolean b19 = treeSet15.remove((Object)(short)10);
    int i20 = treeSet15.size();
    java.util.Spliterator spliterator21 = treeSet15.spliterator();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet22 = treeSet0.tailSet((Object)treeSet15);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator21);

  }

  @Test
  public void test070() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test070"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b7 = treeSet3.remove((Object)(short)10);
    Object obj8 = treeSet3.clone();
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)treeSet3);
    java.util.Collection collection10 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b11 = treeSet3.containsAll(collection10);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);

  }

  @Test
  public void test071() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test071"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object[] obj_array9 = new Object[] { (byte)10 };
    Object[] obj_array10 = treeSet6.toArray(obj_array9);
    Object obj11 = treeSet6.pollLast();
    java.util.Comparator comparator12 = treeSet6.comparator();
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet6);
    java.util.Iterator iterator14 = treeSet6.descendingIterator();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    boolean b16 = treeSet15.isEmpty();
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    java.util.Iterator iterator19 = treeSet17.descendingIterator();
    boolean b20 = treeSet15.containsAll((java.util.Collection)treeSet17);
    java.util.stream.Stream stream21 = treeSet15.parallelStream();
    Object obj22 = treeSet6.higher((Object)treeSet15);
    java.util.stream.Stream stream23 = treeSet6.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream23);

  }

  @Test
  public void test072() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test072"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.SortedSet sortedSet21 = treeSet19.headSet((Object)(byte)0);
    Object obj22 = treeSet7.lower((Object)treeSet19);
    // The following exception was thrown during execution in test generation
    try {
      Object obj23 = treeSet19.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);

  }

  @Test
  public void test073() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test073"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.Comparator comparator10 = treeSet0.comparator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    java.util.Spliterator spliterator13 = treeSet11.spliterator();
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    Object obj16 = treeSet11.lower((Object)treeSet14);
    int i17 = treeSet14.size();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    boolean b19 = treeSet18.isEmpty();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object[] obj_array23 = new Object[] { (byte)10 };
    Object[] obj_array24 = treeSet20.toArray(obj_array23);
    java.util.SortedSet sortedSet26 = treeSet20.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet27 = new java.util.TreeSet((java.util.Collection)sortedSet26);
    boolean b28 = treeSet18.addAll((java.util.Collection)sortedSet26);
    Object obj29 = treeSet14.lower((Object)b28);
    java.util.TreeSet treeSet30 = new java.util.TreeSet();
    java.util.Iterator iterator31 = treeSet30.descendingIterator();
    Object[] obj_array33 = new Object[] { (byte)10 };
    Object[] obj_array34 = treeSet30.toArray(obj_array33);
    java.util.SortedSet sortedSet36 = treeSet30.headSet((Object)1.0d);
    String str37 = treeSet30.toString();
    Object obj38 = treeSet14.higher((Object)treeSet30);
    java.util.TreeSet treeSet39 = new java.util.TreeSet();
    java.util.Iterator iterator40 = treeSet39.descendingIterator();
    Object[] obj_array42 = new Object[] { (byte)10 };
    Object[] obj_array43 = treeSet39.toArray(obj_array42);
    java.util.SortedSet sortedSet45 = treeSet39.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet46 = new java.util.TreeSet((java.util.SortedSet)treeSet39);
    java.util.NavigableSet navigableSet47 = treeSet39.descendingSet();
    Object obj48 = treeSet30.lower((Object)navigableSet47);
    boolean b49 = treeSet0.removeAll((java.util.Collection)treeSet30);
    // The following exception was thrown during execution in test generation
    try {
      Object obj50 = treeSet0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "[]"+ "'", str37.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);

  }

  @Test
  public void test074() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test074"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    boolean b20 = treeSet3.contains((Object)(byte)100);
    java.util.stream.Stream stream21 = treeSet3.parallelStream();
    java.util.TreeSet treeSet22 = new java.util.TreeSet((java.util.Collection)treeSet3);
    java.util.TreeSet treeSet23 = new java.util.TreeSet((java.util.Collection)treeSet22);
    java.util.TreeSet treeSet24 = new java.util.TreeSet();
    java.util.Iterator iterator25 = treeSet24.descendingIterator();
    java.util.Spliterator spliterator26 = treeSet24.spliterator();
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    java.util.Iterator iterator28 = treeSet27.descendingIterator();
    Object obj29 = treeSet24.lower((Object)treeSet27);
    int i30 = treeSet27.size();
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    boolean b32 = treeSet31.isEmpty();
    java.util.TreeSet treeSet33 = new java.util.TreeSet();
    java.util.Iterator iterator34 = treeSet33.descendingIterator();
    Object[] obj_array36 = new Object[] { (byte)10 };
    Object[] obj_array37 = treeSet33.toArray(obj_array36);
    java.util.SortedSet sortedSet39 = treeSet33.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet40 = new java.util.TreeSet((java.util.Collection)sortedSet39);
    boolean b41 = treeSet31.addAll((java.util.Collection)sortedSet39);
    Object obj42 = treeSet27.lower((Object)b41);
    boolean b44 = treeSet27.contains((Object)(byte)100);
    java.util.stream.Stream stream45 = treeSet27.parallelStream();
    Object obj46 = treeSet23.floor((Object)stream45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj46);

  }

  @Test
  public void test075() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test075"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    boolean b2 = treeSet1.isEmpty();
    java.util.SortedSet sortedSet3 = treeSet0.headSet((Object)b2);
    java.util.TreeSet treeSet4 = new java.util.TreeSet();
    java.util.Iterator iterator5 = treeSet4.descendingIterator();
    java.util.Spliterator spliterator6 = treeSet4.spliterator();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object obj9 = treeSet4.lower((Object)treeSet7);
    java.util.NavigableSet navigableSet12 = treeSet7.headSet((Object)(-1.0f), true);
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet7);
    // The following exception was thrown during execution in test generation
    try {
      Object obj14 = treeSet7.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test076() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test076"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);

  }

  @Test
  public void test077() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test077"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    java.util.Spliterator spliterator5 = treeSet3.spliterator();
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object obj8 = treeSet3.lower((Object)treeSet6);
    Object obj9 = treeSet0.lower((Object)treeSet6);
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    Object[] obj_array13 = new Object[] { (byte)10 };
    Object[] obj_array14 = treeSet10.toArray(obj_array13);
    java.util.SortedSet sortedSet16 = treeSet10.headSet((Object)1.0d);
    java.util.Spliterator spliterator17 = treeSet10.spliterator();
    java.util.NavigableSet navigableSet18 = treeSet10.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
      boolean b19 = treeSet6.remove((Object)navigableSet18);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet18);

  }

  @Test
  public void test078() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test078"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.NavigableSet navigableSet8 = treeSet0.tailSet((Object)(-1.0d), true);
    java.util.NavigableSet navigableSet9 = treeSet0.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet9);

  }

  @Test
  public void test079() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test079"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.NavigableSet navigableSet8 = treeSet0.tailSet((Object)(-1.0d), true);
    // The following exception was thrown during execution in test generation
    try {
      Object obj9 = treeSet0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet8);

  }

  @Test
  public void test080() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test080"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    boolean b20 = treeSet3.contains((Object)(byte)100);
    java.util.stream.Stream stream21 = treeSet3.parallelStream();
    java.util.TreeSet treeSet22 = new java.util.TreeSet((java.util.Collection)treeSet3);
    java.util.TreeSet treeSet23 = new java.util.TreeSet((java.util.Collection)treeSet22);
    java.util.TreeSet treeSet24 = new java.util.TreeSet();
    java.util.Iterator iterator25 = treeSet24.descendingIterator();
    Object[] obj_array27 = new Object[] { (byte)10 };
    Object[] obj_array28 = treeSet24.toArray(obj_array27);
    java.util.SortedSet sortedSet30 = treeSet24.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.Iterator iterator32 = treeSet31.descendingIterator();
    Object[] obj_array34 = new Object[] { (byte)10 };
    Object[] obj_array35 = treeSet31.toArray(obj_array34);
    Object obj36 = treeSet31.pollLast();
    java.util.Comparator comparator37 = treeSet31.comparator();
    Object obj38 = null;
    Object obj39 = treeSet31.lower(obj38);
    boolean b40 = treeSet24.containsAll((java.util.Collection)treeSet31);
    java.util.NavigableSet navigableSet41 = treeSet31.descendingSet();
    java.util.TreeSet treeSet42 = new java.util.TreeSet((java.util.SortedSet)treeSet31);
    java.util.TreeSet treeSet43 = new java.util.TreeSet((java.util.Collection)treeSet42);
    // The following exception was thrown during execution in test generation
    try {
      boolean b44 = treeSet22.add((Object)treeSet43);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet41);

  }

  @Test
  public void test081() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test081"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    boolean b20 = treeSet3.contains((Object)(byte)100);
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.Iterator iterator22 = treeSet21.descendingIterator();
    Object[] obj_array24 = new Object[] { (byte)10 };
    Object[] obj_array25 = treeSet21.toArray(obj_array24);
    Object obj26 = treeSet21.pollLast();
    Object[] obj_array27 = treeSet21.toArray();
    java.util.NavigableSet navigableSet28 = treeSet21.descendingSet();
    java.util.stream.Stream stream29 = navigableSet28.stream();
    // The following exception was thrown during execution in test generation
    try {
      boolean b30 = treeSet3.remove((Object)stream29);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream29);

  }

  @Test
  public void test082() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test082"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object[] obj_array9 = new Object[] { (byte)10 };
    Object[] obj_array10 = treeSet6.toArray(obj_array9);
    Object obj11 = treeSet6.pollLast();
    java.util.Comparator comparator12 = treeSet6.comparator();
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet6);
    java.util.Iterator iterator14 = treeSet6.descendingIterator();
    Object obj15 = treeSet6.pollLast();
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    java.util.Spliterator spliterator18 = treeSet16.spliterator();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    Object obj21 = treeSet16.lower((Object)treeSet19);
    int i22 = treeSet19.size();
    Object obj24 = treeSet19.lower((Object)true);
    java.util.Comparator comparator25 = treeSet19.comparator();
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet27 = treeSet6.tailSet((Object)treeSet19, true);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i22 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator25);

  }

  @Test
  public void test083() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test083"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    Object obj3 = treeSet0.ceiling((Object)(short)1);
    boolean b4 = treeSet0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);

  }

  @Test
  public void test084() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test084"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    java.util.Spliterator spliterator5 = treeSet3.spliterator();
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object obj8 = treeSet3.lower((Object)treeSet6);
    Object obj9 = treeSet0.lower((Object)treeSet6);
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    Object[] obj_array15 = new Object[] { (byte)10 };
    Object[] obj_array16 = treeSet12.toArray(obj_array15);
    Object[] obj_array17 = treeSet10.toArray(obj_array16);
    boolean b19 = treeSet10.add((Object)10.0d);
    java.util.SortedSet sortedSet20 = treeSet6.headSet((Object)b19);
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    boolean b23 = treeSet22.isEmpty();
    java.util.SortedSet sortedSet24 = treeSet21.headSet((Object)b23);
    java.util.TreeSet treeSet25 = new java.util.TreeSet(sortedSet24);
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.Iterator iterator27 = treeSet26.descendingIterator();
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    Object[] obj_array31 = new Object[] { (byte)10 };
    Object[] obj_array32 = treeSet28.toArray(obj_array31);
    Object[] obj_array33 = treeSet26.toArray(obj_array32);
    Object obj34 = treeSet25.lower((Object)treeSet26);
    // The following exception was thrown during execution in test generation
    try {
      boolean b35 = treeSet6.add((Object)treeSet25);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj34);

  }

  @Test
  public void test085() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test085"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.SortedSet sortedSet2 = treeSet0.headSet((Object)(byte)0);
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    boolean b4 = treeSet3.isEmpty();
    java.util.TreeSet treeSet5 = new java.util.TreeSet();
    java.util.Iterator iterator6 = treeSet5.descendingIterator();
    java.util.Iterator iterator7 = treeSet5.descendingIterator();
    boolean b8 = treeSet3.containsAll((java.util.Collection)treeSet5);
    Object obj10 = treeSet3.higher((Object)(short)(-1));
    Object[] obj_array11 = treeSet3.toArray();
    java.util.TreeSet treeSet12 = new java.util.TreeSet((java.util.Collection)treeSet3);
    java.util.TreeSet treeSet13 = new java.util.TreeSet();
    boolean b14 = treeSet13.isEmpty();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    java.util.Iterator iterator16 = treeSet15.descendingIterator();
    java.util.Iterator iterator17 = treeSet15.descendingIterator();
    boolean b18 = treeSet13.containsAll((java.util.Collection)treeSet15);
    java.util.stream.Stream stream19 = treeSet13.parallelStream();
    Object obj20 = treeSet13.clone();
    int i21 = treeSet13.size();
    boolean b22 = treeSet3.addAll((java.util.Collection)treeSet13);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet23 = treeSet0.tailSet((Object)treeSet3);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test086() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test086"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    boolean b2 = treeSet1.isEmpty();
    java.util.SortedSet sortedSet3 = treeSet0.headSet((Object)b2);
    java.util.TreeSet treeSet4 = new java.util.TreeSet(sortedSet3);
    java.util.TreeSet treeSet5 = new java.util.TreeSet();
    java.util.Iterator iterator6 = treeSet5.descendingIterator();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object[] obj_array12 = treeSet5.toArray(obj_array11);
    Object obj13 = treeSet4.lower((Object)treeSet5);
    java.util.function.Consumer consumer14 = null;
    // The following exception was thrown during execution in test generation
    try {
      treeSet5.forEach(consumer14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj13);

  }

  @Test
  public void test087() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test087"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b7 = treeSet3.remove((Object)(short)10);
    int i8 = treeSet3.size();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    java.util.Spliterator spliterator11 = treeSet9.spliterator();
    java.util.Iterator iterator12 = treeSet9.descendingIterator();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet13 = treeSet3.tailSet((Object)treeSet9);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);

  }

  @Test
  public void test088() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test088"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    Object obj7 = treeSet0.higher((Object)(short)(-1));
    Object[] obj_array8 = treeSet0.toArray();
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)treeSet0);
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    boolean b11 = treeSet10.isEmpty();
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    java.util.Iterator iterator14 = treeSet12.descendingIterator();
    boolean b15 = treeSet10.containsAll((java.util.Collection)treeSet12);
    java.util.stream.Stream stream16 = treeSet10.parallelStream();
    Object obj17 = treeSet10.clone();
    int i18 = treeSet10.size();
    boolean b19 = treeSet0.addAll((java.util.Collection)treeSet10);
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.NavigableSet navigableSet21 = treeSet20.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet22 = treeSet10.headSet((Object)treeSet20);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet21);

  }

  @Test
  public void test089() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test089"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    Object obj7 = treeSet0.clone();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.Spliterator spliterator10 = treeSet8.spliterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object obj13 = treeSet8.lower((Object)treeSet11);
    int i14 = treeSet11.size();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    boolean b16 = treeSet15.isEmpty();
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    Object[] obj_array20 = new Object[] { (byte)10 };
    Object[] obj_array21 = treeSet17.toArray(obj_array20);
    java.util.SortedSet sortedSet23 = treeSet17.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet24 = new java.util.TreeSet((java.util.Collection)sortedSet23);
    boolean b25 = treeSet15.addAll((java.util.Collection)sortedSet23);
    Object obj26 = treeSet11.lower((Object)b25);
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    java.util.Iterator iterator28 = treeSet27.descendingIterator();
    Object[] obj_array30 = new Object[] { (byte)10 };
    Object[] obj_array31 = treeSet27.toArray(obj_array30);
    java.util.SortedSet sortedSet33 = treeSet27.headSet((Object)1.0d);
    String str34 = treeSet27.toString();
    Object obj35 = treeSet11.higher((Object)treeSet27);
    Object obj36 = treeSet0.ceiling((Object)treeSet27);
    java.util.function.Consumer consumer37 = null;
    // The following exception was thrown during execution in test generation
    try {
      treeSet0.forEach(consumer37);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "[]"+ "'", str34.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj36);

  }

  @Test
  public void test090() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test090"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.NavigableSet navigableSet8 = treeSet3.headSet((Object)(-1.0f), true);
    String str9 = treeSet3.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[]"+ "'", str9.equals("[]"));

  }

  @Test
  public void test091() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test091"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    Object obj3 = treeSet0.ceiling((Object)(short)1);
    java.util.TreeSet treeSet4 = new java.util.TreeSet();
    java.util.Iterator iterator5 = treeSet4.descendingIterator();
    Object[] obj_array7 = new Object[] { (byte)10 };
    Object[] obj_array8 = treeSet4.toArray(obj_array7);
    java.util.SortedSet sortedSet10 = treeSet4.tailSet((Object)(byte)0);
    boolean b11 = treeSet0.retainAll((java.util.Collection)sortedSet10);
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    java.util.Iterator iterator14 = treeSet12.descendingIterator();
    Object obj15 = treeSet12.pollFirst();
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    Object[] obj_array19 = new Object[] { (byte)10 };
    Object[] obj_array20 = treeSet16.toArray(obj_array19);
    java.util.SortedSet sortedSet22 = treeSet16.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    Object[] obj_array26 = new Object[] { (byte)10 };
    Object[] obj_array27 = treeSet23.toArray(obj_array26);
    Object obj28 = treeSet23.pollLast();
    java.util.Comparator comparator29 = treeSet23.comparator();
    Object obj30 = null;
    Object obj31 = treeSet23.lower(obj30);
    boolean b32 = treeSet16.containsAll((java.util.Collection)treeSet23);
    java.util.NavigableSet navigableSet33 = treeSet23.descendingSet();
    Object obj34 = treeSet12.floor((Object)navigableSet33);
    boolean b35 = treeSet0.addAll((java.util.Collection)navigableSet33);
    java.util.TreeSet treeSet36 = new java.util.TreeSet();
    boolean b37 = treeSet36.isEmpty();
    Object obj39 = treeSet36.ceiling((Object)(short)1);
    java.util.TreeSet treeSet40 = new java.util.TreeSet();
    java.util.Iterator iterator41 = treeSet40.descendingIterator();
    Object[] obj_array43 = new Object[] { (byte)10 };
    Object[] obj_array44 = treeSet40.toArray(obj_array43);
    java.util.SortedSet sortedSet46 = treeSet40.tailSet((Object)(byte)0);
    boolean b47 = treeSet36.retainAll((java.util.Collection)sortedSet46);
    java.util.TreeSet treeSet48 = new java.util.TreeSet();
    java.util.Iterator iterator49 = treeSet48.descendingIterator();
    java.util.Iterator iterator50 = treeSet48.descendingIterator();
    Object obj51 = treeSet48.pollFirst();
    java.util.TreeSet treeSet52 = new java.util.TreeSet();
    java.util.Iterator iterator53 = treeSet52.descendingIterator();
    Object[] obj_array55 = new Object[] { (byte)10 };
    Object[] obj_array56 = treeSet52.toArray(obj_array55);
    java.util.SortedSet sortedSet58 = treeSet52.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet59 = new java.util.TreeSet();
    java.util.Iterator iterator60 = treeSet59.descendingIterator();
    Object[] obj_array62 = new Object[] { (byte)10 };
    Object[] obj_array63 = treeSet59.toArray(obj_array62);
    Object obj64 = treeSet59.pollLast();
    java.util.Comparator comparator65 = treeSet59.comparator();
    Object obj66 = null;
    Object obj67 = treeSet59.lower(obj66);
    boolean b68 = treeSet52.containsAll((java.util.Collection)treeSet59);
    java.util.NavigableSet navigableSet69 = treeSet59.descendingSet();
    Object obj70 = treeSet48.floor((Object)navigableSet69);
    boolean b71 = treeSet36.addAll((java.util.Collection)navigableSet69);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet72 = treeSet0.tailSet((Object)navigableSet69);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b68 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b71 == false);

  }

  @Test
  public void test092() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test092"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    Object obj7 = treeSet0.clone();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    boolean b9 = treeSet8.isEmpty();
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.Iterator iterator12 = treeSet10.descendingIterator();
    boolean b13 = treeSet8.containsAll((java.util.Collection)treeSet10);
    java.util.stream.Stream stream14 = treeSet8.parallelStream();
    Object obj15 = treeSet8.clone();
    int i16 = treeSet8.size();
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    boolean b18 = treeSet17.isEmpty();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    Object[] obj_array22 = new Object[] { (byte)10 };
    Object[] obj_array23 = treeSet19.toArray(obj_array22);
    java.util.SortedSet sortedSet25 = treeSet19.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet26 = new java.util.TreeSet((java.util.Collection)sortedSet25);
    boolean b27 = treeSet17.addAll((java.util.Collection)sortedSet25);
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    java.util.Spliterator spliterator30 = treeSet28.spliterator();
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.Iterator iterator32 = treeSet31.descendingIterator();
    Object obj33 = treeSet28.lower((Object)treeSet31);
    int i34 = treeSet31.size();
    java.util.TreeSet treeSet35 = new java.util.TreeSet();
    boolean b36 = treeSet35.isEmpty();
    java.util.TreeSet treeSet37 = new java.util.TreeSet();
    java.util.Iterator iterator38 = treeSet37.descendingIterator();
    Object[] obj_array40 = new Object[] { (byte)10 };
    Object[] obj_array41 = treeSet37.toArray(obj_array40);
    java.util.SortedSet sortedSet43 = treeSet37.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet44 = new java.util.TreeSet((java.util.Collection)sortedSet43);
    boolean b45 = treeSet35.addAll((java.util.Collection)sortedSet43);
    Object obj46 = treeSet31.lower((Object)b45);
    boolean b48 = treeSet31.contains((Object)(byte)100);
    java.util.stream.Stream stream49 = treeSet31.parallelStream();
    java.util.TreeSet treeSet50 = new java.util.TreeSet((java.util.Collection)treeSet31);
    java.util.Comparator comparator51 = null;
    java.util.TreeSet treeSet52 = new java.util.TreeSet(comparator51);
    boolean b53 = treeSet50.containsAll((java.util.Collection)treeSet52);
    boolean b54 = treeSet17.add((Object)b53);
    boolean b55 = treeSet8.addAll((java.util.Collection)treeSet17);
    Object obj56 = treeSet0.ceiling((Object)treeSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b54 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b55 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj56);

  }

  @Test
  public void test093() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test093"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    java.util.function.Consumer consumer7 = null;
    // The following exception was thrown during execution in test generation
    try {
      treeSet0.forEach(consumer7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);

  }

  @Test
  public void test094() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test094"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    Object[] obj_array18 = treeSet7.toArray();
    boolean b19 = treeSet7.isEmpty();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object[] obj_array25 = new Object[] { (byte)10 };
    Object[] obj_array26 = treeSet22.toArray(obj_array25);
    Object[] obj_array27 = treeSet20.toArray(obj_array26);
    Object obj29 = treeSet20.floor((Object)(byte)(-1));
    java.util.TreeSet treeSet30 = new java.util.TreeSet();
    java.util.Iterator iterator31 = treeSet30.descendingIterator();
    Object[] obj_array33 = new Object[] { (byte)10 };
    Object[] obj_array34 = treeSet30.toArray(obj_array33);
    Object obj35 = treeSet30.pollLast();
    Object[] obj_array36 = treeSet30.toArray();
    Object[] obj_array37 = treeSet20.toArray(obj_array36);
    // The following exception was thrown during execution in test generation
    try {
      boolean b38 = treeSet7.add((Object)treeSet20);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);

  }

  @Test
  public void test095() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test095"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.SortedSet)treeSet0);
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    Object[] obj_array11 = new Object[] { (byte)10 };
    Object[] obj_array12 = treeSet8.toArray(obj_array11);
    java.util.SortedSet sortedSet14 = treeSet8.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    java.util.Iterator iterator16 = treeSet15.descendingIterator();
    Object[] obj_array18 = new Object[] { (byte)10 };
    Object[] obj_array19 = treeSet15.toArray(obj_array18);
    Object obj20 = treeSet15.pollLast();
    java.util.Comparator comparator21 = treeSet15.comparator();
    Object obj22 = null;
    Object obj23 = treeSet15.lower(obj22);
    boolean b24 = treeSet8.containsAll((java.util.Collection)treeSet15);
    java.util.NavigableSet navigableSet25 = treeSet8.descendingSet();
    java.util.Spliterator spliterator26 = treeSet8.spliterator();
    java.util.stream.Stream stream27 = treeSet8.stream();
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    java.util.Spliterator spliterator30 = treeSet28.spliterator();
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.Iterator iterator32 = treeSet31.descendingIterator();
    Object obj33 = treeSet28.lower((Object)treeSet31);
    boolean b34 = treeSet31.isEmpty();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet35 = treeSet7.subSet((Object)stream27, (Object)treeSet31);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);

  }

  @Test
  public void test096() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test096"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    int i7 = treeSet0.size();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    Object[] obj_array11 = new Object[] { (byte)10 };
    Object[] obj_array12 = treeSet8.toArray(obj_array11);
    java.util.SortedSet sortedSet14 = treeSet8.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet15 = new java.util.TreeSet((java.util.Collection)sortedSet14);
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    java.util.Iterator iterator18 = treeSet16.descendingIterator();
    java.util.NavigableSet navigableSet21 = treeSet16.tailSet((Object)(byte)10, true);
    boolean b22 = treeSet15.retainAll((java.util.Collection)treeSet16);
    // The following exception was thrown during execution in test generation
    try {
      boolean b23 = treeSet0.contains((Object)treeSet16);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);

  }

  @Test
  public void test097() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test097"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    java.util.Spliterator spliterator19 = treeSet17.spliterator();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object obj22 = treeSet17.lower((Object)treeSet20);
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    Object[] obj_array26 = new Object[] { (byte)10 };
    Object[] obj_array27 = treeSet23.toArray(obj_array26);
    Object obj28 = treeSet23.pollLast();
    java.util.Comparator comparator29 = treeSet23.comparator();
    boolean b30 = treeSet17.addAll((java.util.Collection)treeSet23);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet31 = treeSet0.headSet((Object)treeSet17);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);

  }

  @Test
  public void test098() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test098"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet0.descendingSet();
    Object obj19 = treeSet0.lower((Object)(short)(-1));
    treeSet0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj19);

  }

  @Test
  public void test099() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test099"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    boolean b20 = treeSet3.contains((Object)(byte)100);
    java.util.stream.Stream stream21 = treeSet3.parallelStream();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    java.util.Iterator iterator24 = treeSet22.descendingIterator();
    Object obj25 = treeSet22.pollFirst();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet26 = treeSet3.headSet((Object)treeSet22);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);

  }

  @Test
  public void test100() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test100"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.function.Consumer consumer6 = null;
    // The following exception was thrown during execution in test generation
    try {
      treeSet0.forEach(consumer6);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);

  }

  @Test
  public void test101() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test101"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    Object obj7 = treeSet0.clone();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.Spliterator spliterator10 = treeSet8.spliterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object obj13 = treeSet8.lower((Object)treeSet11);
    int i14 = treeSet11.size();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    boolean b16 = treeSet15.isEmpty();
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    Object[] obj_array20 = new Object[] { (byte)10 };
    Object[] obj_array21 = treeSet17.toArray(obj_array20);
    java.util.SortedSet sortedSet23 = treeSet17.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet24 = new java.util.TreeSet((java.util.Collection)sortedSet23);
    boolean b25 = treeSet15.addAll((java.util.Collection)sortedSet23);
    Object obj26 = treeSet11.lower((Object)b25);
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    java.util.Iterator iterator28 = treeSet27.descendingIterator();
    Object[] obj_array30 = new Object[] { (byte)10 };
    Object[] obj_array31 = treeSet27.toArray(obj_array30);
    java.util.SortedSet sortedSet33 = treeSet27.headSet((Object)1.0d);
    String str34 = treeSet27.toString();
    Object obj35 = treeSet11.higher((Object)treeSet27);
    Object obj36 = treeSet0.ceiling((Object)treeSet27);
    // The following exception was thrown during execution in test generation
    try {
      Object obj37 = treeSet27.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str34 + "' != '" + "[]"+ "'", str34.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj36);

  }

  @Test
  public void test102() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test102"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    Object obj3 = treeSet0.ceiling((Object)(short)1);
    java.util.TreeSet treeSet4 = new java.util.TreeSet();
    boolean b5 = treeSet4.isEmpty();
    Object obj7 = treeSet4.ceiling((Object)(short)1);
    java.util.SortedSet sortedSet9 = treeSet4.headSet((Object)(short)(-1));
    boolean b10 = treeSet0.containsAll((java.util.Collection)treeSet4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test103() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test103"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    int i17 = treeSet0.size();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet0);
    Object obj19 = treeSet18.clone();
    String str20 = treeSet18.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "[]"+ "'", str20.equals("[]"));

  }

  @Test
  public void test104() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test104"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    java.util.Iterator iterator2 = treeSet1.descendingIterator();
    Object[] obj_array4 = new Object[] { (byte)10 };
    Object[] obj_array5 = treeSet1.toArray(obj_array4);
    Object obj6 = treeSet1.pollLast();
    Object[] obj_array7 = treeSet1.toArray();
    Object obj8 = treeSet0.lower((Object)obj_array7);
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    Object obj17 = treeSet16.clone();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object[] obj_array23 = new Object[] { (byte)10 };
    Object[] obj_array24 = treeSet20.toArray(obj_array23);
    Object[] obj_array25 = treeSet18.toArray(obj_array24);
    Object obj27 = treeSet18.lower((Object)(-1.0f));
    java.util.Spliterator spliterator28 = treeSet18.spliterator();
    boolean b29 = treeSet16.addAll((java.util.Collection)treeSet18);
    java.util.Iterator iterator30 = treeSet18.iterator();
    Object obj31 = treeSet0.lower((Object)iterator30);
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    java.util.Spliterator spliterator34 = treeSet32.spliterator();
    java.util.TreeSet treeSet35 = new java.util.TreeSet();
    java.util.Iterator iterator36 = treeSet35.descendingIterator();
    Object obj37 = treeSet32.lower((Object)treeSet35);
    boolean b38 = treeSet35.isEmpty();
    Object obj39 = treeSet35.pollFirst();
    java.util.NavigableSet navigableSet40 = treeSet35.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet41 = treeSet0.tailSet((Object)navigableSet40);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet40);

  }

  @Test
  public void test105() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test105"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    boolean b9 = treeSet0.add((Object)10.0d);
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    boolean b11 = treeSet0.removeAll((java.util.Collection)treeSet10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);

  }

  @Test
  public void test106() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test106"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    Object obj8 = treeSet3.lower((Object)true);
    java.util.Comparator comparator9 = treeSet3.comparator();
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    boolean b11 = treeSet10.isEmpty();
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    Object[] obj_array15 = new Object[] { (byte)10 };
    Object[] obj_array16 = treeSet12.toArray(obj_array15);
    java.util.SortedSet sortedSet18 = treeSet12.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet19 = new java.util.TreeSet((java.util.Collection)sortedSet18);
    boolean b20 = treeSet10.addAll((java.util.Collection)sortedSet18);
    boolean b21 = treeSet3.addAll((java.util.Collection)treeSet10);
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    java.util.TreeSet treeSet24 = new java.util.TreeSet();
    java.util.Iterator iterator25 = treeSet24.descendingIterator();
    Object[] obj_array27 = new Object[] { (byte)10 };
    Object[] obj_array28 = treeSet24.toArray(obj_array27);
    Object[] obj_array29 = treeSet22.toArray(obj_array28);
    Object[] obj_array30 = treeSet10.toArray(obj_array28);
    java.util.function.Predicate predicate31 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b32 = treeSet10.removeIf(predicate31);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);

  }

  @Test
  public void test107() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test107"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    java.util.Spliterator spliterator21 = treeSet19.spliterator();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object obj24 = treeSet19.lower((Object)treeSet22);
    int i25 = treeSet22.size();
    Object obj27 = treeSet22.lower((Object)true);
    java.util.Comparator comparator28 = treeSet22.comparator();
    boolean b29 = treeSet18.equals((Object)comparator28);
    boolean b30 = treeSet7.remove((Object)b29);
    Object obj31 = treeSet7.pollLast();
    java.util.stream.Stream stream32 = treeSet7.parallelStream();
    String str33 = treeSet7.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "[]"+ "'", str33.equals("[]"));

  }

  @Test
  public void test108() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test108"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    Object obj11 = treeSet0.higher((Object)1.0f);
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    boolean b13 = treeSet12.isEmpty();
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    java.util.Iterator iterator16 = treeSet14.descendingIterator();
    boolean b17 = treeSet12.containsAll((java.util.Collection)treeSet14);
    Object obj19 = treeSet12.higher((Object)(short)(-1));
    Object[] obj_array20 = treeSet12.toArray();
    java.util.TreeSet treeSet21 = new java.util.TreeSet((java.util.Collection)treeSet12);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet22 = treeSet0.headSet((Object)treeSet21);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);

  }

  @Test
  public void test109() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test109"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.Iterator iterator10 = treeSet8.descendingIterator();
    java.util.NavigableSet navigableSet13 = treeSet8.tailSet((Object)(byte)10, true);
    boolean b14 = treeSet7.retainAll((java.util.Collection)treeSet8);
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    java.util.Iterator iterator16 = treeSet15.descendingIterator();
    Object[] obj_array18 = new Object[] { (byte)10 };
    Object[] obj_array19 = treeSet15.toArray(obj_array18);
    java.util.SortedSet sortedSet21 = treeSet15.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet22 = new java.util.TreeSet((java.util.Collection)sortedSet21);
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    java.util.Iterator iterator25 = treeSet23.descendingIterator();
    java.util.NavigableSet navigableSet28 = treeSet23.tailSet((Object)(byte)10, true);
    boolean b29 = treeSet22.retainAll((java.util.Collection)treeSet23);
    java.util.NavigableSet navigableSet30 = treeSet23.descendingSet();
    Object obj31 = treeSet8.floor((Object)treeSet23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);

  }

  @Test
  public void test110() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test110"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.headSet((Object)1.0d);
    java.util.Spliterator spliterator7 = treeSet0.spliterator();
    java.util.NavigableSet navigableSet8 = treeSet0.descendingSet();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    Object[] obj_array16 = treeSet9.toArray(obj_array15);
    Object obj18 = treeSet9.floor((Object)(byte)(-1));
    boolean b20 = treeSet9.contains((Object)0);
    int i21 = treeSet9.size();
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet23 = treeSet0.headSet((Object)treeSet9, true);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i21 == 0);

  }

  @Test
  public void test111() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test111"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.SortedSet)treeSet0);
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    Object[] obj_array13 = new Object[] { (byte)10 };
    Object[] obj_array14 = treeSet10.toArray(obj_array13);
    Object[] obj_array15 = treeSet8.toArray(obj_array14);
    Object obj17 = treeSet8.lower((Object)(-1.0f));
    java.util.Comparator comparator18 = treeSet8.comparator();
    Object obj19 = treeSet0.floor((Object)treeSet8);
    String str20 = treeSet8.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "[]"+ "'", str20.equals("[]"));

  }

  @Test
  public void test112() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test112"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b7 = treeSet3.remove((Object)(short)10);
    Object obj8 = treeSet3.clone();
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)treeSet3);
    boolean b10 = treeSet3.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);

  }

  @Test
  public void test113() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test113"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    java.util.TreeSet treeSet8 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);

  }

  @Test
  public void test114() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test114"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    boolean b17 = treeSet0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);

  }

  @Test
  public void test115() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test115"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object[] obj_array9 = new Object[] { (byte)10 };
    Object[] obj_array10 = treeSet6.toArray(obj_array9);
    Object obj11 = treeSet6.pollLast();
    java.util.Comparator comparator12 = treeSet6.comparator();
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet6);
    java.util.Iterator iterator14 = treeSet6.descendingIterator();
    Object obj15 = treeSet6.clone();
    java.util.Iterator iterator16 = treeSet6.descendingIterator();
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    java.util.Spliterator spliterator19 = treeSet17.spliterator();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object obj22 = treeSet17.lower((Object)treeSet20);
    boolean b23 = treeSet20.isEmpty();
    Object obj24 = treeSet20.pollFirst();
    Object obj25 = treeSet6.ceiling(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);

  }

  @Test
  public void test116() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test116"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    java.util.SortedSet sortedSet8 = treeSet2.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)sortedSet8);
    boolean b10 = treeSet0.addAll((java.util.Collection)sortedSet8);
    String str11 = treeSet0.toString();
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    java.util.Spliterator spliterator14 = treeSet12.spliterator();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    java.util.Iterator iterator16 = treeSet15.descendingIterator();
    Object obj17 = treeSet12.lower((Object)treeSet15);
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    Object[] obj_array21 = new Object[] { (byte)10 };
    Object[] obj_array22 = treeSet18.toArray(obj_array21);
    Object obj23 = treeSet18.pollLast();
    java.util.Comparator comparator24 = treeSet18.comparator();
    boolean b25 = treeSet12.addAll((java.util.Collection)treeSet18);
    boolean b26 = treeSet0.equals((Object)b25);
    treeSet0.clear();
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    Object[] obj_array31 = new Object[] { (byte)10 };
    Object[] obj_array32 = treeSet28.toArray(obj_array31);
    java.util.SortedSet sortedSet34 = treeSet28.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet35 = new java.util.TreeSet((java.util.Collection)sortedSet34);
    Object obj36 = treeSet35.clone();
    java.util.TreeSet treeSet37 = new java.util.TreeSet();
    java.util.Iterator iterator38 = treeSet37.descendingIterator();
    java.util.TreeSet treeSet39 = new java.util.TreeSet();
    java.util.Iterator iterator40 = treeSet39.descendingIterator();
    Object[] obj_array42 = new Object[] { (byte)10 };
    Object[] obj_array43 = treeSet39.toArray(obj_array42);
    Object[] obj_array44 = treeSet37.toArray(obj_array43);
    Object obj46 = treeSet37.lower((Object)(-1.0f));
    java.util.Spliterator spliterator47 = treeSet37.spliterator();
    boolean b48 = treeSet35.addAll((java.util.Collection)treeSet37);
    java.util.Iterator iterator49 = treeSet37.iterator();
    java.util.NavigableSet navigableSet52 = treeSet37.tailSet((Object)(-1), true);
    boolean b53 = treeSet0.contains((Object)true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]"+ "'", str11.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);

  }

  @Test
  public void test117() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test117"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.TreeSet treeSet6 = new java.util.TreeSet((java.util.Collection)treeSet0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    java.util.Iterator iterator11 = treeSet9.descendingIterator();
    boolean b12 = treeSet7.containsAll((java.util.Collection)treeSet9);
    Object obj14 = treeSet7.higher((Object)(short)(-1));
    Object[] obj_array15 = treeSet7.toArray();
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)treeSet7);
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    boolean b18 = treeSet17.isEmpty();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    java.util.Iterator iterator21 = treeSet19.descendingIterator();
    boolean b22 = treeSet17.containsAll((java.util.Collection)treeSet19);
    java.util.stream.Stream stream23 = treeSet17.parallelStream();
    Object obj24 = treeSet17.clone();
    int i25 = treeSet17.size();
    boolean b26 = treeSet7.addAll((java.util.Collection)treeSet17);
    boolean b27 = treeSet6.remove((Object)b26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b12 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);

  }

  @Test
  public void test118() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test118"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.stream.Stream stream5 = treeSet0.stream();
    boolean b6 = treeSet0.isEmpty();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    Object[] obj_array21 = new Object[] { (byte)10 };
    Object[] obj_array22 = treeSet18.toArray(obj_array21);
    Object[] obj_array23 = treeSet16.toArray(obj_array22);
    Object obj25 = treeSet16.floor((Object)(byte)(-1));
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.Iterator iterator27 = treeSet26.descendingIterator();
    Object[] obj_array29 = new Object[] { (byte)10 };
    Object[] obj_array30 = treeSet26.toArray(obj_array29);
    Object obj31 = treeSet26.pollLast();
    Object[] obj_array32 = treeSet26.toArray();
    Object[] obj_array33 = treeSet16.toArray(obj_array32);
    Object[] obj_array34 = treeSet7.toArray(obj_array33);
    boolean b35 = treeSet0.containsAll((java.util.Collection)treeSet7);
    Object[] obj_array36 = treeSet0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);

  }

  @Test
  public void test119() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test119"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    Object obj6 = treeSet0.pollLast();
    java.util.Collection collection7 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b8 = treeSet0.retainAll(collection7);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj6);

  }

  @Test
  public void test120() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test120"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    Object obj8 = treeSet7.clone();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    Object[] obj_array16 = treeSet9.toArray(obj_array15);
    Object obj18 = treeSet9.lower((Object)(-1.0f));
    java.util.Spliterator spliterator19 = treeSet9.spliterator();
    boolean b20 = treeSet7.addAll((java.util.Collection)treeSet9);
    java.util.function.Predicate predicate21 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b22 = treeSet9.removeIf(predicate21);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);

  }

  @Test
  public void test121() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test121"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object[] obj_array9 = new Object[] { (byte)10 };
    Object[] obj_array10 = treeSet6.toArray(obj_array9);
    Object obj11 = treeSet6.pollLast();
    java.util.Comparator comparator12 = treeSet6.comparator();
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet6);
    java.util.Iterator iterator14 = treeSet6.descendingIterator();
    Object obj15 = treeSet6.pollLast();
    // The following exception was thrown during execution in test generation
    try {
      Object obj16 = treeSet6.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);

  }

  @Test
  public void test122() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test122"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.function.Predicate predicate5 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b6 = treeSet0.removeIf(predicate5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);

  }

  @Test
  public void test123() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test123"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    Object obj6 = treeSet0.pollLast();
    // The following exception was thrown during execution in test generation
    try {
      Object obj7 = treeSet0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj6);

  }

  @Test
  public void test124() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test124"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.Comparator comparator6 = treeSet0.comparator();
    Object obj7 = null;
    Object obj8 = treeSet0.lower(obj7);
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    Object[] obj_array16 = treeSet9.toArray(obj_array15);
    Object obj18 = treeSet9.floor((Object)(byte)(-1));
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    Object[] obj_array22 = new Object[] { (byte)10 };
    Object[] obj_array23 = treeSet19.toArray(obj_array22);
    Object obj24 = treeSet19.pollLast();
    Object[] obj_array25 = treeSet19.toArray();
    Object[] obj_array26 = treeSet9.toArray(obj_array25);
    Object[] obj_array27 = treeSet0.toArray(obj_array26);
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.TreeSet treeSet29 = new java.util.TreeSet();
    java.util.Iterator iterator30 = treeSet29.descendingIterator();
    Object[] obj_array32 = new Object[] { (byte)10 };
    Object[] obj_array33 = treeSet29.toArray(obj_array32);
    Object obj34 = treeSet29.pollLast();
    Object[] obj_array35 = treeSet29.toArray();
    Object obj36 = treeSet28.lower((Object)obj_array35);
    java.util.TreeSet treeSet38 = new java.util.TreeSet();
    java.util.Iterator iterator39 = treeSet38.descendingIterator();
    java.util.TreeSet treeSet40 = new java.util.TreeSet();
    java.util.Iterator iterator41 = treeSet40.descendingIterator();
    Object[] obj_array43 = new Object[] { (byte)10 };
    Object[] obj_array44 = treeSet40.toArray(obj_array43);
    Object[] obj_array45 = treeSet38.toArray(obj_array44);
    Object obj47 = treeSet38.lower((Object)(-1.0f));
    java.util.Comparator comparator48 = treeSet38.comparator();
    java.util.TreeSet treeSet49 = new java.util.TreeSet();
    java.util.Iterator iterator50 = treeSet49.descendingIterator();
    java.util.Spliterator spliterator51 = treeSet49.spliterator();
    java.util.TreeSet treeSet52 = new java.util.TreeSet();
    java.util.Iterator iterator53 = treeSet52.descendingIterator();
    Object obj54 = treeSet49.lower((Object)treeSet52);
    int i55 = treeSet52.size();
    java.util.TreeSet treeSet56 = new java.util.TreeSet();
    boolean b57 = treeSet56.isEmpty();
    java.util.TreeSet treeSet58 = new java.util.TreeSet();
    java.util.Iterator iterator59 = treeSet58.descendingIterator();
    Object[] obj_array61 = new Object[] { (byte)10 };
    Object[] obj_array62 = treeSet58.toArray(obj_array61);
    java.util.SortedSet sortedSet64 = treeSet58.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet65 = new java.util.TreeSet((java.util.Collection)sortedSet64);
    boolean b66 = treeSet56.addAll((java.util.Collection)sortedSet64);
    Object obj67 = treeSet52.lower((Object)b66);
    java.util.TreeSet treeSet68 = new java.util.TreeSet();
    java.util.Iterator iterator69 = treeSet68.descendingIterator();
    Object[] obj_array71 = new Object[] { (byte)10 };
    Object[] obj_array72 = treeSet68.toArray(obj_array71);
    java.util.SortedSet sortedSet74 = treeSet68.headSet((Object)1.0d);
    String str75 = treeSet68.toString();
    Object obj76 = treeSet52.higher((Object)treeSet68);
    java.util.TreeSet treeSet77 = new java.util.TreeSet();
    java.util.Iterator iterator78 = treeSet77.descendingIterator();
    Object[] obj_array80 = new Object[] { (byte)10 };
    Object[] obj_array81 = treeSet77.toArray(obj_array80);
    java.util.SortedSet sortedSet83 = treeSet77.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet84 = new java.util.TreeSet((java.util.SortedSet)treeSet77);
    java.util.NavigableSet navigableSet85 = treeSet77.descendingSet();
    Object obj86 = treeSet68.lower((Object)navigableSet85);
    boolean b87 = treeSet38.removeAll((java.util.Collection)treeSet68);
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet89 = treeSet0.subSet((Object)obj_array35, false, (Object)treeSet38, false);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str75 + "' != '" + "[]"+ "'", str75.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array80);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array81);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet83);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj86);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b87 == false);

  }

  @Test
  public void test125() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test125"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.SortedSet sortedSet21 = treeSet19.headSet((Object)(byte)0);
    Object obj22 = treeSet7.lower((Object)treeSet19);
    java.util.Iterator iterator23 = treeSet7.descendingIterator();
    java.util.NavigableSet navigableSet24 = treeSet7.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet24);

  }

  @Test
  public void test126() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test126"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.Spliterator spliterator12 = treeSet10.spliterator();
    java.util.TreeSet treeSet13 = new java.util.TreeSet();
    java.util.Iterator iterator14 = treeSet13.descendingIterator();
    Object obj15 = treeSet10.lower((Object)treeSet13);
    boolean b16 = treeSet13.isEmpty();
    Object obj17 = treeSet0.floor((Object)treeSet13);
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    java.util.Iterator iterator20 = treeSet18.descendingIterator();
    java.util.NavigableSet navigableSet23 = treeSet18.tailSet((Object)(byte)10, true);
    boolean b24 = treeSet0.addAll((java.util.Collection)treeSet18);
    java.util.function.Predicate predicate25 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b26 = treeSet0.removeIf(predicate25);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);

  }

  @Test
  public void test127() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test127"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    Object obj7 = treeSet0.clone();
    int i8 = treeSet0.size();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    boolean b10 = treeSet9.isEmpty();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    java.util.SortedSet sortedSet17 = treeSet11.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.Collection)sortedSet17);
    boolean b19 = treeSet9.addAll((java.util.Collection)sortedSet17);
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    java.util.Spliterator spliterator22 = treeSet20.spliterator();
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    Object obj25 = treeSet20.lower((Object)treeSet23);
    int i26 = treeSet23.size();
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    boolean b28 = treeSet27.isEmpty();
    java.util.TreeSet treeSet29 = new java.util.TreeSet();
    java.util.Iterator iterator30 = treeSet29.descendingIterator();
    Object[] obj_array32 = new Object[] { (byte)10 };
    Object[] obj_array33 = treeSet29.toArray(obj_array32);
    java.util.SortedSet sortedSet35 = treeSet29.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet36 = new java.util.TreeSet((java.util.Collection)sortedSet35);
    boolean b37 = treeSet27.addAll((java.util.Collection)sortedSet35);
    Object obj38 = treeSet23.lower((Object)b37);
    boolean b40 = treeSet23.contains((Object)(byte)100);
    java.util.stream.Stream stream41 = treeSet23.parallelStream();
    java.util.TreeSet treeSet42 = new java.util.TreeSet((java.util.Collection)treeSet23);
    java.util.Comparator comparator43 = null;
    java.util.TreeSet treeSet44 = new java.util.TreeSet(comparator43);
    boolean b45 = treeSet42.containsAll((java.util.Collection)treeSet44);
    boolean b46 = treeSet9.add((Object)b45);
    boolean b47 = treeSet0.addAll((java.util.Collection)treeSet9);
    java.util.TreeSet treeSet48 = new java.util.TreeSet();
    java.util.TreeSet treeSet49 = new java.util.TreeSet();
    java.util.Iterator iterator50 = treeSet49.descendingIterator();
    Object[] obj_array52 = new Object[] { (byte)10 };
    Object[] obj_array53 = treeSet49.toArray(obj_array52);
    Object obj54 = treeSet49.pollLast();
    Object[] obj_array55 = treeSet49.toArray();
    Object obj56 = treeSet48.lower((Object)obj_array55);
    java.util.TreeSet treeSet57 = new java.util.TreeSet();
    java.util.Iterator iterator58 = treeSet57.descendingIterator();
    Object[] obj_array60 = new Object[] { (byte)10 };
    Object[] obj_array61 = treeSet57.toArray(obj_array60);
    java.util.SortedSet sortedSet63 = treeSet57.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet64 = new java.util.TreeSet((java.util.Collection)sortedSet63);
    Object obj65 = treeSet64.clone();
    java.util.TreeSet treeSet66 = new java.util.TreeSet();
    java.util.Iterator iterator67 = treeSet66.descendingIterator();
    java.util.TreeSet treeSet68 = new java.util.TreeSet();
    java.util.Iterator iterator69 = treeSet68.descendingIterator();
    Object[] obj_array71 = new Object[] { (byte)10 };
    Object[] obj_array72 = treeSet68.toArray(obj_array71);
    Object[] obj_array73 = treeSet66.toArray(obj_array72);
    Object obj75 = treeSet66.lower((Object)(-1.0f));
    java.util.Spliterator spliterator76 = treeSet66.spliterator();
    boolean b77 = treeSet64.addAll((java.util.Collection)treeSet66);
    java.util.Iterator iterator78 = treeSet66.iterator();
    Object obj79 = treeSet48.lower((Object)iterator78);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet80 = treeSet9.headSet((Object)iterator78);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b77 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj79);

  }

  @Test
  public void test128() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test128"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b7 = treeSet3.remove((Object)(short)10);
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.Spliterator spliterator10 = treeSet8.spliterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object obj13 = treeSet8.lower((Object)treeSet11);
    Object obj14 = treeSet8.pollLast();
    boolean b15 = treeSet3.equals(obj14);
    int i16 = treeSet3.size();
    java.util.NavigableSet navigableSet17 = treeSet3.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);

  }

  @Test
  public void test129() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test129"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b7 = treeSet3.remove((Object)(short)10);
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    boolean b9 = treeSet8.isEmpty();
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.Iterator iterator12 = treeSet10.descendingIterator();
    boolean b13 = treeSet8.containsAll((java.util.Collection)treeSet10);
    Object obj15 = treeSet8.higher((Object)(short)(-1));
    Object[] obj_array16 = treeSet8.toArray();
    java.util.TreeSet treeSet17 = new java.util.TreeSet((java.util.Collection)treeSet8);
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    boolean b19 = treeSet18.isEmpty();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    java.util.Iterator iterator22 = treeSet20.descendingIterator();
    boolean b23 = treeSet18.containsAll((java.util.Collection)treeSet20);
    java.util.stream.Stream stream24 = treeSet18.parallelStream();
    Object obj25 = treeSet18.clone();
    int i26 = treeSet18.size();
    boolean b27 = treeSet8.addAll((java.util.Collection)treeSet18);
    java.util.SortedSet sortedSet28 = treeSet3.headSet((Object)b27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet28);

  }

  @Test
  public void test130() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test130"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.SortedSet sortedSet21 = treeSet19.headSet((Object)(byte)0);
    Object obj22 = treeSet7.lower((Object)treeSet19);
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    Object[] obj_array26 = new Object[] { (byte)10 };
    Object[] obj_array27 = treeSet23.toArray(obj_array26);
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    Object[] obj_array31 = new Object[] { (byte)10 };
    Object[] obj_array32 = treeSet28.toArray(obj_array31);
    java.util.SortedSet sortedSet34 = treeSet28.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet35 = new java.util.TreeSet((java.util.Collection)sortedSet34);
    boolean b36 = treeSet23.addAll((java.util.Collection)treeSet35);
    Object obj37 = treeSet7.lower((Object)b36);
    Object obj38 = treeSet7.pollLast();
    java.util.TreeSet treeSet39 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet40 = new java.util.TreeSet();
    java.util.Iterator iterator41 = treeSet40.descendingIterator();
    java.util.Spliterator spliterator42 = treeSet40.spliterator();
    java.util.TreeSet treeSet43 = new java.util.TreeSet();
    java.util.Iterator iterator44 = treeSet43.descendingIterator();
    Object obj45 = treeSet40.lower((Object)treeSet43);
    java.util.TreeSet treeSet46 = new java.util.TreeSet();
    java.util.Iterator iterator47 = treeSet46.descendingIterator();
    Object[] obj_array49 = new Object[] { (byte)10 };
    Object[] obj_array50 = treeSet46.toArray(obj_array49);
    Object obj51 = treeSet46.pollLast();
    java.util.Comparator comparator52 = treeSet46.comparator();
    boolean b53 = treeSet40.addAll((java.util.Collection)treeSet46);
    java.util.Iterator iterator54 = treeSet46.descendingIterator();
    java.util.TreeSet treeSet55 = new java.util.TreeSet();
    boolean b56 = treeSet55.isEmpty();
    java.util.TreeSet treeSet57 = new java.util.TreeSet();
    java.util.Iterator iterator58 = treeSet57.descendingIterator();
    java.util.Iterator iterator59 = treeSet57.descendingIterator();
    boolean b60 = treeSet55.containsAll((java.util.Collection)treeSet57);
    java.util.stream.Stream stream61 = treeSet55.parallelStream();
    Object obj62 = treeSet46.higher((Object)treeSet55);
    boolean b63 = treeSet39.removeAll((java.util.Collection)treeSet55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);

  }

  @Test
  public void test131() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test131"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.Iterator iterator3 = treeSet0.descendingIterator();
    int i4 = treeSet0.size();
    java.util.stream.Stream stream5 = treeSet0.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i4 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream5);

  }

  @Test
  public void test132() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test132"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    java.util.Spliterator spliterator21 = treeSet19.spliterator();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object obj24 = treeSet19.lower((Object)treeSet22);
    int i25 = treeSet22.size();
    Object obj27 = treeSet22.lower((Object)true);
    java.util.Comparator comparator28 = treeSet22.comparator();
    boolean b29 = treeSet18.equals((Object)comparator28);
    boolean b30 = treeSet7.remove((Object)b29);
    Object obj31 = treeSet7.pollLast();
    java.util.TreeSet treeSet32 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet33 = new java.util.TreeSet();
    java.util.Iterator iterator34 = treeSet33.descendingIterator();
    Object[] obj_array36 = new Object[] { (byte)10 };
    Object[] obj_array37 = treeSet33.toArray(obj_array36);
    java.util.SortedSet sortedSet39 = treeSet33.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet40 = new java.util.TreeSet();
    java.util.Iterator iterator41 = treeSet40.descendingIterator();
    Object[] obj_array43 = new Object[] { (byte)10 };
    Object[] obj_array44 = treeSet40.toArray(obj_array43);
    Object obj45 = treeSet40.pollLast();
    java.util.Comparator comparator46 = treeSet40.comparator();
    Object obj47 = null;
    Object obj48 = treeSet40.lower(obj47);
    boolean b49 = treeSet33.containsAll((java.util.Collection)treeSet40);
    java.util.NavigableSet navigableSet50 = treeSet40.descendingSet();
    java.util.TreeSet treeSet51 = new java.util.TreeSet();
    java.util.TreeSet treeSet52 = new java.util.TreeSet();
    java.util.Iterator iterator53 = treeSet52.descendingIterator();
    java.util.Spliterator spliterator54 = treeSet52.spliterator();
    java.util.TreeSet treeSet55 = new java.util.TreeSet();
    java.util.Iterator iterator56 = treeSet55.descendingIterator();
    Object obj57 = treeSet52.lower((Object)treeSet55);
    int i58 = treeSet55.size();
    Object obj60 = treeSet55.lower((Object)true);
    java.util.Comparator comparator61 = treeSet55.comparator();
    boolean b62 = treeSet51.equals((Object)comparator61);
    boolean b63 = treeSet40.remove((Object)b62);
    Object obj64 = treeSet40.pollLast();
    treeSet40.clear();
    java.util.TreeSet treeSet66 = new java.util.TreeSet();
    java.util.SortedSet sortedSet68 = treeSet66.headSet((Object)(byte)0);
    boolean b69 = treeSet40.removeAll((java.util.Collection)sortedSet68);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet70 = treeSet7.tailSet((Object)sortedSet68);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);

  }

  @Test
  public void test133() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test133"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    boolean b2 = treeSet1.isEmpty();
    java.util.SortedSet sortedSet3 = treeSet0.headSet((Object)b2);
    java.util.TreeSet treeSet4 = new java.util.TreeSet(sortedSet3);
    java.util.TreeSet treeSet5 = new java.util.TreeSet();
    java.util.Iterator iterator6 = treeSet5.descendingIterator();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object[] obj_array12 = treeSet5.toArray(obj_array11);
    Object obj13 = treeSet4.lower((Object)treeSet5);
    java.util.Spliterator spliterator14 = treeSet5.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator14);

  }

  @Test
  public void test134() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test134"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object[] obj_array9 = new Object[] { (byte)10 };
    Object[] obj_array10 = treeSet6.toArray(obj_array9);
    Object obj11 = treeSet6.pollLast();
    java.util.Comparator comparator12 = treeSet6.comparator();
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet6);
    java.util.Iterator iterator14 = treeSet6.descendingIterator();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    boolean b16 = treeSet15.isEmpty();
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    java.util.Iterator iterator19 = treeSet17.descendingIterator();
    boolean b20 = treeSet15.containsAll((java.util.Collection)treeSet17);
    java.util.stream.Stream stream21 = treeSet15.parallelStream();
    Object obj22 = treeSet6.higher((Object)treeSet15);
    java.util.Iterator iterator23 = treeSet15.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);

  }

  @Test
  public void test135() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test135"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    java.util.SortedSet sortedSet8 = treeSet2.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)sortedSet8);
    boolean b10 = treeSet0.addAll((java.util.Collection)sortedSet8);
    String str11 = treeSet0.toString();
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    java.util.Iterator iterator14 = treeSet12.descendingIterator();
    java.util.NavigableSet navigableSet17 = treeSet12.tailSet((Object)(byte)10, true);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet18 = treeSet0.tailSet((Object)navigableSet17);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]"+ "'", str11.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);

  }

  @Test
  public void test136() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test136"); }


    java.util.Collection collection0 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.util.TreeSet treeSet1 = new java.util.TreeSet(collection0);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test137() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test137"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.NavigableSet navigableSet8 = treeSet0.tailSet((Object)(-1.0d), true);
    java.util.function.Predicate predicate9 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b10 = treeSet0.removeIf(predicate9);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet8);

  }

  @Test
  public void test138() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test138"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    Object obj8 = treeSet7.clone();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    Object[] obj_array16 = treeSet9.toArray(obj_array15);
    Object obj18 = treeSet9.lower((Object)(-1.0f));
    java.util.Spliterator spliterator19 = treeSet9.spliterator();
    boolean b20 = treeSet7.addAll((java.util.Collection)treeSet9);
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    java.util.TreeSet treeSet24 = new java.util.TreeSet();
    java.util.Iterator iterator25 = treeSet24.descendingIterator();
    Object[] obj_array27 = new Object[] { (byte)10 };
    Object[] obj_array28 = treeSet24.toArray(obj_array27);
    Object[] obj_array29 = treeSet22.toArray(obj_array28);
    Object obj31 = treeSet22.lower((Object)(-1.0f));
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    java.util.Spliterator spliterator34 = treeSet32.spliterator();
    java.util.TreeSet treeSet35 = new java.util.TreeSet();
    java.util.Iterator iterator36 = treeSet35.descendingIterator();
    Object obj37 = treeSet32.lower((Object)treeSet35);
    boolean b38 = treeSet35.isEmpty();
    Object obj39 = treeSet22.floor((Object)treeSet35);
    boolean b40 = treeSet22.isEmpty();
    java.util.TreeSet treeSet41 = new java.util.TreeSet();
    java.util.Iterator iterator42 = treeSet41.descendingIterator();
    Object[] obj_array44 = new Object[] { (byte)10 };
    Object[] obj_array45 = treeSet41.toArray(obj_array44);
    java.util.SortedSet sortedSet47 = treeSet41.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet48 = new java.util.TreeSet();
    java.util.Iterator iterator49 = treeSet48.descendingIterator();
    Object[] obj_array51 = new Object[] { (byte)10 };
    Object[] obj_array52 = treeSet48.toArray(obj_array51);
    Object obj53 = treeSet48.pollLast();
    java.util.Comparator comparator54 = treeSet48.comparator();
    Object obj55 = null;
    Object obj56 = treeSet48.lower(obj55);
    boolean b57 = treeSet41.containsAll((java.util.Collection)treeSet48);
    java.util.NavigableSet navigableSet58 = treeSet48.descendingSet();
    java.util.TreeSet treeSet59 = new java.util.TreeSet((java.util.SortedSet)treeSet48);
    java.util.TreeSet treeSet60 = new java.util.TreeSet();
    java.util.SortedSet sortedSet62 = treeSet60.headSet((Object)(byte)0);
    Object obj63 = treeSet48.lower((Object)treeSet60);
    boolean b64 = treeSet22.containsAll((java.util.Collection)treeSet48);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet65 = treeSet7.subSet((Object)10.0f, (Object)b64);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);

  }

  @Test
  public void test139() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test139"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.Comparator comparator10 = treeSet0.comparator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    java.util.Spliterator spliterator13 = treeSet11.spliterator();
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    Object obj16 = treeSet11.lower((Object)treeSet14);
    int i17 = treeSet14.size();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    boolean b19 = treeSet18.isEmpty();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object[] obj_array23 = new Object[] { (byte)10 };
    Object[] obj_array24 = treeSet20.toArray(obj_array23);
    java.util.SortedSet sortedSet26 = treeSet20.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet27 = new java.util.TreeSet((java.util.Collection)sortedSet26);
    boolean b28 = treeSet18.addAll((java.util.Collection)sortedSet26);
    Object obj29 = treeSet14.lower((Object)b28);
    java.util.TreeSet treeSet30 = new java.util.TreeSet();
    java.util.Iterator iterator31 = treeSet30.descendingIterator();
    Object[] obj_array33 = new Object[] { (byte)10 };
    Object[] obj_array34 = treeSet30.toArray(obj_array33);
    java.util.SortedSet sortedSet36 = treeSet30.headSet((Object)1.0d);
    String str37 = treeSet30.toString();
    Object obj38 = treeSet14.higher((Object)treeSet30);
    java.util.TreeSet treeSet39 = new java.util.TreeSet();
    java.util.Iterator iterator40 = treeSet39.descendingIterator();
    Object[] obj_array42 = new Object[] { (byte)10 };
    Object[] obj_array43 = treeSet39.toArray(obj_array42);
    java.util.SortedSet sortedSet45 = treeSet39.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet46 = new java.util.TreeSet((java.util.SortedSet)treeSet39);
    java.util.NavigableSet navigableSet47 = treeSet39.descendingSet();
    Object obj48 = treeSet30.lower((Object)navigableSet47);
    boolean b49 = treeSet0.removeAll((java.util.Collection)treeSet30);
    java.util.TreeSet treeSet50 = new java.util.TreeSet();
    java.util.Iterator iterator51 = treeSet50.descendingIterator();
    Object[] obj_array53 = new Object[] { (byte)10 };
    Object[] obj_array54 = treeSet50.toArray(obj_array53);
    Object obj55 = treeSet50.pollLast();
    java.util.Comparator comparator56 = treeSet50.comparator();
    Object obj57 = null;
    Object obj58 = treeSet50.lower(obj57);
    int i59 = treeSet50.size();
    boolean b60 = treeSet30.addAll((java.util.Collection)treeSet50);
    java.util.Spliterator spliterator61 = treeSet50.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "[]"+ "'", str37.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator61);

  }

  @Test
  public void test140() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test140"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    boolean b8 = treeSet0.remove((Object)"hi!");
    treeSet0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test141() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test141"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    Object obj8 = treeSet7.clone();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    Object[] obj_array16 = treeSet9.toArray(obj_array15);
    Object obj18 = treeSet9.lower((Object)(-1.0f));
    java.util.Spliterator spliterator19 = treeSet9.spliterator();
    boolean b20 = treeSet7.addAll((java.util.Collection)treeSet9);
    java.util.Iterator iterator21 = treeSet9.iterator();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object[] obj_array25 = new Object[] { (byte)10 };
    Object[] obj_array26 = treeSet22.toArray(obj_array25);
    Object obj27 = treeSet22.pollLast();
    java.util.TreeSet treeSet28 = new java.util.TreeSet((java.util.Collection)treeSet22);
    Object obj30 = treeSet28.ceiling((Object)0.0d);
    boolean b31 = treeSet9.removeAll((java.util.Collection)treeSet28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);

  }

  @Test
  public void test142() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test142"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    java.util.Spliterator spliterator21 = treeSet19.spliterator();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object obj24 = treeSet19.lower((Object)treeSet22);
    int i25 = treeSet22.size();
    Object obj27 = treeSet22.lower((Object)true);
    java.util.Comparator comparator28 = treeSet22.comparator();
    boolean b29 = treeSet18.equals((Object)comparator28);
    boolean b30 = treeSet7.remove((Object)b29);
    Object obj31 = treeSet7.pollLast();
    java.util.stream.Stream stream32 = treeSet7.parallelStream();
    Object[] obj_array33 = treeSet7.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);

  }

  @Test
  public void test143() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test143"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    Object obj7 = treeSet0.clone();
    int i8 = treeSet0.size();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    Object[] obj_array14 = treeSet0.toArray(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);

  }

  @Test
  public void test144() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test144"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    java.util.Spliterator spliterator21 = treeSet19.spliterator();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object obj24 = treeSet19.lower((Object)treeSet22);
    int i25 = treeSet22.size();
    Object obj27 = treeSet22.lower((Object)true);
    java.util.Comparator comparator28 = treeSet22.comparator();
    boolean b29 = treeSet18.equals((Object)comparator28);
    boolean b30 = treeSet7.remove((Object)b29);
    Object obj31 = treeSet7.pollLast();
    java.util.TreeSet treeSet32 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    Object obj33 = treeSet7.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj33);

  }

  @Test
  public void test145() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test145"); }


    java.util.Comparator comparator0 = null;
    java.util.TreeSet treeSet1 = new java.util.TreeSet(comparator0);
    Object obj2 = treeSet1.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj2);

  }

  @Test
  public void test146() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test146"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    Object obj8 = treeSet7.clone();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    Object[] obj_array16 = treeSet9.toArray(obj_array15);
    Object obj18 = treeSet9.lower((Object)(-1.0f));
    java.util.Spliterator spliterator19 = treeSet9.spliterator();
    boolean b20 = treeSet7.addAll((java.util.Collection)treeSet9);
    java.util.Iterator iterator21 = treeSet9.iterator();
    java.util.NavigableSet navigableSet24 = treeSet9.tailSet((Object)(-1), true);
    java.util.TreeSet treeSet25 = new java.util.TreeSet();
    boolean b26 = treeSet25.isEmpty();
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    java.util.Iterator iterator28 = treeSet27.descendingIterator();
    Object[] obj_array30 = new Object[] { (byte)10 };
    Object[] obj_array31 = treeSet27.toArray(obj_array30);
    java.util.SortedSet sortedSet33 = treeSet27.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet34 = new java.util.TreeSet((java.util.Collection)sortedSet33);
    boolean b35 = treeSet25.addAll((java.util.Collection)sortedSet33);
    String str36 = treeSet25.toString();
    java.util.TreeSet treeSet37 = new java.util.TreeSet();
    java.util.Iterator iterator38 = treeSet37.descendingIterator();
    java.util.Spliterator spliterator39 = treeSet37.spliterator();
    java.util.TreeSet treeSet40 = new java.util.TreeSet();
    java.util.Iterator iterator41 = treeSet40.descendingIterator();
    Object obj42 = treeSet37.lower((Object)treeSet40);
    java.util.TreeSet treeSet43 = new java.util.TreeSet();
    java.util.Iterator iterator44 = treeSet43.descendingIterator();
    Object[] obj_array46 = new Object[] { (byte)10 };
    Object[] obj_array47 = treeSet43.toArray(obj_array46);
    Object obj48 = treeSet43.pollLast();
    java.util.Comparator comparator49 = treeSet43.comparator();
    boolean b50 = treeSet37.addAll((java.util.Collection)treeSet43);
    boolean b51 = treeSet25.equals((Object)b50);
    treeSet25.clear();
    Object obj53 = treeSet9.higher((Object)treeSet25);
    java.util.TreeSet treeSet54 = new java.util.TreeSet();
    java.util.Iterator iterator55 = treeSet54.descendingIterator();
    Object[] obj_array57 = new Object[] { (byte)10 };
    Object[] obj_array58 = treeSet54.toArray(obj_array57);
    java.util.SortedSet sortedSet60 = treeSet54.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet61 = new java.util.TreeSet();
    java.util.Iterator iterator62 = treeSet61.descendingIterator();
    Object[] obj_array64 = new Object[] { (byte)10 };
    Object[] obj_array65 = treeSet61.toArray(obj_array64);
    Object obj66 = treeSet61.pollLast();
    java.util.Comparator comparator67 = treeSet61.comparator();
    Object obj68 = null;
    Object obj69 = treeSet61.lower(obj68);
    boolean b70 = treeSet54.containsAll((java.util.Collection)treeSet61);
    java.util.NavigableSet navigableSet71 = treeSet61.descendingSet();
    java.util.TreeSet treeSet72 = new java.util.TreeSet((java.util.SortedSet)treeSet61);
    java.util.Comparator comparator73 = treeSet61.comparator();
    Object obj74 = treeSet9.lower((Object)comparator73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "[]"+ "'", str36.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj74);

  }

  @Test
  public void test147() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test147"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    Object[] obj_array18 = treeSet7.toArray();
    boolean b19 = treeSet7.isEmpty();
    java.util.Spliterator spliterator20 = treeSet7.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator20);

  }

  @Test
  public void test148() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test148"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Iterator iterator2 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    boolean b4 = treeSet3.isEmpty();
    java.util.TreeSet treeSet5 = new java.util.TreeSet();
    java.util.Iterator iterator6 = treeSet5.descendingIterator();
    java.util.Iterator iterator7 = treeSet5.descendingIterator();
    boolean b8 = treeSet3.containsAll((java.util.Collection)treeSet5);
    Object obj10 = treeSet3.higher((Object)(short)(-1));
    Object[] obj_array11 = treeSet3.toArray();
    java.util.TreeSet treeSet12 = new java.util.TreeSet((java.util.Collection)treeSet3);
    // The following exception was thrown during execution in test generation
    try {
      boolean b13 = treeSet0.remove((Object)treeSet12);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b4 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);

  }

  @Test
  public void test149() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test149"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    Object obj7 = treeSet0.higher((Object)(short)(-1));
    Object[] obj_array8 = treeSet0.toArray();
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)treeSet0);
    java.util.TreeSet treeSet10 = new java.util.TreeSet((java.util.SortedSet)treeSet9);
    java.util.Spliterator spliterator11 = treeSet10.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator11);

  }

  @Test
  public void test150() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test150"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    java.util.Spliterator spliterator21 = treeSet19.spliterator();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object obj24 = treeSet19.lower((Object)treeSet22);
    int i25 = treeSet22.size();
    Object obj27 = treeSet22.lower((Object)true);
    java.util.Comparator comparator28 = treeSet22.comparator();
    boolean b29 = treeSet18.equals((Object)comparator28);
    boolean b30 = treeSet7.remove((Object)b29);
    Object obj31 = treeSet7.pollLast();
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    Object[] obj_array35 = new Object[] { (byte)10 };
    Object[] obj_array36 = treeSet32.toArray(obj_array35);
    Object obj37 = treeSet32.pollLast();
    java.util.NavigableSet navigableSet38 = treeSet32.descendingSet();
    boolean b39 = treeSet7.retainAll((java.util.Collection)treeSet32);
    java.util.TreeSet treeSet40 = new java.util.TreeSet();
    java.util.Iterator iterator41 = treeSet40.descendingIterator();
    Object[] obj_array43 = new Object[] { (byte)10 };
    Object[] obj_array44 = treeSet40.toArray(obj_array43);
    Object obj45 = treeSet40.pollLast();
    Object[] obj_array46 = treeSet40.toArray();
    java.util.NavigableSet navigableSet47 = treeSet40.descendingSet();
    java.util.stream.Stream stream48 = navigableSet47.stream();
    // The following exception was thrown during execution in test generation
    try {
      boolean b49 = treeSet32.add((Object)stream48);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream48);

  }

  @Test
  public void test151() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test151"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object[] obj_array9 = new Object[] { (byte)10 };
    Object[] obj_array10 = treeSet6.toArray(obj_array9);
    Object obj11 = treeSet6.pollLast();
    java.util.Comparator comparator12 = treeSet6.comparator();
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet6);
    java.util.Iterator iterator14 = treeSet6.descendingIterator();
    Object obj15 = treeSet6.pollLast();
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    boolean b17 = treeSet16.isEmpty();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    Object[] obj_array21 = new Object[] { (byte)10 };
    Object[] obj_array22 = treeSet18.toArray(obj_array21);
    java.util.SortedSet sortedSet24 = treeSet18.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet25 = new java.util.TreeSet((java.util.Collection)sortedSet24);
    boolean b26 = treeSet16.addAll((java.util.Collection)sortedSet24);
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    java.util.Iterator iterator28 = treeSet27.descendingIterator();
    java.util.Spliterator spliterator29 = treeSet27.spliterator();
    java.util.TreeSet treeSet30 = new java.util.TreeSet();
    java.util.Iterator iterator31 = treeSet30.descendingIterator();
    Object obj32 = treeSet27.lower((Object)treeSet30);
    int i33 = treeSet30.size();
    java.util.TreeSet treeSet34 = new java.util.TreeSet();
    boolean b35 = treeSet34.isEmpty();
    java.util.TreeSet treeSet36 = new java.util.TreeSet();
    java.util.Iterator iterator37 = treeSet36.descendingIterator();
    Object[] obj_array39 = new Object[] { (byte)10 };
    Object[] obj_array40 = treeSet36.toArray(obj_array39);
    java.util.SortedSet sortedSet42 = treeSet36.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet43 = new java.util.TreeSet((java.util.Collection)sortedSet42);
    boolean b44 = treeSet34.addAll((java.util.Collection)sortedSet42);
    Object obj45 = treeSet30.lower((Object)b44);
    boolean b47 = treeSet30.contains((Object)(byte)100);
    java.util.stream.Stream stream48 = treeSet30.parallelStream();
    java.util.TreeSet treeSet49 = new java.util.TreeSet((java.util.Collection)treeSet30);
    java.util.Comparator comparator50 = null;
    java.util.TreeSet treeSet51 = new java.util.TreeSet(comparator50);
    boolean b52 = treeSet49.containsAll((java.util.Collection)treeSet51);
    boolean b53 = treeSet16.add((Object)b52);
    Object obj54 = treeSet6.floor((Object)b52);
    java.util.function.Consumer consumer55 = null;
    // The following exception was thrown during execution in test generation
    try {
      treeSet6.forEach(consumer55);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj54);

  }

  @Test
  public void test152() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test152"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b6 = treeSet3.isEmpty();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    Object[] obj_array15 = new Object[] { (byte)10 };
    Object[] obj_array16 = treeSet12.toArray(obj_array15);
    java.util.SortedSet sortedSet18 = treeSet12.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet19 = new java.util.TreeSet((java.util.Collection)sortedSet18);
    boolean b20 = treeSet7.addAll((java.util.Collection)treeSet19);
    Object obj21 = treeSet3.ceiling((Object)b20);
    // The following exception was thrown during execution in test generation
    try {
      Object obj22 = treeSet3.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj21);

  }

  @Test
  public void test153() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test153"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    boolean b2 = treeSet1.isEmpty();
    java.util.SortedSet sortedSet3 = treeSet0.headSet((Object)b2);
    java.util.TreeSet treeSet4 = new java.util.TreeSet(sortedSet3);
    java.util.TreeSet treeSet5 = new java.util.TreeSet();
    java.util.Iterator iterator6 = treeSet5.descendingIterator();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object[] obj_array12 = treeSet5.toArray(obj_array11);
    Object obj13 = treeSet4.lower((Object)treeSet5);
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    Object[] obj_array17 = new Object[] { (byte)10 };
    Object[] obj_array18 = treeSet14.toArray(obj_array17);
    java.util.SortedSet sortedSet20 = treeSet14.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.Iterator iterator22 = treeSet21.descendingIterator();
    Object[] obj_array24 = new Object[] { (byte)10 };
    Object[] obj_array25 = treeSet21.toArray(obj_array24);
    Object obj26 = treeSet21.pollLast();
    java.util.Comparator comparator27 = treeSet21.comparator();
    Object obj28 = null;
    Object obj29 = treeSet21.lower(obj28);
    boolean b30 = treeSet14.containsAll((java.util.Collection)treeSet21);
    java.util.NavigableSet navigableSet31 = treeSet21.descendingSet();
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.TreeSet treeSet33 = new java.util.TreeSet();
    java.util.Iterator iterator34 = treeSet33.descendingIterator();
    java.util.Spliterator spliterator35 = treeSet33.spliterator();
    java.util.TreeSet treeSet36 = new java.util.TreeSet();
    java.util.Iterator iterator37 = treeSet36.descendingIterator();
    Object obj38 = treeSet33.lower((Object)treeSet36);
    int i39 = treeSet36.size();
    Object obj41 = treeSet36.lower((Object)true);
    java.util.Comparator comparator42 = treeSet36.comparator();
    boolean b43 = treeSet32.equals((Object)comparator42);
    boolean b44 = treeSet21.remove((Object)b43);
    Object obj45 = treeSet21.pollLast();
    java.util.TreeSet treeSet46 = new java.util.TreeSet();
    java.util.Iterator iterator47 = treeSet46.descendingIterator();
    java.util.TreeSet treeSet48 = new java.util.TreeSet();
    java.util.Iterator iterator49 = treeSet48.descendingIterator();
    Object[] obj_array51 = new Object[] { (byte)10 };
    Object[] obj_array52 = treeSet48.toArray(obj_array51);
    Object[] obj_array53 = treeSet46.toArray(obj_array52);
    Object obj54 = treeSet21.ceiling((Object)obj_array53);
    Object obj55 = treeSet4.higher((Object)obj_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i39 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj55);

  }

  @Test
  public void test154() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test154"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    java.util.Spliterator spliterator5 = treeSet3.spliterator();
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object obj8 = treeSet3.lower((Object)treeSet6);
    Object obj9 = treeSet0.lower((Object)treeSet6);
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    Object[] obj_array15 = new Object[] { (byte)10 };
    Object[] obj_array16 = treeSet12.toArray(obj_array15);
    Object[] obj_array17 = treeSet10.toArray(obj_array16);
    boolean b19 = treeSet10.add((Object)10.0d);
    java.util.SortedSet sortedSet20 = treeSet6.headSet((Object)b19);
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.Iterator iterator22 = treeSet21.descendingIterator();
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    Object[] obj_array26 = new Object[] { (byte)10 };
    Object[] obj_array27 = treeSet23.toArray(obj_array26);
    Object[] obj_array28 = treeSet21.toArray(obj_array27);
    Object obj30 = treeSet21.floor((Object)(byte)(-1));
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.Iterator iterator32 = treeSet31.descendingIterator();
    Object[] obj_array34 = new Object[] { (byte)10 };
    Object[] obj_array35 = treeSet31.toArray(obj_array34);
    Object obj36 = treeSet31.pollLast();
    Object[] obj_array37 = treeSet31.toArray();
    Object[] obj_array38 = treeSet21.toArray(obj_array37);
    Object[] obj_array39 = treeSet6.toArray(obj_array38);
    // The following exception was thrown during execution in test generation
    try {
      Object obj40 = treeSet6.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);

  }

  @Test
  public void test155() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test155"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.Spliterator spliterator10 = treeSet0.spliterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    java.util.Spliterator spliterator13 = treeSet11.spliterator();
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    Object obj16 = treeSet11.lower((Object)treeSet14);
    int i17 = treeSet14.size();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    boolean b19 = treeSet18.isEmpty();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object[] obj_array23 = new Object[] { (byte)10 };
    Object[] obj_array24 = treeSet20.toArray(obj_array23);
    java.util.SortedSet sortedSet26 = treeSet20.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet27 = new java.util.TreeSet((java.util.Collection)sortedSet26);
    boolean b28 = treeSet18.addAll((java.util.Collection)sortedSet26);
    Object obj29 = treeSet14.lower((Object)b28);
    boolean b31 = treeSet14.contains((Object)(byte)100);
    java.util.stream.Stream stream32 = treeSet14.parallelStream();
    java.util.TreeSet treeSet33 = new java.util.TreeSet((java.util.Collection)treeSet14);
    java.util.TreeSet treeSet34 = new java.util.TreeSet((java.util.Collection)treeSet33);
    // The following exception was thrown during execution in test generation
    try {
      boolean b35 = treeSet0.contains((Object)treeSet33);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream32);

  }

  @Test
  public void test156() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test156"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.floor((Object)(byte)(-1));
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    Object[] obj_array13 = new Object[] { (byte)10 };
    Object[] obj_array14 = treeSet10.toArray(obj_array13);
    java.util.SortedSet sortedSet16 = treeSet10.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    Object[] obj_array20 = new Object[] { (byte)10 };
    Object[] obj_array21 = treeSet17.toArray(obj_array20);
    Object obj22 = treeSet17.pollLast();
    java.util.Comparator comparator23 = treeSet17.comparator();
    Object obj24 = null;
    Object obj25 = treeSet17.lower(obj24);
    boolean b26 = treeSet10.containsAll((java.util.Collection)treeSet17);
    java.util.NavigableSet navigableSet27 = treeSet17.descendingSet();
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.TreeSet treeSet29 = new java.util.TreeSet();
    java.util.Iterator iterator30 = treeSet29.descendingIterator();
    java.util.Spliterator spliterator31 = treeSet29.spliterator();
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    Object obj34 = treeSet29.lower((Object)treeSet32);
    int i35 = treeSet32.size();
    Object obj37 = treeSet32.lower((Object)true);
    java.util.Comparator comparator38 = treeSet32.comparator();
    boolean b39 = treeSet28.equals((Object)comparator38);
    boolean b40 = treeSet17.remove((Object)b39);
    Object obj41 = treeSet17.pollLast();
    java.util.TreeSet treeSet42 = new java.util.TreeSet((java.util.SortedSet)treeSet17);
    java.util.TreeSet treeSet44 = new java.util.TreeSet();
    java.util.Iterator iterator45 = treeSet44.descendingIterator();
    Object[] obj_array47 = new Object[] { (byte)10 };
    Object[] obj_array48 = treeSet44.toArray(obj_array47);
    java.util.SortedSet sortedSet50 = treeSet44.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet51 = new java.util.TreeSet((java.util.Collection)sortedSet50);
    Object obj52 = treeSet51.clone();
    java.util.TreeSet treeSet53 = new java.util.TreeSet();
    java.util.Iterator iterator54 = treeSet53.descendingIterator();
    java.util.TreeSet treeSet55 = new java.util.TreeSet();
    java.util.Iterator iterator56 = treeSet55.descendingIterator();
    Object[] obj_array58 = new Object[] { (byte)10 };
    Object[] obj_array59 = treeSet55.toArray(obj_array58);
    Object[] obj_array60 = treeSet53.toArray(obj_array59);
    Object obj62 = treeSet53.lower((Object)(-1.0f));
    java.util.Spliterator spliterator63 = treeSet53.spliterator();
    boolean b64 = treeSet51.addAll((java.util.Collection)treeSet53);
    java.util.Iterator iterator65 = treeSet53.iterator();
    Object obj66 = treeSet53.pollLast();
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet68 = treeSet0.subSet((Object)treeSet42, false, (Object)treeSet53, false);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i35 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj66);

  }

  @Test
  public void test157() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test157"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Iterator iterator2 = treeSet0.descendingIterator();
    Object obj3 = treeSet0.pollFirst();
    java.util.NavigableSet navigableSet4 = treeSet0.descendingSet();
    java.util.function.Predicate predicate5 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b6 = treeSet0.removeIf(predicate5);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet4);

  }

  @Test
  public void test158() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test158"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    Object obj7 = treeSet0.clone();
    treeSet0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);

  }

  @Test
  public void test159() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test159"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    Object obj6 = treeSet0.pollLast();
    boolean b7 = treeSet0.isEmpty();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    Object[] obj_array11 = new Object[] { (byte)10 };
    Object[] obj_array12 = treeSet8.toArray(obj_array11);
    java.util.SortedSet sortedSet14 = treeSet8.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    java.util.Iterator iterator16 = treeSet15.descendingIterator();
    Object[] obj_array18 = new Object[] { (byte)10 };
    Object[] obj_array19 = treeSet15.toArray(obj_array18);
    Object obj20 = treeSet15.pollLast();
    java.util.Comparator comparator21 = treeSet15.comparator();
    Object obj22 = null;
    Object obj23 = treeSet15.lower(obj22);
    boolean b24 = treeSet8.containsAll((java.util.Collection)treeSet15);
    java.util.NavigableSet navigableSet25 = treeSet15.descendingSet();
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    java.util.Iterator iterator28 = treeSet27.descendingIterator();
    java.util.Spliterator spliterator29 = treeSet27.spliterator();
    java.util.TreeSet treeSet30 = new java.util.TreeSet();
    java.util.Iterator iterator31 = treeSet30.descendingIterator();
    Object obj32 = treeSet27.lower((Object)treeSet30);
    int i33 = treeSet30.size();
    Object obj35 = treeSet30.lower((Object)true);
    java.util.Comparator comparator36 = treeSet30.comparator();
    boolean b37 = treeSet26.equals((Object)comparator36);
    boolean b38 = treeSet15.remove((Object)b37);
    Object obj39 = treeSet15.pollLast();
    java.util.stream.Stream stream40 = treeSet15.parallelStream();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet41 = treeSet0.headSet((Object)treeSet15);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i33 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream40);

  }

  @Test
  public void test160() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test160"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.Comparator comparator10 = treeSet0.comparator();
    // The following exception was thrown during execution in test generation
    try {
      Object obj11 = treeSet0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator10);

  }

  @Test
  public void test161() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test161"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.Comparator comparator10 = treeSet0.comparator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    java.util.Spliterator spliterator13 = treeSet11.spliterator();
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    Object obj16 = treeSet11.lower((Object)treeSet14);
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    Object[] obj_array20 = new Object[] { (byte)10 };
    Object[] obj_array21 = treeSet17.toArray(obj_array20);
    Object obj22 = treeSet17.pollLast();
    java.util.Comparator comparator23 = treeSet17.comparator();
    boolean b24 = treeSet11.addAll((java.util.Collection)treeSet17);
    java.util.Iterator iterator25 = treeSet17.descendingIterator();
    Object obj26 = treeSet17.pollLast();
    Object obj27 = treeSet17.pollLast();
    boolean b28 = treeSet0.containsAll((java.util.Collection)treeSet17);
    String str29 = treeSet0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str29 + "' != '" + "[]"+ "'", str29.equals("[]"));

  }

  @Test
  public void test162() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test162"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    java.util.Spliterator spliterator21 = treeSet19.spliterator();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object obj24 = treeSet19.lower((Object)treeSet22);
    int i25 = treeSet22.size();
    Object obj27 = treeSet22.lower((Object)true);
    java.util.Comparator comparator28 = treeSet22.comparator();
    boolean b29 = treeSet18.equals((Object)comparator28);
    boolean b30 = treeSet7.remove((Object)b29);
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.Iterator iterator32 = treeSet31.descendingIterator();
    Object[] obj_array34 = new Object[] { (byte)10 };
    Object[] obj_array35 = treeSet31.toArray(obj_array34);
    Object obj36 = treeSet31.pollLast();
    java.util.Comparator comparator37 = treeSet31.comparator();
    Object obj38 = null;
    Object obj39 = treeSet31.lower(obj38);
    java.util.TreeSet treeSet40 = new java.util.TreeSet();
    java.util.Iterator iterator41 = treeSet40.descendingIterator();
    java.util.TreeSet treeSet42 = new java.util.TreeSet();
    java.util.Iterator iterator43 = treeSet42.descendingIterator();
    Object[] obj_array45 = new Object[] { (byte)10 };
    Object[] obj_array46 = treeSet42.toArray(obj_array45);
    Object[] obj_array47 = treeSet40.toArray(obj_array46);
    Object obj49 = treeSet40.floor((Object)(byte)(-1));
    java.util.TreeSet treeSet50 = new java.util.TreeSet();
    java.util.Iterator iterator51 = treeSet50.descendingIterator();
    Object[] obj_array53 = new Object[] { (byte)10 };
    Object[] obj_array54 = treeSet50.toArray(obj_array53);
    Object obj55 = treeSet50.pollLast();
    Object[] obj_array56 = treeSet50.toArray();
    Object[] obj_array57 = treeSet40.toArray(obj_array56);
    Object[] obj_array58 = treeSet31.toArray(obj_array57);
    Object[] obj_array59 = treeSet7.toArray(obj_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array59);

  }

  @Test
  public void test163() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test163"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    int i19 = treeSet18.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i19 == 0);

  }

  @Test
  public void test164() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test164"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    Object obj11 = treeSet0.higher((Object)1.0f);
    java.util.stream.Stream stream12 = treeSet0.stream();
    java.util.TreeSet treeSet13 = new java.util.TreeSet();
    java.util.Iterator iterator14 = treeSet13.descendingIterator();
    Object[] obj_array16 = new Object[] { (byte)10 };
    Object[] obj_array17 = treeSet13.toArray(obj_array16);
    java.util.SortedSet sortedSet19 = treeSet13.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object[] obj_array23 = new Object[] { (byte)10 };
    Object[] obj_array24 = treeSet20.toArray(obj_array23);
    Object obj25 = treeSet20.pollLast();
    java.util.Comparator comparator26 = treeSet20.comparator();
    Object obj27 = null;
    Object obj28 = treeSet20.lower(obj27);
    boolean b29 = treeSet13.containsAll((java.util.Collection)treeSet20);
    java.util.NavigableSet navigableSet30 = treeSet20.descendingSet();
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    java.util.Spliterator spliterator34 = treeSet32.spliterator();
    java.util.TreeSet treeSet35 = new java.util.TreeSet();
    java.util.Iterator iterator36 = treeSet35.descendingIterator();
    Object obj37 = treeSet32.lower((Object)treeSet35);
    int i38 = treeSet35.size();
    Object obj40 = treeSet35.lower((Object)true);
    java.util.Comparator comparator41 = treeSet35.comparator();
    boolean b42 = treeSet31.equals((Object)comparator41);
    boolean b43 = treeSet20.remove((Object)b42);
    Object obj44 = treeSet20.pollLast();
    treeSet20.clear();
    java.util.TreeSet treeSet46 = new java.util.TreeSet();
    java.util.SortedSet sortedSet48 = treeSet46.headSet((Object)(byte)0);
    boolean b49 = treeSet20.removeAll((java.util.Collection)sortedSet48);
    Object obj50 = treeSet0.higher((Object)b49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj50);

  }

  @Test
  public void test165() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test165"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b6 = treeSet3.isEmpty();
    treeSet3.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);

  }

  @Test
  public void test166() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test166"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    boolean b2 = treeSet1.isEmpty();
    java.util.SortedSet sortedSet3 = treeSet0.headSet((Object)b2);
    java.util.TreeSet treeSet4 = new java.util.TreeSet();
    java.util.Iterator iterator5 = treeSet4.descendingIterator();
    java.util.Spliterator spliterator6 = treeSet4.spliterator();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object obj9 = treeSet4.lower((Object)treeSet7);
    java.util.NavigableSet navigableSet12 = treeSet7.headSet((Object)(-1.0f), true);
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet7);
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    java.util.Spliterator spliterator16 = treeSet14.spliterator();
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    Object obj19 = treeSet14.lower((Object)treeSet17);
    int i20 = treeSet17.size();
    Object obj22 = treeSet17.lower((Object)true);
    boolean b23 = treeSet7.retainAll((java.util.Collection)treeSet17);
    java.util.function.Predicate predicate24 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b25 = treeSet7.removeIf(predicate24);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test167() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test167"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.stream.Stream stream5 = treeSet0.stream();
    boolean b6 = treeSet0.isEmpty();
    java.util.Iterator iterator7 = treeSet0.descendingIterator();
    Object obj8 = treeSet0.pollLast();
    java.util.Comparator comparator9 = treeSet0.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator9);

  }

  @Test
  public void test168() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test168"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    int i17 = treeSet0.size();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet0);
    Object obj19 = treeSet18.clone();
    java.util.function.Predicate predicate20 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b21 = treeSet18.removeIf(predicate20);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj19);

  }

  @Test
  public void test169() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test169"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    Object[] obj_array22 = new Object[] { (byte)10 };
    Object[] obj_array23 = treeSet19.toArray(obj_array22);
    java.util.SortedSet sortedSet25 = treeSet19.headSet((Object)1.0d);
    String str26 = treeSet19.toString();
    Object obj27 = treeSet3.higher((Object)treeSet19);
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    Object[] obj_array31 = new Object[] { (byte)10 };
    Object[] obj_array32 = treeSet28.toArray(obj_array31);
    java.util.SortedSet sortedSet34 = treeSet28.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet35 = new java.util.TreeSet();
    java.util.Iterator iterator36 = treeSet35.descendingIterator();
    Object[] obj_array38 = new Object[] { (byte)10 };
    Object[] obj_array39 = treeSet35.toArray(obj_array38);
    Object obj40 = treeSet35.pollLast();
    java.util.Comparator comparator41 = treeSet35.comparator();
    Object obj42 = null;
    Object obj43 = treeSet35.lower(obj42);
    boolean b44 = treeSet28.containsAll((java.util.Collection)treeSet35);
    java.util.NavigableSet navigableSet45 = treeSet35.descendingSet();
    java.util.TreeSet treeSet46 = new java.util.TreeSet((java.util.SortedSet)treeSet35);
    java.util.TreeSet treeSet47 = new java.util.TreeSet((java.util.Collection)treeSet46);
    java.util.TreeSet treeSet48 = new java.util.TreeSet();
    java.util.Iterator iterator49 = treeSet48.descendingIterator();
    Object[] obj_array51 = new Object[] { (byte)10 };
    Object[] obj_array52 = treeSet48.toArray(obj_array51);
    Object[] obj_array53 = treeSet47.toArray(obj_array52);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet55 = treeSet3.subSet((Object)obj_array53, (Object)0.0f);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[]"+ "'", str26.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array53);

  }

  @Test
  public void test170() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test170"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.Comparator comparator19 = treeSet7.comparator();
    java.util.Comparator comparator20 = treeSet7.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator20);

  }

  @Test
  public void test171() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test171"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    boolean b20 = treeSet3.contains((Object)(byte)100);
    java.util.stream.Stream stream21 = treeSet3.parallelStream();
    boolean b23 = treeSet3.contains((Object)(byte)100);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);

  }

  @Test
  public void test172() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test172"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.SortedSet sortedSet21 = treeSet19.headSet((Object)(byte)0);
    Object obj22 = treeSet7.lower((Object)treeSet19);
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    Object[] obj_array26 = new Object[] { (byte)10 };
    Object[] obj_array27 = treeSet23.toArray(obj_array26);
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    Object[] obj_array31 = new Object[] { (byte)10 };
    Object[] obj_array32 = treeSet28.toArray(obj_array31);
    java.util.SortedSet sortedSet34 = treeSet28.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet35 = new java.util.TreeSet((java.util.Collection)sortedSet34);
    boolean b36 = treeSet23.addAll((java.util.Collection)treeSet35);
    Object obj37 = treeSet7.lower((Object)b36);
    Object obj38 = treeSet7.pollLast();
    java.util.TreeSet treeSet39 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    String str40 = treeSet39.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str40 + "' != '" + "[]"+ "'", str40.equals("[]"));

  }

  @Test
  public void test173() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test173"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    Object[] obj_array6 = treeSet0.toArray();
    java.util.NavigableSet navigableSet7 = treeSet0.descendingSet();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    Object[] obj_array11 = new Object[] { (byte)10 };
    Object[] obj_array12 = treeSet8.toArray(obj_array11);
    java.util.SortedSet sortedSet14 = treeSet8.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    java.util.Iterator iterator16 = treeSet15.descendingIterator();
    Object[] obj_array18 = new Object[] { (byte)10 };
    Object[] obj_array19 = treeSet15.toArray(obj_array18);
    Object obj20 = treeSet15.pollLast();
    java.util.Comparator comparator21 = treeSet15.comparator();
    Object obj22 = null;
    Object obj23 = treeSet15.lower(obj22);
    boolean b24 = treeSet8.containsAll((java.util.Collection)treeSet15);
    java.util.NavigableSet navigableSet25 = treeSet15.descendingSet();
    java.util.TreeSet treeSet26 = new java.util.TreeSet((java.util.SortedSet)treeSet15);
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    java.util.SortedSet sortedSet29 = treeSet27.headSet((Object)(byte)0);
    Object obj30 = treeSet15.lower((Object)treeSet27);
    boolean b31 = treeSet0.containsAll((java.util.Collection)treeSet15);
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    java.util.Spliterator spliterator34 = treeSet32.spliterator();
    java.util.TreeSet treeSet35 = new java.util.TreeSet();
    java.util.Iterator iterator36 = treeSet35.descendingIterator();
    Object obj37 = treeSet32.lower((Object)treeSet35);
    int i38 = treeSet35.size();
    Object obj40 = treeSet35.lower((Object)true);
    java.util.Comparator comparator41 = treeSet35.comparator();
    java.util.Comparator comparator42 = treeSet35.comparator();
    // The following exception was thrown during execution in test generation
    try {
      boolean b43 = treeSet0.remove((Object)comparator42);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator42);

  }

  @Test
  public void test174() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test174"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    Object obj7 = treeSet0.clone();
    Object obj9 = treeSet0.floor((Object)(-1.0d));
    String str10 = treeSet0.toString();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    java.util.SortedSet sortedSet17 = treeSet11.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    Object[] obj_array21 = new Object[] { (byte)10 };
    Object[] obj_array22 = treeSet18.toArray(obj_array21);
    Object obj23 = treeSet18.pollLast();
    java.util.Comparator comparator24 = treeSet18.comparator();
    Object obj25 = null;
    Object obj26 = treeSet18.lower(obj25);
    boolean b27 = treeSet11.containsAll((java.util.Collection)treeSet18);
    java.util.NavigableSet navigableSet28 = treeSet18.descendingSet();
    java.util.TreeSet treeSet29 = new java.util.TreeSet((java.util.SortedSet)treeSet18);
    java.util.TreeSet treeSet30 = new java.util.TreeSet();
    java.util.SortedSet sortedSet32 = treeSet30.headSet((Object)(byte)0);
    Object obj33 = treeSet18.lower((Object)treeSet30);
    java.util.TreeSet treeSet34 = new java.util.TreeSet();
    java.util.Iterator iterator35 = treeSet34.descendingIterator();
    Object[] obj_array37 = new Object[] { (byte)10 };
    Object[] obj_array38 = treeSet34.toArray(obj_array37);
    java.util.TreeSet treeSet39 = new java.util.TreeSet();
    java.util.Iterator iterator40 = treeSet39.descendingIterator();
    Object[] obj_array42 = new Object[] { (byte)10 };
    Object[] obj_array43 = treeSet39.toArray(obj_array42);
    java.util.SortedSet sortedSet45 = treeSet39.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet46 = new java.util.TreeSet((java.util.Collection)sortedSet45);
    boolean b47 = treeSet34.addAll((java.util.Collection)treeSet46);
    Object obj48 = treeSet18.lower((Object)b47);
    Object obj49 = treeSet18.pollLast();
    java.util.TreeSet treeSet50 = new java.util.TreeSet((java.util.SortedSet)treeSet18);
    boolean b51 = treeSet18.isEmpty();
    java.util.Iterator iterator52 = treeSet18.descendingIterator();
    // The following exception was thrown during execution in test generation
    try {
      boolean b53 = treeSet0.remove((Object)iterator52);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[]"+ "'", str10.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator52);

  }

  @Test
  public void test175() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test175"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    Object obj7 = treeSet0.higher((Object)(short)(-1));
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    Object[] obj_array11 = new Object[] { (byte)10 };
    Object[] obj_array12 = treeSet8.toArray(obj_array11);
    Object obj13 = treeSet8.pollLast();
    Object[] obj_array14 = treeSet8.toArray();
    java.util.NavigableSet navigableSet15 = treeSet8.descendingSet();
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    Object[] obj_array19 = new Object[] { (byte)10 };
    Object[] obj_array20 = treeSet16.toArray(obj_array19);
    java.util.SortedSet sortedSet22 = treeSet16.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    Object[] obj_array26 = new Object[] { (byte)10 };
    Object[] obj_array27 = treeSet23.toArray(obj_array26);
    Object obj28 = treeSet23.pollLast();
    java.util.Comparator comparator29 = treeSet23.comparator();
    Object obj30 = null;
    Object obj31 = treeSet23.lower(obj30);
    boolean b32 = treeSet16.containsAll((java.util.Collection)treeSet23);
    java.util.NavigableSet navigableSet33 = treeSet23.descendingSet();
    java.util.TreeSet treeSet34 = new java.util.TreeSet((java.util.SortedSet)treeSet23);
    java.util.TreeSet treeSet35 = new java.util.TreeSet();
    java.util.SortedSet sortedSet37 = treeSet35.headSet((Object)(byte)0);
    Object obj38 = treeSet23.lower((Object)treeSet35);
    boolean b39 = treeSet8.containsAll((java.util.Collection)treeSet23);
    java.util.NavigableSet navigableSet41 = treeSet0.tailSet((Object)b39, false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet41);

  }

  @Test
  public void test176() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test176"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    int i17 = treeSet0.size();
    Object obj18 = null;
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object[] obj_array25 = new Object[] { (byte)10 };
    Object[] obj_array26 = treeSet22.toArray(obj_array25);
    Object[] obj_array27 = treeSet20.toArray(obj_array26);
    Object obj29 = treeSet20.floor((Object)(byte)(-1));
    boolean b31 = treeSet20.contains((Object)0);
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet33 = treeSet0.subSet(obj18, false, (Object)treeSet20, true);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == false);

  }

  @Test
  public void test177() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test177"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    java.util.Iterator iterator7 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.Spliterator spliterator10 = treeSet8.spliterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object obj13 = treeSet8.lower((Object)treeSet11);
    int i14 = treeSet11.size();
    treeSet11.clear();
    boolean b16 = treeSet0.removeAll((java.util.Collection)treeSet11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i14 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == false);

  }

  @Test
  public void test178() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test178"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b7 = treeSet3.remove((Object)(short)10);
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.Spliterator spliterator10 = treeSet8.spliterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object obj13 = treeSet8.lower((Object)treeSet11);
    Object obj14 = treeSet8.pollLast();
    boolean b15 = treeSet3.equals(obj14);
    int i16 = treeSet3.size();
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    Object[] obj_array20 = new Object[] { (byte)10 };
    Object[] obj_array21 = treeSet17.toArray(obj_array20);
    Object obj22 = treeSet17.pollLast();
    java.util.TreeSet treeSet23 = new java.util.TreeSet((java.util.Collection)treeSet17);
    boolean b24 = treeSet3.addAll((java.util.Collection)treeSet17);
    java.util.Spliterator spliterator25 = treeSet3.spliterator();
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.Iterator iterator27 = treeSet26.descendingIterator();
    Object[] obj_array29 = new Object[] { (byte)10 };
    Object[] obj_array30 = treeSet26.toArray(obj_array29);
    Object obj31 = treeSet26.pollLast();
    java.util.TreeSet treeSet32 = new java.util.TreeSet((java.util.Collection)treeSet26);
    java.util.TreeSet treeSet33 = new java.util.TreeSet();
    java.util.Iterator iterator34 = treeSet33.descendingIterator();
    Object[] obj_array36 = new Object[] { (byte)10 };
    Object[] obj_array37 = treeSet33.toArray(obj_array36);
    java.util.SortedSet sortedSet39 = treeSet33.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet40 = new java.util.TreeSet();
    java.util.Iterator iterator41 = treeSet40.descendingIterator();
    Object[] obj_array43 = new Object[] { (byte)10 };
    Object[] obj_array44 = treeSet40.toArray(obj_array43);
    Object obj45 = treeSet40.pollLast();
    java.util.Comparator comparator46 = treeSet40.comparator();
    Object obj47 = null;
    Object obj48 = treeSet40.lower(obj47);
    boolean b49 = treeSet33.containsAll((java.util.Collection)treeSet40);
    java.util.NavigableSet navigableSet50 = treeSet40.descendingSet();
    java.util.TreeSet treeSet51 = new java.util.TreeSet();
    java.util.TreeSet treeSet52 = new java.util.TreeSet();
    java.util.Iterator iterator53 = treeSet52.descendingIterator();
    java.util.Spliterator spliterator54 = treeSet52.spliterator();
    java.util.TreeSet treeSet55 = new java.util.TreeSet();
    java.util.Iterator iterator56 = treeSet55.descendingIterator();
    Object obj57 = treeSet52.lower((Object)treeSet55);
    int i58 = treeSet55.size();
    Object obj60 = treeSet55.lower((Object)true);
    java.util.Comparator comparator61 = treeSet55.comparator();
    boolean b62 = treeSet51.equals((Object)comparator61);
    boolean b63 = treeSet40.remove((Object)b62);
    Object obj64 = treeSet40.pollLast();
    treeSet40.clear();
    java.util.TreeSet treeSet66 = new java.util.TreeSet();
    java.util.SortedSet sortedSet68 = treeSet66.headSet((Object)(byte)0);
    boolean b69 = treeSet40.removeAll((java.util.Collection)sortedSet68);
    java.util.TreeSet treeSet70 = new java.util.TreeSet();
    java.util.Iterator iterator71 = treeSet70.descendingIterator();
    Object[] obj_array73 = new Object[] { (byte)10 };
    Object[] obj_array74 = treeSet70.toArray(obj_array73);
    java.util.SortedSet sortedSet76 = treeSet70.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet77 = new java.util.TreeSet((java.util.Collection)sortedSet76);
    Object obj78 = treeSet40.higher((Object)sortedSet76);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet79 = treeSet3.subSet((Object)treeSet26, obj78);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i16 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i58 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj78);

  }

  @Test
  public void test179() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test179"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.Iterator iterator10 = treeSet8.descendingIterator();
    java.util.NavigableSet navigableSet13 = treeSet8.tailSet((Object)(byte)10, true);
    boolean b14 = treeSet7.retainAll((java.util.Collection)treeSet8);
    treeSet7.clear();
    Object[] obj_array16 = null;
    // The following exception was thrown during execution in test generation
    try {
      Object[] obj_array17 = treeSet7.toArray(obj_array16);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);

  }

  @Test
  public void test180() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test180"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    boolean b7 = treeSet6.isEmpty();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.Iterator iterator10 = treeSet8.descendingIterator();
    boolean b11 = treeSet6.containsAll((java.util.Collection)treeSet8);
    int i12 = treeSet6.size();
    boolean b13 = treeSet0.containsAll((java.util.Collection)treeSet6);
    Object[] obj_array14 = treeSet0.toArray();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    java.util.Iterator iterator16 = treeSet15.descendingIterator();
    Object[] obj_array18 = new Object[] { (byte)10 };
    Object[] obj_array19 = treeSet15.toArray(obj_array18);
    java.util.SortedSet sortedSet21 = treeSet15.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet22 = new java.util.TreeSet((java.util.Collection)sortedSet21);
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    java.util.Iterator iterator25 = treeSet23.descendingIterator();
    java.util.NavigableSet navigableSet28 = treeSet23.tailSet((Object)(byte)10, true);
    boolean b29 = treeSet22.retainAll((java.util.Collection)treeSet23);
    java.util.NavigableSet navigableSet30 = treeSet23.descendingSet();
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.Iterator iterator32 = treeSet31.descendingIterator();
    java.util.Spliterator spliterator33 = treeSet31.spliterator();
    Object obj34 = treeSet31.pollFirst();
    String str35 = treeSet31.toString();
    java.util.TreeSet treeSet36 = new java.util.TreeSet();
    java.util.Iterator iterator37 = treeSet36.descendingIterator();
    Object[] obj_array39 = new Object[] { (byte)10 };
    Object[] obj_array40 = treeSet36.toArray(obj_array39);
    java.util.SortedSet sortedSet42 = treeSet36.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet43 = new java.util.TreeSet();
    java.util.Iterator iterator44 = treeSet43.descendingIterator();
    Object[] obj_array46 = new Object[] { (byte)10 };
    Object[] obj_array47 = treeSet43.toArray(obj_array46);
    Object obj48 = treeSet43.pollLast();
    java.util.Comparator comparator49 = treeSet43.comparator();
    Object obj50 = null;
    Object obj51 = treeSet43.lower(obj50);
    boolean b52 = treeSet36.containsAll((java.util.Collection)treeSet43);
    java.util.NavigableSet navigableSet53 = treeSet43.descendingSet();
    java.util.TreeSet treeSet54 = new java.util.TreeSet();
    java.util.TreeSet treeSet55 = new java.util.TreeSet();
    java.util.Iterator iterator56 = treeSet55.descendingIterator();
    java.util.Spliterator spliterator57 = treeSet55.spliterator();
    java.util.TreeSet treeSet58 = new java.util.TreeSet();
    java.util.Iterator iterator59 = treeSet58.descendingIterator();
    Object obj60 = treeSet55.lower((Object)treeSet58);
    int i61 = treeSet58.size();
    Object obj63 = treeSet58.lower((Object)true);
    java.util.Comparator comparator64 = treeSet58.comparator();
    boolean b65 = treeSet54.equals((Object)comparator64);
    boolean b66 = treeSet43.remove((Object)b65);
    Object[] obj_array67 = treeSet43.toArray();
    Object[] obj_array68 = treeSet31.toArray(obj_array67);
    Object[] obj_array69 = treeSet23.toArray(obj_array67);
    boolean b70 = treeSet0.retainAll((java.util.Collection)treeSet23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "[]"+ "'", str35.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b52 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i61 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b65 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b66 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);

  }

  @Test
  public void test181() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test181"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.NavigableSet navigableSet8 = treeSet3.headSet((Object)(-1.0f), true);
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    Object[] obj_array17 = new Object[] { (byte)10 };
    Object[] obj_array18 = treeSet14.toArray(obj_array17);
    java.util.SortedSet sortedSet20 = treeSet14.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet21 = new java.util.TreeSet((java.util.Collection)sortedSet20);
    boolean b22 = treeSet9.addAll((java.util.Collection)treeSet21);
    java.util.stream.Stream stream23 = treeSet21.stream();
    Object obj24 = treeSet3.ceiling((Object)treeSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);

  }

  @Test
  public void test182() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test182"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.SortedSet sortedSet21 = treeSet19.headSet((Object)(byte)0);
    Object obj22 = treeSet7.lower((Object)treeSet19);
    boolean b23 = treeSet7.isEmpty();
    java.util.TreeSet treeSet24 = new java.util.TreeSet();
    java.util.Iterator iterator25 = treeSet24.descendingIterator();
    java.util.Spliterator spliterator26 = treeSet24.spliterator();
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    java.util.Iterator iterator28 = treeSet27.descendingIterator();
    Object obj29 = treeSet24.lower((Object)treeSet27);
    java.util.TreeSet treeSet30 = new java.util.TreeSet();
    java.util.Iterator iterator31 = treeSet30.descendingIterator();
    Object[] obj_array33 = new Object[] { (byte)10 };
    Object[] obj_array34 = treeSet30.toArray(obj_array33);
    Object obj35 = treeSet30.pollLast();
    java.util.Comparator comparator36 = treeSet30.comparator();
    boolean b37 = treeSet24.addAll((java.util.Collection)treeSet30);
    java.util.Iterator iterator38 = treeSet30.descendingIterator();
    Object obj39 = treeSet30.clone();
    java.util.Iterator iterator40 = treeSet30.descendingIterator();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet41 = treeSet7.tailSet((Object)iterator40);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator40);

  }

  @Test
  public void test183() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test183"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b7 = treeSet3.remove((Object)(short)10);
    java.util.Spliterator spliterator8 = treeSet3.spliterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    Object obj16 = treeSet11.pollLast();
    Object[] obj_array17 = treeSet11.toArray();
    java.util.NavigableSet navigableSet18 = treeSet11.descendingSet();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    Object[] obj_array22 = new Object[] { (byte)10 };
    Object[] obj_array23 = treeSet19.toArray(obj_array22);
    java.util.SortedSet sortedSet25 = treeSet19.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.Iterator iterator27 = treeSet26.descendingIterator();
    Object[] obj_array29 = new Object[] { (byte)10 };
    Object[] obj_array30 = treeSet26.toArray(obj_array29);
    Object obj31 = treeSet26.pollLast();
    java.util.Comparator comparator32 = treeSet26.comparator();
    Object obj33 = null;
    Object obj34 = treeSet26.lower(obj33);
    boolean b35 = treeSet19.containsAll((java.util.Collection)treeSet26);
    java.util.NavigableSet navigableSet36 = treeSet26.descendingSet();
    java.util.TreeSet treeSet37 = new java.util.TreeSet((java.util.SortedSet)treeSet26);
    java.util.TreeSet treeSet38 = new java.util.TreeSet();
    java.util.SortedSet sortedSet40 = treeSet38.headSet((Object)(byte)0);
    Object obj41 = treeSet26.lower((Object)treeSet38);
    boolean b42 = treeSet11.containsAll((java.util.Collection)treeSet26);
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet44 = treeSet3.subSet((Object)1.0d, false, (Object)b42, false);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);

  }

  @Test
  public void test184() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test184"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.SortedSet sortedSet21 = treeSet19.headSet((Object)(byte)0);
    Object obj22 = treeSet7.lower((Object)treeSet19);
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    Object[] obj_array26 = new Object[] { (byte)10 };
    Object[] obj_array27 = treeSet23.toArray(obj_array26);
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    Object[] obj_array31 = new Object[] { (byte)10 };
    Object[] obj_array32 = treeSet28.toArray(obj_array31);
    java.util.SortedSet sortedSet34 = treeSet28.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet35 = new java.util.TreeSet((java.util.Collection)sortedSet34);
    boolean b36 = treeSet23.addAll((java.util.Collection)treeSet35);
    Object obj37 = treeSet7.lower((Object)b36);
    Object obj38 = treeSet7.pollLast();
    java.util.TreeSet treeSet39 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    boolean b40 = treeSet7.isEmpty();
    java.util.stream.Stream stream41 = treeSet7.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream41);

  }

  @Test
  public void test185() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test185"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    Object obj7 = treeSet0.clone();
    int i8 = treeSet0.size();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    boolean b10 = treeSet9.isEmpty();
    Object obj12 = treeSet9.ceiling((Object)(short)1);
    java.util.TreeSet treeSet13 = new java.util.TreeSet();
    java.util.Iterator iterator14 = treeSet13.descendingIterator();
    Object[] obj_array16 = new Object[] { (byte)10 };
    Object[] obj_array17 = treeSet13.toArray(obj_array16);
    java.util.SortedSet sortedSet19 = treeSet13.tailSet((Object)(byte)0);
    boolean b20 = treeSet9.retainAll((java.util.Collection)sortedSet19);
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.Iterator iterator22 = treeSet21.descendingIterator();
    java.util.Iterator iterator23 = treeSet21.descendingIterator();
    Object obj24 = treeSet21.pollFirst();
    java.util.TreeSet treeSet25 = new java.util.TreeSet();
    java.util.Iterator iterator26 = treeSet25.descendingIterator();
    Object[] obj_array28 = new Object[] { (byte)10 };
    Object[] obj_array29 = treeSet25.toArray(obj_array28);
    java.util.SortedSet sortedSet31 = treeSet25.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    Object[] obj_array35 = new Object[] { (byte)10 };
    Object[] obj_array36 = treeSet32.toArray(obj_array35);
    Object obj37 = treeSet32.pollLast();
    java.util.Comparator comparator38 = treeSet32.comparator();
    Object obj39 = null;
    Object obj40 = treeSet32.lower(obj39);
    boolean b41 = treeSet25.containsAll((java.util.Collection)treeSet32);
    java.util.NavigableSet navigableSet42 = treeSet32.descendingSet();
    Object obj43 = treeSet21.floor((Object)navigableSet42);
    boolean b44 = treeSet9.addAll((java.util.Collection)navigableSet42);
    Object obj45 = treeSet0.higher((Object)treeSet9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b44 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj45);

  }

  @Test
  public void test186() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test186"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    boolean b2 = treeSet1.isEmpty();
    java.util.SortedSet sortedSet3 = treeSet0.headSet((Object)b2);
    java.util.TreeSet treeSet4 = new java.util.TreeSet(sortedSet3);
    Object obj5 = treeSet4.clone();
    java.util.TreeSet treeSet6 = new java.util.TreeSet((java.util.SortedSet)treeSet4);
    boolean b8 = treeSet4.contains((Object)10.0f);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == false);

  }

  @Test
  public void test187() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test187"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    boolean b2 = treeSet1.isEmpty();
    java.util.SortedSet sortedSet3 = treeSet0.headSet((Object)b2);
    java.util.TreeSet treeSet4 = new java.util.TreeSet();
    java.util.Iterator iterator5 = treeSet4.descendingIterator();
    java.util.Spliterator spliterator6 = treeSet4.spliterator();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object obj9 = treeSet4.lower((Object)treeSet7);
    java.util.NavigableSet navigableSet12 = treeSet7.headSet((Object)(-1.0f), true);
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet7);
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    java.util.Spliterator spliterator16 = treeSet14.spliterator();
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    Object obj19 = treeSet14.lower((Object)treeSet17);
    int i20 = treeSet17.size();
    Object obj22 = treeSet17.lower((Object)true);
    boolean b23 = treeSet7.retainAll((java.util.Collection)treeSet17);
    boolean b24 = treeSet7.isEmpty();
    java.util.Iterator iterator25 = treeSet7.iterator();
    int i26 = treeSet7.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);

  }

  @Test
  public void test188() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test188"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    boolean b2 = treeSet1.isEmpty();
    java.util.SortedSet sortedSet3 = treeSet0.headSet((Object)b2);
    java.util.TreeSet treeSet4 = new java.util.TreeSet(sortedSet3);
    java.util.TreeSet treeSet5 = new java.util.TreeSet();
    java.util.Iterator iterator6 = treeSet5.descendingIterator();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object[] obj_array12 = treeSet5.toArray(obj_array11);
    Object obj13 = treeSet4.lower((Object)treeSet5);
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    java.util.Iterator iterator16 = treeSet15.descendingIterator();
    Object[] obj_array18 = new Object[] { (byte)10 };
    Object[] obj_array19 = treeSet15.toArray(obj_array18);
    Object obj20 = treeSet15.pollLast();
    Object[] obj_array21 = treeSet15.toArray();
    Object obj22 = treeSet14.lower((Object)obj_array21);
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    Object[] obj_array26 = new Object[] { (byte)10 };
    Object[] obj_array27 = treeSet23.toArray(obj_array26);
    java.util.SortedSet sortedSet29 = treeSet23.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet30 = new java.util.TreeSet((java.util.Collection)sortedSet29);
    Object obj31 = treeSet30.clone();
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    java.util.TreeSet treeSet34 = new java.util.TreeSet();
    java.util.Iterator iterator35 = treeSet34.descendingIterator();
    Object[] obj_array37 = new Object[] { (byte)10 };
    Object[] obj_array38 = treeSet34.toArray(obj_array37);
    Object[] obj_array39 = treeSet32.toArray(obj_array38);
    Object obj41 = treeSet32.lower((Object)(-1.0f));
    java.util.Spliterator spliterator42 = treeSet32.spliterator();
    boolean b43 = treeSet30.addAll((java.util.Collection)treeSet32);
    java.util.Iterator iterator44 = treeSet32.iterator();
    Object obj45 = treeSet14.lower((Object)iterator44);
    java.util.TreeSet treeSet46 = new java.util.TreeSet();
    java.util.Iterator iterator47 = treeSet46.descendingIterator();
    java.util.Spliterator spliterator48 = treeSet46.spliterator();
    java.util.Iterator iterator49 = treeSet46.descendingIterator();
    int i50 = treeSet46.size();
    boolean b51 = treeSet14.retainAll((java.util.Collection)treeSet46);
    java.util.TreeSet treeSet53 = new java.util.TreeSet();
    java.util.Iterator iterator54 = treeSet53.descendingIterator();
    java.util.Spliterator spliterator55 = treeSet53.spliterator();
    java.util.TreeSet treeSet56 = new java.util.TreeSet();
    java.util.Iterator iterator57 = treeSet56.descendingIterator();
    Object obj58 = treeSet53.lower((Object)treeSet56);
    boolean b59 = treeSet56.isEmpty();
    java.util.NavigableSet navigableSet60 = treeSet56.descendingSet();
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet62 = treeSet5.subSet((Object)treeSet46, true, (Object)navigableSet60, true);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i50 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b59 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet60);

  }

  @Test
  public void test189() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test189"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    java.util.Spliterator spliterator21 = treeSet19.spliterator();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object obj24 = treeSet19.lower((Object)treeSet22);
    int i25 = treeSet22.size();
    Object obj27 = treeSet22.lower((Object)true);
    java.util.Comparator comparator28 = treeSet22.comparator();
    boolean b29 = treeSet18.equals((Object)comparator28);
    boolean b30 = treeSet7.remove((Object)b29);
    java.util.NavigableSet navigableSet31 = treeSet7.descendingSet();
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    java.util.Spliterator spliterator34 = treeSet32.spliterator();
    java.util.TreeSet treeSet35 = new java.util.TreeSet();
    java.util.Iterator iterator36 = treeSet35.descendingIterator();
    Object obj37 = treeSet32.lower((Object)treeSet35);
    boolean b38 = treeSet35.isEmpty();
    Object obj39 = treeSet7.higher((Object)b38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj39);

  }

  @Test
  public void test190() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test190"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object[] obj_array9 = new Object[] { (byte)10 };
    Object[] obj_array10 = treeSet6.toArray(obj_array9);
    Object obj11 = treeSet6.pollLast();
    java.util.Comparator comparator12 = treeSet6.comparator();
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet6);
    java.util.Iterator iterator14 = treeSet6.descendingIterator();
    Object obj15 = treeSet6.pollLast();
    Object obj16 = treeSet6.pollLast();
    java.util.stream.Stream stream17 = treeSet6.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream17);

  }

  @Test
  public void test191() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test191"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    java.util.SortedSet sortedSet8 = treeSet2.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)sortedSet8);
    boolean b10 = treeSet0.addAll((java.util.Collection)sortedSet8);
    String str11 = treeSet0.toString();
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    java.util.Spliterator spliterator14 = treeSet12.spliterator();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    java.util.Iterator iterator16 = treeSet15.descendingIterator();
    Object obj17 = treeSet12.lower((Object)treeSet15);
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    Object[] obj_array21 = new Object[] { (byte)10 };
    Object[] obj_array22 = treeSet18.toArray(obj_array21);
    Object obj23 = treeSet18.pollLast();
    java.util.Comparator comparator24 = treeSet18.comparator();
    boolean b25 = treeSet12.addAll((java.util.Collection)treeSet18);
    boolean b26 = treeSet0.equals((Object)b25);
    treeSet0.clear();
    Object obj28 = null;
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet30 = treeSet0.headSet(obj28, false);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]"+ "'", str11.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test192() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test192"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    java.util.SortedSet sortedSet8 = treeSet2.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)sortedSet8);
    boolean b10 = treeSet0.addAll((java.util.Collection)sortedSet8);
    String str11 = treeSet0.toString();
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    java.util.Spliterator spliterator14 = treeSet12.spliterator();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    java.util.Iterator iterator16 = treeSet15.descendingIterator();
    Object obj17 = treeSet12.lower((Object)treeSet15);
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    Object[] obj_array21 = new Object[] { (byte)10 };
    Object[] obj_array22 = treeSet18.toArray(obj_array21);
    Object obj23 = treeSet18.pollLast();
    java.util.Comparator comparator24 = treeSet18.comparator();
    boolean b25 = treeSet12.addAll((java.util.Collection)treeSet18);
    boolean b26 = treeSet0.equals((Object)b25);
    treeSet0.clear();
    java.util.function.Predicate predicate28 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b29 = treeSet0.removeIf(predicate28);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]"+ "'", str11.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test193() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test193"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object[] obj_array9 = new Object[] { (byte)10 };
    Object[] obj_array10 = treeSet6.toArray(obj_array9);
    Object obj11 = treeSet6.pollLast();
    java.util.Comparator comparator12 = treeSet6.comparator();
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet6);
    java.util.Iterator iterator14 = treeSet6.descendingIterator();
    Object obj15 = treeSet6.clone();
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.SortedSet sortedSet18 = treeSet16.headSet((Object)(byte)0);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    Object[] obj_array22 = new Object[] { (byte)10 };
    Object[] obj_array23 = treeSet19.toArray(obj_array22);
    Object obj24 = treeSet19.pollLast();
    Object obj25 = treeSet19.pollLast();
    Object obj26 = treeSet19.clone();
    String str27 = treeSet19.toString();
    boolean b28 = treeSet16.removeAll((java.util.Collection)treeSet19);
    // The following exception was thrown during execution in test generation
    try {
      boolean b29 = treeSet6.remove((Object)treeSet19);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[]"+ "'", str27.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);

  }

  @Test
  public void test194() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test194"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    Object[] obj_array20 = new Object[] { (byte)10 };
    Object[] obj_array21 = treeSet17.toArray(obj_array20);
    java.util.SortedSet sortedSet23 = treeSet17.headSet((Object)1.0d);
    boolean b24 = treeSet7.retainAll((java.util.Collection)sortedSet23);
    java.util.TreeSet treeSet25 = new java.util.TreeSet();
    java.util.Iterator iterator26 = treeSet25.descendingIterator();
    Object[] obj_array28 = new Object[] { (byte)10 };
    Object[] obj_array29 = treeSet25.toArray(obj_array28);
    java.util.SortedSet sortedSet31 = treeSet25.headSet((Object)1.0d);
    java.util.Spliterator spliterator32 = treeSet25.spliterator();
    java.util.NavigableSet navigableSet33 = treeSet25.descendingSet();
    java.util.Iterator iterator34 = treeSet25.iterator();
    Object obj35 = treeSet7.higher((Object)iterator34);
    java.util.Iterator iterator36 = treeSet7.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator36);

  }

  @Test
  public void test195() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test195"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet0.descendingSet();
    java.util.Spliterator spliterator18 = treeSet0.spliterator();
    java.util.stream.Stream stream19 = treeSet0.stream();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object[] obj_array25 = new Object[] { (byte)10 };
    Object[] obj_array26 = treeSet22.toArray(obj_array25);
    Object[] obj_array27 = treeSet20.toArray(obj_array26);
    Object obj29 = treeSet20.lower((Object)(-1.0f));
    java.util.Comparator comparator30 = treeSet20.comparator();
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.NavigableSet navigableSet33 = treeSet32.descendingSet();
    java.util.Comparator comparator34 = treeSet32.comparator();
    java.util.Comparator comparator35 = treeSet32.comparator();
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet37 = treeSet0.subSet((Object)comparator30, true, (Object)comparator35, true);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator35);

  }

  @Test
  public void test196() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test196"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    Object[] obj_array6 = treeSet0.toArray();
    java.util.NavigableSet navigableSet7 = treeSet0.descendingSet();
    java.util.stream.Stream stream8 = navigableSet7.stream();
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)navigableSet7);
    // The following exception was thrown during execution in test generation
    try {
      Object obj10 = treeSet9.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream8);

  }

  @Test
  public void test197() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test197"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    boolean b2 = treeSet1.isEmpty();
    java.util.SortedSet sortedSet3 = treeSet0.headSet((Object)b2);
    java.util.Iterator iterator4 = treeSet0.iterator();
    java.util.TreeSet treeSet5 = new java.util.TreeSet();
    java.util.Iterator iterator6 = treeSet5.descendingIterator();
    Object[] obj_array8 = new Object[] { (byte)10 };
    Object[] obj_array9 = treeSet5.toArray(obj_array8);
    java.util.SortedSet sortedSet11 = treeSet5.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    Object[] obj_array15 = new Object[] { (byte)10 };
    Object[] obj_array16 = treeSet12.toArray(obj_array15);
    Object obj17 = treeSet12.pollLast();
    java.util.Comparator comparator18 = treeSet12.comparator();
    Object obj19 = null;
    Object obj20 = treeSet12.lower(obj19);
    boolean b21 = treeSet5.containsAll((java.util.Collection)treeSet12);
    java.util.NavigableSet navigableSet22 = treeSet12.descendingSet();
    java.util.TreeSet treeSet23 = new java.util.TreeSet((java.util.SortedSet)treeSet12);
    java.util.TreeSet treeSet24 = new java.util.TreeSet();
    java.util.SortedSet sortedSet26 = treeSet24.headSet((Object)(byte)0);
    Object obj27 = treeSet12.lower((Object)treeSet24);
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    Object[] obj_array31 = new Object[] { (byte)10 };
    Object[] obj_array32 = treeSet28.toArray(obj_array31);
    java.util.TreeSet treeSet33 = new java.util.TreeSet();
    java.util.Iterator iterator34 = treeSet33.descendingIterator();
    Object[] obj_array36 = new Object[] { (byte)10 };
    Object[] obj_array37 = treeSet33.toArray(obj_array36);
    java.util.SortedSet sortedSet39 = treeSet33.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet40 = new java.util.TreeSet((java.util.Collection)sortedSet39);
    boolean b41 = treeSet28.addAll((java.util.Collection)treeSet40);
    Object obj42 = treeSet12.lower((Object)b41);
    Object obj43 = treeSet12.pollLast();
    java.util.TreeSet treeSet44 = new java.util.TreeSet((java.util.SortedSet)treeSet12);
    boolean b45 = treeSet12.isEmpty();
    Object obj46 = treeSet12.clone();
    // The following exception was thrown during execution in test generation
    try {
      boolean b47 = treeSet0.remove(obj46);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj46);

  }

  @Test
  public void test198() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test198"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.Iterator iterator2 = treeSet0.descendingIterator();
    java.util.Iterator iterator3 = treeSet0.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);

  }

  @Test
  public void test199() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test199"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    boolean b20 = treeSet3.contains((Object)(byte)100);
    java.util.stream.Stream stream21 = treeSet3.parallelStream();
    java.util.TreeSet treeSet22 = new java.util.TreeSet((java.util.Collection)treeSet3);
    java.util.TreeSet treeSet23 = new java.util.TreeSet((java.util.Collection)treeSet22);
    java.util.TreeSet treeSet24 = new java.util.TreeSet();
    java.util.Iterator iterator25 = treeSet24.descendingIterator();
    java.util.Spliterator spliterator26 = treeSet24.spliterator();
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    java.util.Iterator iterator28 = treeSet27.descendingIterator();
    Object obj29 = treeSet24.lower((Object)treeSet27);
    int i30 = treeSet27.size();
    Object obj32 = treeSet27.lower((Object)true);
    java.util.Comparator comparator33 = treeSet27.comparator();
    java.util.Comparator comparator34 = treeSet27.comparator();
    boolean b35 = treeSet23.removeAll((java.util.Collection)treeSet27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i30 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);

  }

  @Test
  public void test200() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test200"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.headSet((Object)1.0d);
    String str7 = treeSet0.toString();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    Object obj14 = treeSet9.pollLast();
    Object[] obj_array15 = treeSet9.toArray();
    Object obj16 = treeSet8.lower((Object)obj_array15);
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    Object[] obj_array20 = new Object[] { (byte)10 };
    Object[] obj_array21 = treeSet17.toArray(obj_array20);
    java.util.SortedSet sortedSet23 = treeSet17.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet24 = new java.util.TreeSet((java.util.Collection)sortedSet23);
    Object obj25 = treeSet24.clone();
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.Iterator iterator27 = treeSet26.descendingIterator();
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    Object[] obj_array31 = new Object[] { (byte)10 };
    Object[] obj_array32 = treeSet28.toArray(obj_array31);
    Object[] obj_array33 = treeSet26.toArray(obj_array32);
    Object obj35 = treeSet26.lower((Object)(-1.0f));
    java.util.Spliterator spliterator36 = treeSet26.spliterator();
    boolean b37 = treeSet24.addAll((java.util.Collection)treeSet26);
    java.util.Iterator iterator38 = treeSet26.iterator();
    Object obj39 = treeSet8.lower((Object)iterator38);
    java.util.TreeSet treeSet40 = new java.util.TreeSet();
    java.util.Iterator iterator41 = treeSet40.descendingIterator();
    java.util.Spliterator spliterator42 = treeSet40.spliterator();
    java.util.Iterator iterator43 = treeSet40.descendingIterator();
    int i44 = treeSet40.size();
    boolean b45 = treeSet8.retainAll((java.util.Collection)treeSet40);
    int i46 = treeSet40.size();
    Object[] obj_array47 = treeSet40.toArray();
    Object obj48 = treeSet0.higher((Object)treeSet40);
    java.util.function.Consumer consumer49 = null;
    // The following exception was thrown during execution in test generation
    try {
      treeSet40.forEach(consumer49);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[]"+ "'", str7.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i44 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i46 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj48);

  }

  @Test
  public void test201() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test201"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    Object[] obj_array22 = new Object[] { (byte)10 };
    Object[] obj_array23 = treeSet19.toArray(obj_array22);
    java.util.SortedSet sortedSet25 = treeSet19.headSet((Object)1.0d);
    String str26 = treeSet19.toString();
    Object obj27 = treeSet3.higher((Object)treeSet19);
    java.util.Iterator iterator28 = treeSet19.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[]"+ "'", str26.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator28);

  }

  @Test
  public void test202() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test202"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object[] obj_array9 = new Object[] { (byte)10 };
    Object[] obj_array10 = treeSet6.toArray(obj_array9);
    Object obj11 = treeSet6.pollLast();
    java.util.Comparator comparator12 = treeSet6.comparator();
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet6);
    java.util.Iterator iterator14 = treeSet6.descendingIterator();
    Object obj15 = treeSet6.pollLast();
    Object obj16 = treeSet6.pollLast();
    Object obj17 = treeSet6.pollFirst();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    Object[] obj_array21 = new Object[] { (byte)10 };
    Object[] obj_array22 = treeSet18.toArray(obj_array21);
    Object obj23 = treeSet18.pollLast();
    Object[] obj_array24 = treeSet18.toArray();
    java.util.NavigableSet navigableSet25 = treeSet18.descendingSet();
    java.util.stream.Stream stream26 = navigableSet25.stream();
    java.util.TreeSet treeSet27 = new java.util.TreeSet((java.util.Collection)navigableSet25);
    Object obj28 = treeSet6.floor((Object)treeSet27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj28);

  }

  @Test
  public void test203() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test203"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.stream.Stream stream10 = treeSet0.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream10);

  }

  @Test
  public void test204() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test204"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    boolean b20 = treeSet3.contains((Object)(byte)100);
    java.util.stream.Stream stream21 = treeSet3.parallelStream();
    java.util.TreeSet treeSet22 = new java.util.TreeSet((java.util.Collection)treeSet3);
    java.util.TreeSet treeSet23 = new java.util.TreeSet((java.util.Collection)treeSet22);
    java.util.TreeSet treeSet24 = new java.util.TreeSet();
    java.util.TreeSet treeSet25 = new java.util.TreeSet();
    boolean b26 = treeSet25.isEmpty();
    java.util.SortedSet sortedSet27 = treeSet24.headSet((Object)b26);
    java.util.TreeSet treeSet28 = new java.util.TreeSet(sortedSet27);
    java.util.TreeSet treeSet29 = new java.util.TreeSet();
    java.util.Iterator iterator30 = treeSet29.descendingIterator();
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.Iterator iterator32 = treeSet31.descendingIterator();
    Object[] obj_array34 = new Object[] { (byte)10 };
    Object[] obj_array35 = treeSet31.toArray(obj_array34);
    Object[] obj_array36 = treeSet29.toArray(obj_array35);
    Object obj37 = treeSet28.lower((Object)treeSet29);
    java.util.stream.Stream stream38 = treeSet29.parallelStream();
    // The following exception was thrown during execution in test generation
    try {
      boolean b39 = treeSet22.remove((Object)stream38);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream38);

  }

  @Test
  public void test205() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test205"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.Comparator comparator3 = treeSet0.comparator();
    java.util.Spliterator spliterator4 = treeSet0.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator4);

  }

  @Test
  public void test206() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test206"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    Object obj7 = treeSet0.clone();
    Object obj9 = treeSet0.floor((Object)(-1.0d));
    String str10 = treeSet0.toString();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    java.util.Spliterator spliterator13 = treeSet11.spliterator();
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    Object obj16 = treeSet11.lower((Object)treeSet14);
    Object obj17 = treeSet11.pollLast();
    boolean b18 = treeSet11.isEmpty();
    boolean b19 = treeSet0.removeAll((java.util.Collection)treeSet11);
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object[] obj_array23 = new Object[] { (byte)10 };
    Object[] obj_array24 = treeSet20.toArray(obj_array23);
    Object obj25 = treeSet20.pollLast();
    Object obj26 = treeSet20.pollLast();
    Object obj27 = treeSet20.clone();
    String str28 = treeSet20.toString();
    Object obj29 = treeSet11.higher((Object)treeSet20);
    java.util.TreeSet treeSet30 = new java.util.TreeSet((java.util.SortedSet)treeSet11);
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    boolean b32 = treeSet31.isEmpty();
    java.util.TreeSet treeSet33 = new java.util.TreeSet();
    java.util.Iterator iterator34 = treeSet33.descendingIterator();
    java.util.Iterator iterator35 = treeSet33.descendingIterator();
    boolean b36 = treeSet31.containsAll((java.util.Collection)treeSet33);
    java.util.stream.Stream stream37 = treeSet31.parallelStream();
    Object obj38 = treeSet31.clone();
    java.util.TreeSet treeSet39 = new java.util.TreeSet();
    java.util.Iterator iterator40 = treeSet39.descendingIterator();
    java.util.Spliterator spliterator41 = treeSet39.spliterator();
    java.util.TreeSet treeSet42 = new java.util.TreeSet();
    java.util.Iterator iterator43 = treeSet42.descendingIterator();
    Object obj44 = treeSet39.lower((Object)treeSet42);
    int i45 = treeSet42.size();
    java.util.TreeSet treeSet46 = new java.util.TreeSet();
    boolean b47 = treeSet46.isEmpty();
    java.util.TreeSet treeSet48 = new java.util.TreeSet();
    java.util.Iterator iterator49 = treeSet48.descendingIterator();
    Object[] obj_array51 = new Object[] { (byte)10 };
    Object[] obj_array52 = treeSet48.toArray(obj_array51);
    java.util.SortedSet sortedSet54 = treeSet48.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet55 = new java.util.TreeSet((java.util.Collection)sortedSet54);
    boolean b56 = treeSet46.addAll((java.util.Collection)sortedSet54);
    Object obj57 = treeSet42.lower((Object)b56);
    java.util.TreeSet treeSet58 = new java.util.TreeSet();
    java.util.Iterator iterator59 = treeSet58.descendingIterator();
    Object[] obj_array61 = new Object[] { (byte)10 };
    Object[] obj_array62 = treeSet58.toArray(obj_array61);
    java.util.SortedSet sortedSet64 = treeSet58.headSet((Object)1.0d);
    String str65 = treeSet58.toString();
    Object obj66 = treeSet42.higher((Object)treeSet58);
    Object obj67 = treeSet31.ceiling((Object)treeSet58);
    java.util.NavigableSet navigableSet70 = treeSet58.headSet((Object)(-1L), true);
    java.util.SortedSet sortedSet71 = treeSet11.headSet((Object)(-1L));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[]"+ "'", str10.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[]"+ "'", str28.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b32 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i45 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array62);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str65 + "' != '" + "[]"+ "'", str65.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet71);

  }

  @Test
  public void test207() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test207"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    boolean b18 = treeSet0.containsAll((java.util.Collection)sortedSet15);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    boolean b20 = treeSet19.isEmpty();
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.Iterator iterator22 = treeSet21.descendingIterator();
    java.util.Iterator iterator23 = treeSet21.descendingIterator();
    boolean b24 = treeSet19.containsAll((java.util.Collection)treeSet21);
    Object obj26 = treeSet19.higher((Object)(short)(-1));
    Object[] obj_array27 = treeSet19.toArray();
    java.util.TreeSet treeSet28 = new java.util.TreeSet((java.util.Collection)treeSet19);
    java.util.TreeSet treeSet29 = new java.util.TreeSet();
    boolean b30 = treeSet29.isEmpty();
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.Iterator iterator32 = treeSet31.descendingIterator();
    java.util.Iterator iterator33 = treeSet31.descendingIterator();
    boolean b34 = treeSet29.containsAll((java.util.Collection)treeSet31);
    java.util.stream.Stream stream35 = treeSet29.parallelStream();
    Object obj36 = treeSet29.clone();
    int i37 = treeSet29.size();
    boolean b38 = treeSet19.addAll((java.util.Collection)treeSet29);
    Object obj39 = treeSet0.lower((Object)treeSet19);
    int i40 = treeSet19.size();
    java.util.TreeSet treeSet41 = new java.util.TreeSet((java.util.Collection)treeSet19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b34 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i37 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i40 == 0);

  }

  @Test
  public void test208() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test208"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    java.util.Spliterator spliterator21 = treeSet19.spliterator();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object obj24 = treeSet19.lower((Object)treeSet22);
    int i25 = treeSet22.size();
    Object obj27 = treeSet22.lower((Object)true);
    java.util.Comparator comparator28 = treeSet22.comparator();
    boolean b29 = treeSet18.equals((Object)comparator28);
    boolean b30 = treeSet7.remove((Object)b29);
    Object obj31 = treeSet7.pollLast();
    treeSet7.clear();
    java.util.TreeSet treeSet33 = new java.util.TreeSet();
    java.util.SortedSet sortedSet35 = treeSet33.headSet((Object)(byte)0);
    boolean b36 = treeSet7.removeAll((java.util.Collection)sortedSet35);
    java.util.function.Predicate predicate37 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b38 = sortedSet35.removeIf(predicate37);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);

  }

  @Test
  public void test209() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test209"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet((java.util.Collection)treeSet18);
    java.util.NavigableSet navigableSet20 = treeSet19.descendingSet();
    java.util.Spliterator spliterator21 = treeSet19.spliterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator21);

  }

  @Test
  public void test210() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test210"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    Object[] obj_array22 = new Object[] { (byte)10 };
    Object[] obj_array23 = treeSet19.toArray(obj_array22);
    java.util.SortedSet sortedSet25 = treeSet19.headSet((Object)1.0d);
    String str26 = treeSet19.toString();
    Object obj27 = treeSet3.higher((Object)treeSet19);
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.NavigableSet navigableSet29 = treeSet28.descendingSet();
    Object obj30 = treeSet3.lower((Object)navigableSet29);
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    java.util.Spliterator spliterator34 = treeSet32.spliterator();
    java.util.TreeSet treeSet35 = new java.util.TreeSet();
    java.util.Iterator iterator36 = treeSet35.descendingIterator();
    Object obj37 = treeSet32.lower((Object)treeSet35);
    int i38 = treeSet35.size();
    Object obj40 = treeSet35.lower((Object)true);
    java.util.Comparator comparator41 = treeSet35.comparator();
    boolean b42 = treeSet31.equals((Object)comparator41);
    java.util.TreeSet treeSet43 = new java.util.TreeSet();
    java.util.Iterator iterator44 = treeSet43.descendingIterator();
    java.util.Spliterator spliterator45 = treeSet43.spliterator();
    java.util.TreeSet treeSet46 = new java.util.TreeSet();
    java.util.Iterator iterator47 = treeSet46.descendingIterator();
    Object obj48 = treeSet43.lower((Object)treeSet46);
    boolean b50 = treeSet46.remove((Object)(short)10);
    Object obj51 = treeSet46.clone();
    java.util.TreeSet treeSet52 = new java.util.TreeSet((java.util.Collection)treeSet46);
    boolean b53 = treeSet31.addAll((java.util.Collection)treeSet46);
    Object obj54 = treeSet3.floor((Object)treeSet46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[]"+ "'", str26.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b50 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj54);

  }

  @Test
  public void test211() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test211"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.TreeSet treeSet5 = new java.util.TreeSet();
    java.util.Iterator iterator6 = treeSet5.descendingIterator();
    Object[] obj_array8 = new Object[] { (byte)10 };
    Object[] obj_array9 = treeSet5.toArray(obj_array8);
    java.util.SortedSet sortedSet11 = treeSet5.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet12 = new java.util.TreeSet((java.util.Collection)sortedSet11);
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet12);
    Object[] obj_array14 = treeSet12.toArray();
    java.util.stream.Stream stream15 = treeSet12.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream15);

  }

  @Test
  public void test212() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test212"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.floor((Object)(byte)(-1));
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    Object[] obj_array13 = new Object[] { (byte)10 };
    Object[] obj_array14 = treeSet10.toArray(obj_array13);
    Object obj15 = treeSet10.pollLast();
    Object[] obj_array16 = treeSet10.toArray();
    Object[] obj_array17 = treeSet0.toArray(obj_array16);
    java.util.Iterator iterator18 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    boolean b20 = treeSet19.isEmpty();
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.Iterator iterator22 = treeSet21.descendingIterator();
    java.util.Iterator iterator23 = treeSet21.descendingIterator();
    boolean b24 = treeSet19.containsAll((java.util.Collection)treeSet21);
    Object obj26 = treeSet19.higher((Object)(short)(-1));
    Object[] obj_array27 = treeSet19.toArray();
    Object[] obj_array28 = treeSet0.toArray(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);

  }

  @Test
  public void test213() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test213"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    java.util.Spliterator spliterator21 = treeSet19.spliterator();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object obj24 = treeSet19.lower((Object)treeSet22);
    int i25 = treeSet22.size();
    Object obj27 = treeSet22.lower((Object)true);
    java.util.Comparator comparator28 = treeSet22.comparator();
    boolean b29 = treeSet18.equals((Object)comparator28);
    boolean b30 = treeSet7.remove((Object)b29);
    Object obj31 = treeSet7.pollLast();
    treeSet7.clear();
    java.util.TreeSet treeSet33 = new java.util.TreeSet();
    java.util.SortedSet sortedSet35 = treeSet33.headSet((Object)(byte)0);
    boolean b36 = treeSet7.removeAll((java.util.Collection)sortedSet35);
    java.util.TreeSet treeSet37 = new java.util.TreeSet();
    java.util.Iterator iterator38 = treeSet37.descendingIterator();
    Object[] obj_array40 = new Object[] { (byte)10 };
    Object[] obj_array41 = treeSet37.toArray(obj_array40);
    java.util.SortedSet sortedSet43 = treeSet37.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet44 = new java.util.TreeSet((java.util.Collection)sortedSet43);
    Object obj45 = treeSet7.higher((Object)sortedSet43);
    java.util.TreeSet treeSet46 = new java.util.TreeSet(sortedSet43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj45);

  }

  @Test
  public void test214() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test214"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.floor((Object)(byte)(-1));
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    Object[] obj_array13 = new Object[] { (byte)10 };
    Object[] obj_array14 = treeSet10.toArray(obj_array13);
    Object obj15 = treeSet10.pollLast();
    Object[] obj_array16 = treeSet10.toArray();
    Object[] obj_array17 = treeSet0.toArray(obj_array16);
    java.util.Iterator iterator18 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.Iterator iterator22 = treeSet21.descendingIterator();
    Object[] obj_array24 = new Object[] { (byte)10 };
    Object[] obj_array25 = treeSet21.toArray(obj_array24);
    Object[] obj_array26 = treeSet19.toArray(obj_array25);
    Object obj28 = treeSet19.lower((Object)(-1.0f));
    Object obj30 = treeSet19.higher((Object)1.0f);
    java.util.stream.Stream stream31 = treeSet19.stream();
    // The following exception was thrown during execution in test generation
    try {
      boolean b32 = treeSet0.add((Object)treeSet19);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream31);

  }

  @Test
  public void test215() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test215"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    Object obj18 = treeSet7.clone();
    java.util.function.Predicate predicate19 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b20 = treeSet7.removeIf(predicate19);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj18);

  }

  @Test
  public void test216() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test216"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.Comparator comparator6 = treeSet0.comparator();
    treeSet0.clear();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator6);

  }

  @Test
  public void test217() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test217"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Iterator iterator2 = treeSet0.descendingIterator();
    Object obj3 = treeSet0.pollFirst();
    java.util.TreeSet treeSet4 = new java.util.TreeSet();
    java.util.Iterator iterator5 = treeSet4.descendingIterator();
    Object[] obj_array7 = new Object[] { (byte)10 };
    Object[] obj_array8 = treeSet4.toArray(obj_array7);
    java.util.SortedSet sortedSet10 = treeSet4.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    Object obj16 = treeSet11.pollLast();
    java.util.Comparator comparator17 = treeSet11.comparator();
    Object obj18 = null;
    Object obj19 = treeSet11.lower(obj18);
    boolean b20 = treeSet4.containsAll((java.util.Collection)treeSet11);
    java.util.NavigableSet navigableSet21 = treeSet11.descendingSet();
    Object obj22 = treeSet0.floor((Object)navigableSet21);
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    java.util.Spliterator spliterator25 = treeSet23.spliterator();
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.Iterator iterator27 = treeSet26.descendingIterator();
    Object obj28 = treeSet23.lower((Object)treeSet26);
    java.util.stream.Stream stream29 = treeSet23.parallelStream();
    java.util.TreeSet treeSet30 = new java.util.TreeSet();
    boolean b31 = treeSet30.isEmpty();
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    Object[] obj_array35 = new Object[] { (byte)10 };
    Object[] obj_array36 = treeSet32.toArray(obj_array35);
    java.util.SortedSet sortedSet38 = treeSet32.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet39 = new java.util.TreeSet((java.util.Collection)sortedSet38);
    boolean b40 = treeSet30.addAll((java.util.Collection)sortedSet38);
    boolean b41 = treeSet23.containsAll((java.util.Collection)sortedSet38);
    java.util.TreeSet treeSet42 = new java.util.TreeSet();
    boolean b43 = treeSet42.isEmpty();
    java.util.TreeSet treeSet44 = new java.util.TreeSet();
    java.util.Iterator iterator45 = treeSet44.descendingIterator();
    java.util.Iterator iterator46 = treeSet44.descendingIterator();
    boolean b47 = treeSet42.containsAll((java.util.Collection)treeSet44);
    Object obj49 = treeSet42.higher((Object)(short)(-1));
    Object[] obj_array50 = treeSet42.toArray();
    java.util.TreeSet treeSet51 = new java.util.TreeSet((java.util.Collection)treeSet42);
    java.util.TreeSet treeSet52 = new java.util.TreeSet();
    boolean b53 = treeSet52.isEmpty();
    java.util.TreeSet treeSet54 = new java.util.TreeSet();
    java.util.Iterator iterator55 = treeSet54.descendingIterator();
    java.util.Iterator iterator56 = treeSet54.descendingIterator();
    boolean b57 = treeSet52.containsAll((java.util.Collection)treeSet54);
    java.util.stream.Stream stream58 = treeSet52.parallelStream();
    Object obj59 = treeSet52.clone();
    int i60 = treeSet52.size();
    boolean b61 = treeSet42.addAll((java.util.Collection)treeSet52);
    Object obj62 = treeSet23.lower((Object)treeSet42);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet63 = treeSet0.headSet(obj62);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b41 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b43 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b53 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b57 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i60 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj62);

  }

  @Test
  public void test218() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test218"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    java.util.Iterator iterator7 = treeSet0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);

  }

  @Test
  public void test219() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test219"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    java.util.Spliterator spliterator5 = treeSet3.spliterator();
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object obj8 = treeSet3.lower((Object)treeSet6);
    Object obj9 = treeSet0.lower((Object)treeSet6);
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    Object[] obj_array15 = new Object[] { (byte)10 };
    Object[] obj_array16 = treeSet12.toArray(obj_array15);
    Object[] obj_array17 = treeSet10.toArray(obj_array16);
    boolean b19 = treeSet10.add((Object)10.0d);
    java.util.SortedSet sortedSet20 = treeSet6.headSet((Object)b19);
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.Iterator iterator22 = treeSet21.descendingIterator();
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    Object[] obj_array26 = new Object[] { (byte)10 };
    Object[] obj_array27 = treeSet23.toArray(obj_array26);
    Object[] obj_array28 = treeSet21.toArray(obj_array27);
    Object obj30 = treeSet21.floor((Object)(byte)(-1));
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.Iterator iterator32 = treeSet31.descendingIterator();
    Object[] obj_array34 = new Object[] { (byte)10 };
    Object[] obj_array35 = treeSet31.toArray(obj_array34);
    Object obj36 = treeSet31.pollLast();
    Object[] obj_array37 = treeSet31.toArray();
    Object[] obj_array38 = treeSet21.toArray(obj_array37);
    Object[] obj_array39 = treeSet6.toArray(obj_array38);
    java.util.TreeSet treeSet40 = new java.util.TreeSet();
    java.util.Iterator iterator41 = treeSet40.descendingIterator();
    Object[] obj_array43 = new Object[] { (byte)10 };
    Object[] obj_array44 = treeSet40.toArray(obj_array43);
    java.util.SortedSet sortedSet46 = treeSet40.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet47 = new java.util.TreeSet();
    java.util.Iterator iterator48 = treeSet47.descendingIterator();
    Object[] obj_array50 = new Object[] { (byte)10 };
    Object[] obj_array51 = treeSet47.toArray(obj_array50);
    Object obj52 = treeSet47.pollLast();
    java.util.Comparator comparator53 = treeSet47.comparator();
    Object obj54 = null;
    Object obj55 = treeSet47.lower(obj54);
    boolean b56 = treeSet40.containsAll((java.util.Collection)treeSet47);
    java.util.NavigableSet navigableSet57 = treeSet47.descendingSet();
    java.util.TreeSet treeSet58 = new java.util.TreeSet();
    java.util.TreeSet treeSet59 = new java.util.TreeSet();
    java.util.Iterator iterator60 = treeSet59.descendingIterator();
    java.util.Spliterator spliterator61 = treeSet59.spliterator();
    java.util.TreeSet treeSet62 = new java.util.TreeSet();
    java.util.Iterator iterator63 = treeSet62.descendingIterator();
    Object obj64 = treeSet59.lower((Object)treeSet62);
    int i65 = treeSet62.size();
    Object obj67 = treeSet62.lower((Object)true);
    java.util.Comparator comparator68 = treeSet62.comparator();
    boolean b69 = treeSet58.equals((Object)comparator68);
    boolean b70 = treeSet47.remove((Object)b69);
    Object[] obj_array71 = treeSet47.toArray();
    Object[] obj_array72 = treeSet6.toArray(obj_array71);
    java.util.TreeSet treeSet73 = new java.util.TreeSet();
    java.util.Iterator iterator74 = treeSet73.descendingIterator();
    Object obj75 = treeSet6.lower((Object)iterator74);
    Object obj76 = null;
    Object obj77 = treeSet6.floor(obj76);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i65 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b69 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b70 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj77);

  }

  @Test
  public void test220() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test220"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b6 = treeSet3.isEmpty();
    java.util.NavigableSet navigableSet7 = treeSet3.descendingSet();
    Object[] obj_array8 = treeSet3.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);

  }

  @Test
  public void test221() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test221"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.NavigableSet navigableSet15 = treeSet7.tailSet((Object)(-1.0d), true);
    boolean b16 = treeSet3.add((Object)(-1.0d));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);

  }

  @Test
  public void test222() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test222"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.Spliterator spliterator12 = treeSet10.spliterator();
    java.util.TreeSet treeSet13 = new java.util.TreeSet();
    java.util.Iterator iterator14 = treeSet13.descendingIterator();
    Object obj15 = treeSet10.lower((Object)treeSet13);
    boolean b16 = treeSet13.isEmpty();
    Object obj17 = treeSet0.floor((Object)treeSet13);
    boolean b18 = treeSet0.isEmpty();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    Object[] obj_array22 = new Object[] { (byte)10 };
    Object[] obj_array23 = treeSet19.toArray(obj_array22);
    java.util.SortedSet sortedSet25 = treeSet19.tailSet((Object)(byte)0);
    int i26 = treeSet19.size();
    boolean b27 = treeSet0.containsAll((java.util.Collection)treeSet19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i26 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == true);

  }

  @Test
  public void test223() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test223"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    Object obj7 = treeSet0.higher((Object)(short)(-1));
    Object[] obj_array8 = treeSet0.toArray();
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)treeSet0);
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    boolean b11 = treeSet10.isEmpty();
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    java.util.Iterator iterator14 = treeSet12.descendingIterator();
    boolean b15 = treeSet10.containsAll((java.util.Collection)treeSet12);
    java.util.stream.Stream stream16 = treeSet10.parallelStream();
    Object obj17 = treeSet10.clone();
    int i18 = treeSet10.size();
    boolean b19 = treeSet0.addAll((java.util.Collection)treeSet10);
    java.util.TreeSet treeSet20 = new java.util.TreeSet((java.util.Collection)treeSet0);
    String str21 = treeSet20.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[]"+ "'", str21.equals("[]"));

  }

  @Test
  public void test224() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test224"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    java.util.Spliterator spliterator21 = treeSet19.spliterator();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object obj24 = treeSet19.lower((Object)treeSet22);
    int i25 = treeSet22.size();
    Object obj27 = treeSet22.lower((Object)true);
    java.util.Comparator comparator28 = treeSet22.comparator();
    boolean b29 = treeSet18.equals((Object)comparator28);
    boolean b30 = treeSet7.remove((Object)b29);
    Object obj31 = treeSet7.pollLast();
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    java.util.TreeSet treeSet34 = new java.util.TreeSet();
    java.util.Iterator iterator35 = treeSet34.descendingIterator();
    Object[] obj_array37 = new Object[] { (byte)10 };
    Object[] obj_array38 = treeSet34.toArray(obj_array37);
    Object[] obj_array39 = treeSet32.toArray(obj_array38);
    Object obj40 = treeSet7.ceiling((Object)obj_array39);
    java.util.TreeSet treeSet42 = new java.util.TreeSet();
    java.util.Iterator iterator43 = treeSet42.descendingIterator();
    Object[] obj_array45 = new Object[] { (byte)10 };
    Object[] obj_array46 = treeSet42.toArray(obj_array45);
    java.util.SortedSet sortedSet48 = treeSet42.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet49 = new java.util.TreeSet();
    java.util.Iterator iterator50 = treeSet49.descendingIterator();
    Object[] obj_array52 = new Object[] { (byte)10 };
    Object[] obj_array53 = treeSet49.toArray(obj_array52);
    Object obj54 = treeSet49.pollLast();
    java.util.Comparator comparator55 = treeSet49.comparator();
    Object obj56 = null;
    Object obj57 = treeSet49.lower(obj56);
    boolean b58 = treeSet42.containsAll((java.util.Collection)treeSet49);
    java.util.NavigableSet navigableSet59 = treeSet49.descendingSet();
    Object[] obj_array60 = treeSet49.toArray();
    boolean b61 = treeSet49.isEmpty();
    java.util.stream.Stream stream62 = treeSet49.stream();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet63 = treeSet7.subSet((Object)0.0f, (Object)stream62);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i25 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream62);

  }

  @Test
  public void test225() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test225"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.SortedSet sortedSet21 = treeSet19.headSet((Object)(byte)0);
    Object obj22 = treeSet7.lower((Object)treeSet19);
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    Object[] obj_array26 = new Object[] { (byte)10 };
    Object[] obj_array27 = treeSet23.toArray(obj_array26);
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    Object[] obj_array31 = new Object[] { (byte)10 };
    Object[] obj_array32 = treeSet28.toArray(obj_array31);
    java.util.SortedSet sortedSet34 = treeSet28.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet35 = new java.util.TreeSet((java.util.Collection)sortedSet34);
    boolean b36 = treeSet23.addAll((java.util.Collection)treeSet35);
    Object obj37 = treeSet7.lower((Object)b36);
    Object obj38 = treeSet7.pollLast();
    java.util.TreeSet treeSet39 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    boolean b40 = treeSet7.isEmpty();
    Object obj41 = treeSet7.clone();
    java.util.TreeSet treeSet42 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet43 = new java.util.TreeSet((java.util.Collection)treeSet42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj41);

  }

  @Test
  public void test226() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test226"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.stream.Stream stream5 = treeSet0.stream();
    boolean b6 = treeSet0.isEmpty();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    Object[] obj_array21 = new Object[] { (byte)10 };
    Object[] obj_array22 = treeSet18.toArray(obj_array21);
    Object[] obj_array23 = treeSet16.toArray(obj_array22);
    Object obj25 = treeSet16.floor((Object)(byte)(-1));
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.Iterator iterator27 = treeSet26.descendingIterator();
    Object[] obj_array29 = new Object[] { (byte)10 };
    Object[] obj_array30 = treeSet26.toArray(obj_array29);
    Object obj31 = treeSet26.pollLast();
    Object[] obj_array32 = treeSet26.toArray();
    Object[] obj_array33 = treeSet16.toArray(obj_array32);
    Object[] obj_array34 = treeSet7.toArray(obj_array33);
    boolean b35 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.TreeSet treeSet36 = new java.util.TreeSet();
    java.util.Iterator iterator37 = treeSet36.descendingIterator();
    Object[] obj_array39 = new Object[] { (byte)10 };
    Object[] obj_array40 = treeSet36.toArray(obj_array39);
    Object obj41 = treeSet36.pollLast();
    Object obj42 = treeSet36.pollLast();
    Object obj43 = treeSet36.pollLast();
    Object[] obj_array44 = treeSet36.toArray();
    boolean b45 = treeSet7.removeAll((java.util.Collection)treeSet36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == false);

  }

  @Test
  public void test227() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test227"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.Comparator comparator6 = treeSet0.comparator();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    boolean b9 = treeSet8.isEmpty();
    java.util.SortedSet sortedSet10 = treeSet7.headSet((Object)b9);
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    java.util.Spliterator spliterator13 = treeSet11.spliterator();
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    Object obj16 = treeSet11.lower((Object)treeSet14);
    java.util.NavigableSet navigableSet19 = treeSet14.headSet((Object)(-1.0f), true);
    boolean b20 = treeSet7.addAll((java.util.Collection)treeSet14);
    Object obj21 = treeSet0.higher((Object)b20);
    Object[] obj_array22 = treeSet0.toArray();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);

  }

  @Test
  public void test228() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test228"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    boolean b18 = treeSet0.containsAll((java.util.Collection)sortedSet15);
    String str19 = treeSet0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[]"+ "'", str19.equals("[]"));

  }

  @Test
  public void test229() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test229"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    java.util.stream.Stream stream6 = treeSet0.parallelStream();
    Object obj7 = treeSet0.clone();
    Object obj9 = treeSet0.floor((Object)(-1.0d));
    String str10 = treeSet0.toString();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    java.util.Spliterator spliterator13 = treeSet11.spliterator();
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    Object obj16 = treeSet11.lower((Object)treeSet14);
    Object obj17 = treeSet11.pollLast();
    boolean b18 = treeSet11.isEmpty();
    boolean b19 = treeSet0.removeAll((java.util.Collection)treeSet11);
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object[] obj_array23 = new Object[] { (byte)10 };
    Object[] obj_array24 = treeSet20.toArray(obj_array23);
    Object obj25 = treeSet20.pollLast();
    Object obj26 = treeSet20.pollLast();
    Object obj27 = treeSet20.clone();
    String str28 = treeSet20.toString();
    Object obj29 = treeSet11.higher((Object)treeSet20);
    java.util.TreeSet treeSet30 = new java.util.TreeSet((java.util.SortedSet)treeSet11);
    boolean b31 = treeSet11.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[]"+ "'", str10.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[]"+ "'", str28.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);

  }

  @Test
  public void test230() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test230"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    Object obj7 = treeSet0.higher((Object)(short)(-1));
    Object[] obj_array8 = treeSet0.toArray();
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)treeSet0);
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.Spliterator spliterator12 = treeSet10.spliterator();
    java.util.TreeSet treeSet13 = new java.util.TreeSet();
    java.util.Iterator iterator14 = treeSet13.descendingIterator();
    Object obj15 = treeSet10.lower((Object)treeSet13);
    Object obj16 = treeSet10.pollLast();
    Object obj17 = treeSet0.lower(obj16);
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    Object[] obj_array21 = new Object[] { (byte)10 };
    Object[] obj_array22 = treeSet18.toArray(obj_array21);
    Object obj23 = treeSet18.pollLast();
    Object obj24 = treeSet18.pollLast();
    Object obj25 = treeSet18.pollLast();
    Object[] obj_array26 = treeSet18.toArray();
    boolean b27 = treeSet0.removeAll((java.util.Collection)treeSet18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);

  }

  @Test
  public void test231() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test231"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    Object obj6 = treeSet0.pollLast();
    Object obj7 = treeSet0.clone();
    java.util.function.Consumer consumer8 = null;
    // The following exception was thrown during execution in test generation
    try {
      treeSet0.forEach(consumer8);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj7);

  }

  @Test
  public void test232() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test232"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    Object[] obj_array6 = treeSet0.toArray();
    java.util.NavigableSet navigableSet7 = treeSet0.descendingSet();
    java.util.stream.Stream stream8 = navigableSet7.stream();
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)navigableSet7);
    java.util.TreeSet treeSet10 = new java.util.TreeSet((java.util.SortedSet)treeSet9);
    java.util.Comparator comparator11 = treeSet9.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator11);

  }

  @Test
  public void test233() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test233"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.NavigableSet navigableSet8 = treeSet0.tailSet((Object)(-1.0d), true);
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    boolean b10 = treeSet9.isEmpty();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    java.util.Iterator iterator13 = treeSet11.descendingIterator();
    boolean b14 = treeSet9.containsAll((java.util.Collection)treeSet11);
    java.util.stream.Stream stream15 = treeSet9.parallelStream();
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    java.util.Spliterator spliterator18 = treeSet16.spliterator();
    boolean b19 = treeSet9.equals((Object)treeSet16);
    boolean b20 = treeSet0.equals((Object)b19);
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.Iterator iterator22 = treeSet21.descendingIterator();
    Object[] obj_array24 = new Object[] { (byte)10 };
    Object[] obj_array25 = treeSet21.toArray(obj_array24);
    java.util.SortedSet sortedSet27 = treeSet21.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    Object[] obj_array31 = new Object[] { (byte)10 };
    Object[] obj_array32 = treeSet28.toArray(obj_array31);
    Object obj33 = treeSet28.pollLast();
    java.util.Comparator comparator34 = treeSet28.comparator();
    Object obj35 = null;
    Object obj36 = treeSet28.lower(obj35);
    boolean b37 = treeSet21.containsAll((java.util.Collection)treeSet28);
    java.util.NavigableSet navigableSet38 = treeSet21.descendingSet();
    java.util.Spliterator spliterator39 = treeSet21.spliterator();
    java.util.TreeSet treeSet40 = new java.util.TreeSet();
    java.util.Iterator iterator41 = treeSet40.descendingIterator();
    java.util.TreeSet treeSet42 = new java.util.TreeSet();
    java.util.Iterator iterator43 = treeSet42.descendingIterator();
    Object[] obj_array45 = new Object[] { (byte)10 };
    Object[] obj_array46 = treeSet42.toArray(obj_array45);
    Object[] obj_array47 = treeSet40.toArray(obj_array46);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet48 = treeSet0.subSet((Object)treeSet21, (Object)treeSet40);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array47);

  }

  @Test
  public void test234() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test234"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    // The following exception was thrown during execution in test generation
    try {
      Object obj1 = treeSet0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }

  }

  @Test
  public void test235() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test235"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    boolean b7 = treeSet6.isEmpty();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.Iterator iterator10 = treeSet8.descendingIterator();
    boolean b11 = treeSet6.containsAll((java.util.Collection)treeSet8);
    int i12 = treeSet6.size();
    boolean b13 = treeSet0.containsAll((java.util.Collection)treeSet6);
    Object[] obj_array14 = treeSet0.toArray();
    java.util.Comparator comparator15 = treeSet0.comparator();
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    Object[] obj_array21 = new Object[] { (byte)10 };
    Object[] obj_array22 = treeSet18.toArray(obj_array21);
    Object[] obj_array23 = treeSet16.toArray(obj_array22);
    Object obj25 = treeSet16.floor((Object)(byte)(-1));
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.Iterator iterator27 = treeSet26.descendingIterator();
    Object[] obj_array29 = new Object[] { (byte)10 };
    Object[] obj_array30 = treeSet26.toArray(obj_array29);
    Object obj31 = treeSet26.pollLast();
    Object[] obj_array32 = treeSet26.toArray();
    Object[] obj_array33 = treeSet16.toArray(obj_array32);
    Object obj34 = treeSet0.ceiling((Object)treeSet16);
    java.util.TreeSet treeSet35 = new java.util.TreeSet();
    java.util.TreeSet treeSet36 = new java.util.TreeSet();
    boolean b37 = treeSet36.isEmpty();
    java.util.SortedSet sortedSet38 = treeSet35.headSet((Object)b37);
    java.util.TreeSet treeSet39 = new java.util.TreeSet();
    java.util.Iterator iterator40 = treeSet39.descendingIterator();
    java.util.Spliterator spliterator41 = treeSet39.spliterator();
    java.util.TreeSet treeSet42 = new java.util.TreeSet();
    java.util.Iterator iterator43 = treeSet42.descendingIterator();
    Object obj44 = treeSet39.lower((Object)treeSet42);
    java.util.NavigableSet navigableSet47 = treeSet42.headSet((Object)(-1.0f), true);
    boolean b48 = treeSet35.addAll((java.util.Collection)treeSet42);
    java.util.TreeSet treeSet49 = new java.util.TreeSet();
    java.util.Iterator iterator50 = treeSet49.descendingIterator();
    java.util.Spliterator spliterator51 = treeSet49.spliterator();
    java.util.TreeSet treeSet52 = new java.util.TreeSet();
    java.util.Iterator iterator53 = treeSet52.descendingIterator();
    Object obj54 = treeSet49.lower((Object)treeSet52);
    int i55 = treeSet52.size();
    Object obj57 = treeSet52.lower((Object)true);
    boolean b58 = treeSet42.retainAll((java.util.Collection)treeSet52);
    boolean b60 = treeSet42.contains((Object)0.0d);
    java.util.TreeSet treeSet61 = new java.util.TreeSet((java.util.SortedSet)treeSet42);
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet63 = treeSet0.tailSet((Object)treeSet61, true);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i55 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b58 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);

  }

  @Test
  public void test236() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test236"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.Comparator comparator10 = treeSet0.comparator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    java.util.Spliterator spliterator13 = treeSet11.spliterator();
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    Object obj16 = treeSet11.lower((Object)treeSet14);
    int i17 = treeSet14.size();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    boolean b19 = treeSet18.isEmpty();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object[] obj_array23 = new Object[] { (byte)10 };
    Object[] obj_array24 = treeSet20.toArray(obj_array23);
    java.util.SortedSet sortedSet26 = treeSet20.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet27 = new java.util.TreeSet((java.util.Collection)sortedSet26);
    boolean b28 = treeSet18.addAll((java.util.Collection)sortedSet26);
    Object obj29 = treeSet14.lower((Object)b28);
    java.util.TreeSet treeSet30 = new java.util.TreeSet();
    java.util.Iterator iterator31 = treeSet30.descendingIterator();
    Object[] obj_array33 = new Object[] { (byte)10 };
    Object[] obj_array34 = treeSet30.toArray(obj_array33);
    java.util.SortedSet sortedSet36 = treeSet30.headSet((Object)1.0d);
    String str37 = treeSet30.toString();
    Object obj38 = treeSet14.higher((Object)treeSet30);
    java.util.TreeSet treeSet39 = new java.util.TreeSet();
    java.util.Iterator iterator40 = treeSet39.descendingIterator();
    Object[] obj_array42 = new Object[] { (byte)10 };
    Object[] obj_array43 = treeSet39.toArray(obj_array42);
    java.util.SortedSet sortedSet45 = treeSet39.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet46 = new java.util.TreeSet((java.util.SortedSet)treeSet39);
    java.util.NavigableSet navigableSet47 = treeSet39.descendingSet();
    Object obj48 = treeSet30.lower((Object)navigableSet47);
    boolean b49 = treeSet0.removeAll((java.util.Collection)treeSet30);
    java.util.TreeSet treeSet50 = new java.util.TreeSet();
    java.util.Iterator iterator51 = treeSet50.descendingIterator();
    Object[] obj_array53 = new Object[] { (byte)10 };
    Object[] obj_array54 = treeSet50.toArray(obj_array53);
    Object obj55 = treeSet50.pollLast();
    java.util.Comparator comparator56 = treeSet50.comparator();
    Object obj57 = null;
    Object obj58 = treeSet50.lower(obj57);
    int i59 = treeSet50.size();
    boolean b60 = treeSet30.addAll((java.util.Collection)treeSet50);
    treeSet30.clear();
    java.util.TreeSet treeSet62 = new java.util.TreeSet();
    java.util.Iterator iterator63 = treeSet62.descendingIterator();
    java.util.Spliterator spliterator64 = treeSet62.spliterator();
    java.util.TreeSet treeSet65 = new java.util.TreeSet();
    java.util.Iterator iterator66 = treeSet65.descendingIterator();
    java.util.Spliterator spliterator67 = treeSet65.spliterator();
    java.util.TreeSet treeSet68 = new java.util.TreeSet();
    java.util.Iterator iterator69 = treeSet68.descendingIterator();
    Object obj70 = treeSet65.lower((Object)treeSet68);
    Object obj71 = treeSet62.lower((Object)treeSet68);
    java.util.TreeSet treeSet72 = new java.util.TreeSet();
    java.util.Iterator iterator73 = treeSet72.descendingIterator();
    java.util.TreeSet treeSet74 = new java.util.TreeSet();
    java.util.Iterator iterator75 = treeSet74.descendingIterator();
    Object[] obj_array77 = new Object[] { (byte)10 };
    Object[] obj_array78 = treeSet74.toArray(obj_array77);
    Object[] obj_array79 = treeSet72.toArray(obj_array78);
    boolean b81 = treeSet72.add((Object)10.0d);
    java.util.SortedSet sortedSet82 = treeSet68.headSet((Object)b81);
    java.util.TreeSet treeSet83 = new java.util.TreeSet();
    java.util.TreeSet treeSet84 = new java.util.TreeSet();
    java.util.Iterator iterator85 = treeSet84.descendingIterator();
    Object[] obj_array87 = new Object[] { (byte)10 };
    Object[] obj_array88 = treeSet84.toArray(obj_array87);
    Object obj89 = treeSet84.pollLast();
    Object[] obj_array90 = treeSet84.toArray();
    Object obj91 = treeSet83.lower((Object)obj_array90);
    java.util.Comparator comparator92 = null;
    java.util.TreeSet treeSet93 = new java.util.TreeSet(comparator92);
    boolean b94 = treeSet83.containsAll((java.util.Collection)treeSet93);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet95 = treeSet30.subSet((Object)treeSet68, (Object)b94);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "[]"+ "'", str37.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i59 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator63);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator64);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator66);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator75);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array77);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array78);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array79);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b81 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet82);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator85);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array87);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array88);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj89);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array90);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj91);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b94 == true);

  }

  @Test
  public void test237() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test237"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b7 = treeSet3.remove((Object)(short)10);
    int i8 = treeSet3.size();
    java.util.Spliterator spliterator9 = treeSet3.spliterator();
    java.util.stream.Stream stream10 = treeSet3.parallelStream();
    java.util.NavigableSet navigableSet11 = treeSet3.descendingSet();
    java.util.Comparator comparator12 = treeSet3.comparator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator12);

  }

  @Test
  public void test238() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test238"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    String str6 = treeSet0.toString();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "[]"+ "'", str6.equals("[]"));

  }

  @Test
  public void test239() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test239"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    Object[] obj_array18 = treeSet7.toArray();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object[] obj_array23 = new Object[] { (byte)10 };
    Object[] obj_array24 = treeSet20.toArray(obj_array23);
    Object obj25 = treeSet20.pollLast();
    Object[] obj_array26 = treeSet20.toArray();
    Object obj27 = treeSet19.lower((Object)obj_array26);
    java.util.Comparator comparator28 = null;
    java.util.TreeSet treeSet29 = new java.util.TreeSet(comparator28);
    boolean b30 = treeSet19.containsAll((java.util.Collection)treeSet29);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet31 = treeSet7.headSet((Object)treeSet29);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b30 == true);

  }

  @Test
  public void test240() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test240"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    boolean b20 = treeSet3.contains((Object)(byte)100);
    java.util.stream.Stream stream21 = treeSet3.parallelStream();
    java.util.TreeSet treeSet22 = new java.util.TreeSet((java.util.Collection)treeSet3);
    java.util.Comparator comparator23 = null;
    java.util.TreeSet treeSet24 = new java.util.TreeSet(comparator23);
    boolean b25 = treeSet22.containsAll((java.util.Collection)treeSet24);
    // The following exception was thrown during execution in test generation
    try {
      Object obj26 = treeSet22.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);

  }

  @Test
  public void test241() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test241"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    Object obj7 = treeSet0.higher((Object)(short)(-1));
    Object[] obj_array8 = treeSet0.toArray();
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)treeSet0);
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    boolean b11 = treeSet10.isEmpty();
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    java.util.Iterator iterator14 = treeSet12.descendingIterator();
    boolean b15 = treeSet10.containsAll((java.util.Collection)treeSet12);
    java.util.stream.Stream stream16 = treeSet10.parallelStream();
    Object obj17 = treeSet10.clone();
    int i18 = treeSet10.size();
    boolean b19 = treeSet0.addAll((java.util.Collection)treeSet10);
    java.util.Iterator iterator20 = treeSet10.iterator();
    java.util.stream.Stream stream21 = treeSet10.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b15 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i18 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream21);

  }

  @Test
  public void test242() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test242"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    boolean b2 = treeSet1.isEmpty();
    java.util.SortedSet sortedSet3 = treeSet0.headSet((Object)b2);
    java.util.TreeSet treeSet4 = new java.util.TreeSet(sortedSet3);
    java.util.TreeSet treeSet5 = new java.util.TreeSet();
    java.util.Iterator iterator6 = treeSet5.descendingIterator();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object[] obj_array12 = treeSet5.toArray(obj_array11);
    Object obj13 = treeSet4.lower((Object)treeSet5);
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    boolean b16 = treeSet15.isEmpty();
    java.util.SortedSet sortedSet17 = treeSet14.headSet((Object)b16);
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    java.util.Spliterator spliterator20 = treeSet18.spliterator();
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.Iterator iterator22 = treeSet21.descendingIterator();
    Object obj23 = treeSet18.lower((Object)treeSet21);
    java.util.NavigableSet navigableSet26 = treeSet21.headSet((Object)(-1.0f), true);
    boolean b27 = treeSet14.addAll((java.util.Collection)treeSet21);
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    java.util.Spliterator spliterator30 = treeSet28.spliterator();
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.Iterator iterator32 = treeSet31.descendingIterator();
    Object obj33 = treeSet28.lower((Object)treeSet31);
    int i34 = treeSet31.size();
    Object obj36 = treeSet31.lower((Object)true);
    boolean b37 = treeSet21.retainAll((java.util.Collection)treeSet31);
    Object obj38 = treeSet4.higher((Object)b37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);

  }

  @Test
  public void test243() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test243"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object[] obj_array9 = new Object[] { (byte)10 };
    Object[] obj_array10 = treeSet6.toArray(obj_array9);
    Object obj11 = treeSet6.pollLast();
    java.util.Comparator comparator12 = treeSet6.comparator();
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet6);
    java.util.Iterator iterator14 = treeSet6.descendingIterator();
    Object obj15 = treeSet6.pollFirst();
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    java.util.Spliterator spliterator18 = treeSet16.spliterator();
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    java.util.Spliterator spliterator21 = treeSet19.spliterator();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object obj24 = treeSet19.lower((Object)treeSet22);
    Object obj25 = treeSet16.lower((Object)treeSet22);
    java.util.Spliterator spliterator26 = treeSet22.spliterator();
    java.util.Spliterator spliterator27 = treeSet22.spliterator();
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet29 = treeSet6.tailSet((Object)treeSet22, false);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator27);

  }

  @Test
  public void test244() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test244"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    int i17 = treeSet0.size();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet0);
    java.util.Comparator comparator19 = treeSet18.comparator();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    boolean b21 = treeSet20.isEmpty();
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    java.util.Iterator iterator24 = treeSet22.descendingIterator();
    boolean b25 = treeSet20.containsAll((java.util.Collection)treeSet22);
    Object obj27 = treeSet20.higher((Object)(short)(-1));
    Object[] obj_array28 = treeSet20.toArray();
    java.util.TreeSet treeSet29 = new java.util.TreeSet((java.util.Collection)treeSet20);
    java.util.TreeSet treeSet30 = new java.util.TreeSet();
    boolean b31 = treeSet30.isEmpty();
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    java.util.Iterator iterator34 = treeSet32.descendingIterator();
    boolean b35 = treeSet30.containsAll((java.util.Collection)treeSet32);
    java.util.stream.Stream stream36 = treeSet30.parallelStream();
    Object obj37 = treeSet30.clone();
    int i38 = treeSet30.size();
    boolean b39 = treeSet20.addAll((java.util.Collection)treeSet30);
    java.util.Iterator iterator40 = treeSet30.iterator();
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet42 = treeSet18.tailSet((Object)treeSet30, true);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b21 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator40);

  }

  @Test
  public void test245() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test245"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object[] obj_array9 = new Object[] { (byte)10 };
    Object[] obj_array10 = treeSet6.toArray(obj_array9);
    Object obj11 = treeSet6.pollLast();
    java.util.Comparator comparator12 = treeSet6.comparator();
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet6);
    java.util.Iterator iterator14 = treeSet6.descendingIterator();
    Object obj15 = treeSet6.pollFirst();
    java.util.Comparator comparator16 = treeSet6.comparator();
    java.util.TreeSet treeSet17 = new java.util.TreeSet((java.util.Collection)treeSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator16);

  }

  @Test
  public void test246() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test246"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    java.util.Iterator iterator4 = treeSet2.descendingIterator();
    boolean b5 = treeSet0.containsAll((java.util.Collection)treeSet2);
    Object obj7 = treeSet0.higher((Object)(short)(-1));
    Object[] obj_array8 = treeSet0.toArray();
    java.util.TreeSet treeSet9 = new java.util.TreeSet((java.util.Collection)treeSet0);
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.Spliterator spliterator12 = treeSet10.spliterator();
    java.util.TreeSet treeSet13 = new java.util.TreeSet();
    java.util.Iterator iterator14 = treeSet13.descendingIterator();
    Object obj15 = treeSet10.lower((Object)treeSet13);
    Object obj16 = treeSet10.pollLast();
    Object obj17 = treeSet0.lower(obj16);
    // The following exception was thrown during execution in test generation
    try {
      Object obj18 = treeSet0.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b5 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);

  }

  @Test
  public void test247() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test247"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    boolean b7 = treeSet6.isEmpty();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.Iterator iterator10 = treeSet8.descendingIterator();
    boolean b11 = treeSet6.containsAll((java.util.Collection)treeSet8);
    int i12 = treeSet6.size();
    boolean b13 = treeSet0.containsAll((java.util.Collection)treeSet6);
    // The following exception was thrown during execution in test generation
    try {
      Object obj14 = treeSet6.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);

  }

  @Test
  public void test248() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test248"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    java.util.Spliterator spliterator5 = treeSet3.spliterator();
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object obj8 = treeSet3.lower((Object)treeSet6);
    Object obj9 = treeSet0.lower((Object)treeSet6);
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    Object[] obj_array15 = new Object[] { (byte)10 };
    Object[] obj_array16 = treeSet12.toArray(obj_array15);
    Object[] obj_array17 = treeSet10.toArray(obj_array16);
    boolean b19 = treeSet10.add((Object)10.0d);
    java.util.SortedSet sortedSet20 = treeSet6.headSet((Object)b19);
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.Iterator iterator22 = treeSet21.descendingIterator();
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    Object[] obj_array26 = new Object[] { (byte)10 };
    Object[] obj_array27 = treeSet23.toArray(obj_array26);
    Object[] obj_array28 = treeSet21.toArray(obj_array27);
    Object obj30 = treeSet21.floor((Object)(byte)(-1));
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.Iterator iterator32 = treeSet31.descendingIterator();
    Object[] obj_array34 = new Object[] { (byte)10 };
    Object[] obj_array35 = treeSet31.toArray(obj_array34);
    Object obj36 = treeSet31.pollLast();
    Object[] obj_array37 = treeSet31.toArray();
    Object[] obj_array38 = treeSet21.toArray(obj_array37);
    Object[] obj_array39 = treeSet6.toArray(obj_array38);
    java.util.TreeSet treeSet40 = new java.util.TreeSet();
    java.util.Iterator iterator41 = treeSet40.descendingIterator();
    Object[] obj_array43 = new Object[] { (byte)10 };
    Object[] obj_array44 = treeSet40.toArray(obj_array43);
    java.util.SortedSet sortedSet46 = treeSet40.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet47 = new java.util.TreeSet();
    java.util.Iterator iterator48 = treeSet47.descendingIterator();
    Object[] obj_array50 = new Object[] { (byte)10 };
    Object[] obj_array51 = treeSet47.toArray(obj_array50);
    Object obj52 = treeSet47.pollLast();
    java.util.Comparator comparator53 = treeSet47.comparator();
    Object obj54 = null;
    Object obj55 = treeSet47.lower(obj54);
    boolean b56 = treeSet40.containsAll((java.util.Collection)treeSet47);
    java.util.NavigableSet navigableSet57 = treeSet40.descendingSet();
    Object obj58 = treeSet6.ceiling((Object)treeSet40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj58);

  }

  @Test
  public void test249() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test249"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    java.util.Iterator iterator2 = treeSet1.descendingIterator();
    Object[] obj_array4 = new Object[] { (byte)10 };
    Object[] obj_array5 = treeSet1.toArray(obj_array4);
    Object obj6 = treeSet1.pollLast();
    Object[] obj_array7 = treeSet1.toArray();
    Object obj8 = treeSet0.lower((Object)obj_array7);
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    Object obj17 = treeSet16.clone();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object[] obj_array23 = new Object[] { (byte)10 };
    Object[] obj_array24 = treeSet20.toArray(obj_array23);
    Object[] obj_array25 = treeSet18.toArray(obj_array24);
    Object obj27 = treeSet18.lower((Object)(-1.0f));
    java.util.Spliterator spliterator28 = treeSet18.spliterator();
    boolean b29 = treeSet16.addAll((java.util.Collection)treeSet18);
    java.util.Iterator iterator30 = treeSet18.iterator();
    Object obj31 = treeSet0.lower((Object)iterator30);
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    java.util.Spliterator spliterator34 = treeSet32.spliterator();
    java.util.Iterator iterator35 = treeSet32.descendingIterator();
    int i36 = treeSet32.size();
    boolean b37 = treeSet0.retainAll((java.util.Collection)treeSet32);
    int i38 = treeSet32.size();
    Object[] obj_array39 = treeSet32.toArray();
    java.util.TreeSet treeSet40 = new java.util.TreeSet();
    java.util.Iterator iterator41 = treeSet40.descendingIterator();
    java.util.Spliterator spliterator42 = treeSet40.spliterator();
    java.util.TreeSet treeSet43 = new java.util.TreeSet();
    java.util.Iterator iterator44 = treeSet43.descendingIterator();
    Object obj45 = treeSet40.lower((Object)treeSet43);
    int i46 = treeSet43.size();
    Object obj48 = treeSet43.lower((Object)true);
    java.util.Comparator comparator49 = treeSet43.comparator();
    java.util.TreeSet treeSet50 = new java.util.TreeSet();
    boolean b51 = treeSet50.isEmpty();
    java.util.TreeSet treeSet52 = new java.util.TreeSet();
    java.util.Iterator iterator53 = treeSet52.descendingIterator();
    Object[] obj_array55 = new Object[] { (byte)10 };
    Object[] obj_array56 = treeSet52.toArray(obj_array55);
    java.util.SortedSet sortedSet58 = treeSet52.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet59 = new java.util.TreeSet((java.util.Collection)sortedSet58);
    boolean b60 = treeSet50.addAll((java.util.Collection)sortedSet58);
    boolean b61 = treeSet43.addAll((java.util.Collection)treeSet50);
    java.util.TreeSet treeSet62 = new java.util.TreeSet();
    java.util.TreeSet treeSet63 = new java.util.TreeSet();
    boolean b64 = treeSet63.isEmpty();
    java.util.SortedSet sortedSet65 = treeSet62.headSet((Object)b64);
    java.util.TreeSet treeSet66 = new java.util.TreeSet(sortedSet65);
    java.util.TreeSet treeSet67 = new java.util.TreeSet();
    java.util.Iterator iterator68 = treeSet67.descendingIterator();
    java.util.TreeSet treeSet69 = new java.util.TreeSet();
    java.util.Iterator iterator70 = treeSet69.descendingIterator();
    Object[] obj_array72 = new Object[] { (byte)10 };
    Object[] obj_array73 = treeSet69.toArray(obj_array72);
    Object[] obj_array74 = treeSet67.toArray(obj_array73);
    Object obj75 = treeSet66.lower((Object)treeSet67);
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet76 = treeSet32.subSet((Object)treeSet50, (Object)treeSet66);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b29 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i36 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i38 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i46 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b51 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet58);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b60 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b61 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b64 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array72);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array74);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj75);

  }

  @Test
  public void test250() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test250"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    boolean b20 = treeSet19.isEmpty();
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.Iterator iterator22 = treeSet21.descendingIterator();
    java.util.Iterator iterator23 = treeSet21.descendingIterator();
    boolean b24 = treeSet19.containsAll((java.util.Collection)treeSet21);
    java.util.stream.Stream stream25 = treeSet19.parallelStream();
    Object obj26 = treeSet19.clone();
    int i27 = treeSet19.size();
    Object obj28 = treeSet18.ceiling((Object)treeSet19);
    java.util.TreeSet treeSet29 = new java.util.TreeSet((java.util.Collection)treeSet18);
    java.util.TreeSet treeSet30 = new java.util.TreeSet();
    java.util.Iterator iterator31 = treeSet30.descendingIterator();
    Object[] obj_array33 = new Object[] { (byte)10 };
    Object[] obj_array34 = treeSet30.toArray(obj_array33);
    Object obj35 = treeSet30.pollLast();
    Object[] obj_array36 = treeSet30.toArray();
    // The following exception was thrown during execution in test generation
    try {
      boolean b37 = treeSet29.remove((Object)treeSet30);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i27 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);

  }

  @Test
  public void test251() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test251"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Iterator iterator2 = treeSet0.descendingIterator();
    java.util.NavigableSet navigableSet5 = treeSet0.tailSet((Object)(byte)10, true);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    java.util.Spliterator spliterator8 = treeSet6.spliterator();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object obj11 = treeSet6.lower((Object)treeSet9);
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    Object[] obj_array15 = new Object[] { (byte)10 };
    Object[] obj_array16 = treeSet12.toArray(obj_array15);
    Object obj17 = treeSet12.pollLast();
    java.util.Comparator comparator18 = treeSet12.comparator();
    boolean b19 = treeSet6.addAll((java.util.Collection)treeSet12);
    java.util.Iterator iterator20 = treeSet12.descendingIterator();
    Object obj21 = treeSet12.clone();
    // The following exception was thrown during execution in test generation
    try {
      java.util.NavigableSet navigableSet23 = treeSet0.tailSet((Object)treeSet12, false);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj21);

  }

  @Test
  public void test252() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test252"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    boolean b20 = treeSet3.contains((Object)(byte)100);
    java.util.stream.Stream stream21 = treeSet3.parallelStream();
    java.util.TreeSet treeSet22 = new java.util.TreeSet((java.util.Collection)treeSet3);
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    Object[] obj_array26 = new Object[] { (byte)10 };
    Object[] obj_array27 = treeSet23.toArray(obj_array26);
    java.util.SortedSet sortedSet29 = treeSet23.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet30 = new java.util.TreeSet();
    java.util.Iterator iterator31 = treeSet30.descendingIterator();
    Object[] obj_array33 = new Object[] { (byte)10 };
    Object[] obj_array34 = treeSet30.toArray(obj_array33);
    Object obj35 = treeSet30.pollLast();
    java.util.Comparator comparator36 = treeSet30.comparator();
    Object obj37 = null;
    Object obj38 = treeSet30.lower(obj37);
    boolean b39 = treeSet23.containsAll((java.util.Collection)treeSet30);
    java.util.NavigableSet navigableSet40 = treeSet30.descendingSet();
    java.util.TreeSet treeSet41 = new java.util.TreeSet((java.util.SortedSet)treeSet30);
    boolean b42 = treeSet22.equals((Object)treeSet30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b42 == true);

  }

  @Test
  public void test253() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test253"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet7.descendingSet();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.SortedSet sortedSet21 = treeSet19.headSet((Object)(byte)0);
    Object obj22 = treeSet7.lower((Object)treeSet19);
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    Object[] obj_array26 = new Object[] { (byte)10 };
    Object[] obj_array27 = treeSet23.toArray(obj_array26);
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    Object[] obj_array31 = new Object[] { (byte)10 };
    Object[] obj_array32 = treeSet28.toArray(obj_array31);
    java.util.SortedSet sortedSet34 = treeSet28.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet35 = new java.util.TreeSet((java.util.Collection)sortedSet34);
    boolean b36 = treeSet23.addAll((java.util.Collection)treeSet35);
    Object obj37 = treeSet7.lower((Object)b36);
    Object obj38 = treeSet7.pollLast();
    java.util.TreeSet treeSet39 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet40 = new java.util.TreeSet((java.util.SortedSet)treeSet39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);

  }

  @Test
  public void test254() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test254"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    boolean b1 = treeSet0.isEmpty();
    Object[] obj_array2 = treeSet0.toArray();
    treeSet0.clear();
    java.util.Iterator iterator4 = treeSet0.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b1 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);

  }

  @Test
  public void test255() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test255"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    boolean b20 = treeSet3.contains((Object)(byte)100);
    java.util.stream.Stream stream21 = treeSet3.parallelStream();
    java.util.TreeSet treeSet22 = new java.util.TreeSet((java.util.Collection)treeSet3);
    java.util.Comparator comparator23 = null;
    java.util.TreeSet treeSet24 = new java.util.TreeSet(comparator23);
    boolean b25 = treeSet22.containsAll((java.util.Collection)treeSet24);
    Object obj26 = treeSet22.clone();
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    Object[] obj_array31 = new Object[] { (byte)10 };
    Object[] obj_array32 = treeSet28.toArray(obj_array31);
    Object obj33 = treeSet28.pollLast();
    Object[] obj_array34 = treeSet28.toArray();
    Object obj35 = treeSet27.lower((Object)obj_array34);
    boolean b36 = treeSet22.retainAll((java.util.Collection)treeSet27);
    java.util.TreeSet treeSet37 = new java.util.TreeSet();
    boolean b38 = treeSet37.isEmpty();
    Object[] obj_array39 = treeSet37.toArray();
    Object obj40 = treeSet22.floor((Object)obj_array39);
    Object obj41 = treeSet22.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b38 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj41);

  }

  @Test
  public void test256() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test256"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.TreeSet treeSet17 = new java.util.TreeSet((java.util.Collection)treeSet7);
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);

  }

  @Test
  public void test257() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test257"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet0.descendingSet();
    Object obj19 = treeSet0.lower((Object)(short)(-1));
    java.util.TreeSet treeSet20 = new java.util.TreeSet((java.util.SortedSet)treeSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj19);

  }

  @Test
  public void test258() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test258"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    Object obj8 = treeSet7.clone();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    Object[] obj_array16 = treeSet9.toArray(obj_array15);
    Object obj18 = treeSet9.lower((Object)(-1.0f));
    java.util.Spliterator spliterator19 = treeSet9.spliterator();
    boolean b20 = treeSet7.addAll((java.util.Collection)treeSet9);
    java.util.TreeSet treeSet21 = new java.util.TreeSet((java.util.Collection)treeSet7);
    Object obj22 = treeSet7.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj22);

  }

  @Test
  public void test259() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test259"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.Spliterator spliterator12 = treeSet10.spliterator();
    java.util.TreeSet treeSet13 = new java.util.TreeSet();
    java.util.Iterator iterator14 = treeSet13.descendingIterator();
    Object obj15 = treeSet10.lower((Object)treeSet13);
    boolean b16 = treeSet13.isEmpty();
    Object obj17 = treeSet0.floor((Object)treeSet13);
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    java.util.Iterator iterator20 = treeSet18.descendingIterator();
    java.util.NavigableSet navigableSet23 = treeSet18.tailSet((Object)(byte)10, true);
    boolean b24 = treeSet0.addAll((java.util.Collection)treeSet18);
    Object[] obj_array25 = treeSet0.toArray();
    java.util.SortedSet sortedSet27 = treeSet0.tailSet((Object)'4');
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet27);

  }

  @Test
  public void test260() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test260"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    Object obj6 = treeSet0.pollLast();
    Object obj7 = treeSet0.pollLast();
    Object[] obj_array8 = treeSet0.toArray();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    java.util.Iterator iterator11 = treeSet9.descendingIterator();
    java.util.Iterator iterator12 = treeSet9.iterator();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet13 = treeSet0.headSet((Object)iterator12);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);

  }

  @Test
  public void test261() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test261"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.NavigableSet navigableSet17 = treeSet0.descendingSet();
    java.util.Spliterator spliterator18 = treeSet0.spliterator();
    java.util.stream.Stream stream19 = treeSet0.stream();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object[] obj_array23 = new Object[] { (byte)10 };
    Object[] obj_array24 = treeSet20.toArray(obj_array23);
    java.util.SortedSet sortedSet26 = treeSet20.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet27 = new java.util.TreeSet();
    java.util.Iterator iterator28 = treeSet27.descendingIterator();
    Object[] obj_array30 = new Object[] { (byte)10 };
    Object[] obj_array31 = treeSet27.toArray(obj_array30);
    Object obj32 = treeSet27.pollLast();
    java.util.Comparator comparator33 = treeSet27.comparator();
    Object obj34 = null;
    Object obj35 = treeSet27.lower(obj34);
    boolean b36 = treeSet20.containsAll((java.util.Collection)treeSet27);
    java.util.NavigableSet navigableSet37 = treeSet27.descendingSet();
    java.util.TreeSet treeSet38 = new java.util.TreeSet((java.util.SortedSet)treeSet27);
    java.util.TreeSet treeSet39 = new java.util.TreeSet();
    java.util.SortedSet sortedSet41 = treeSet39.headSet((Object)(byte)0);
    Object obj42 = treeSet27.lower((Object)treeSet39);
    Object obj43 = treeSet0.lower((Object)treeSet27);
    java.util.TreeSet treeSet44 = new java.util.TreeSet();
    boolean b45 = treeSet44.isEmpty();
    java.util.TreeSet treeSet46 = new java.util.TreeSet();
    java.util.Iterator iterator47 = treeSet46.descendingIterator();
    java.util.Iterator iterator48 = treeSet46.descendingIterator();
    boolean b49 = treeSet44.containsAll((java.util.Collection)treeSet46);
    java.util.stream.Stream stream50 = treeSet44.parallelStream();
    Object obj51 = treeSet44.clone();
    Object obj53 = treeSet44.floor((Object)(-1.0d));
    String str54 = treeSet44.toString();
    java.util.TreeSet treeSet55 = new java.util.TreeSet();
    java.util.Iterator iterator56 = treeSet55.descendingIterator();
    java.util.Spliterator spliterator57 = treeSet55.spliterator();
    java.util.TreeSet treeSet58 = new java.util.TreeSet();
    java.util.Iterator iterator59 = treeSet58.descendingIterator();
    Object obj60 = treeSet55.lower((Object)treeSet58);
    Object obj61 = treeSet55.pollLast();
    boolean b62 = treeSet55.isEmpty();
    boolean b63 = treeSet44.removeAll((java.util.Collection)treeSet55);
    java.util.TreeSet treeSet64 = new java.util.TreeSet();
    java.util.Iterator iterator65 = treeSet64.descendingIterator();
    Object[] obj_array67 = new Object[] { (byte)10 };
    Object[] obj_array68 = treeSet64.toArray(obj_array67);
    Object obj69 = treeSet64.pollLast();
    Object obj70 = treeSet64.pollLast();
    Object obj71 = treeSet64.clone();
    String str72 = treeSet64.toString();
    Object obj73 = treeSet55.higher((Object)treeSet64);
    boolean b74 = treeSet55.isEmpty();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet75 = treeSet0.headSet((Object)treeSet55);
      org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException");
    } catch (ClassCastException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.ClassCastException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b45 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "[]"+ "'", str54.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator56);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator57);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator59);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj60);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj61);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b62 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b63 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator65);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array67);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array68);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj69);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj70);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj71);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str72 + "' != '" + "[]"+ "'", str72.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj73);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b74 == true);

  }

  @Test
  public void test262() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test262"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    boolean b2 = treeSet1.isEmpty();
    java.util.SortedSet sortedSet3 = treeSet0.headSet((Object)b2);
    java.util.TreeSet treeSet4 = new java.util.TreeSet();
    java.util.Iterator iterator5 = treeSet4.descendingIterator();
    java.util.Spliterator spliterator6 = treeSet4.spliterator();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object obj9 = treeSet4.lower((Object)treeSet7);
    java.util.NavigableSet navigableSet12 = treeSet7.headSet((Object)(-1.0f), true);
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet7);
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    java.util.Spliterator spliterator16 = treeSet14.spliterator();
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    Object obj19 = treeSet14.lower((Object)treeSet17);
    int i20 = treeSet17.size();
    Object obj22 = treeSet17.lower((Object)true);
    boolean b23 = treeSet7.retainAll((java.util.Collection)treeSet17);
    boolean b25 = treeSet7.contains((Object)0.0d);
    java.util.TreeSet treeSet26 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    java.util.TreeSet treeSet27 = new java.util.TreeSet((java.util.SortedSet)treeSet7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i20 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == false);

  }

  @Test
  public void test263() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test263"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.headSet((Object)1.0d);
    java.util.Spliterator spliterator7 = treeSet0.spliterator();
    java.util.NavigableSet navigableSet8 = treeSet0.descendingSet();
    java.util.stream.Stream stream9 = treeSet0.parallelStream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream9);

  }

  @Test
  public void test264() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test264"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    boolean b7 = treeSet6.isEmpty();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.Iterator iterator10 = treeSet8.descendingIterator();
    boolean b11 = treeSet6.containsAll((java.util.Collection)treeSet8);
    int i12 = treeSet6.size();
    boolean b13 = treeSet0.containsAll((java.util.Collection)treeSet6);
    java.util.Collection collection14 = null;
    // The following exception was thrown during execution in test generation
    try {
      boolean b15 = treeSet6.retainAll(collection14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i12 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);

  }

  @Test
  public void test265() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test265"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    java.util.Iterator iterator2 = treeSet1.descendingIterator();
    java.util.Spliterator spliterator3 = treeSet1.spliterator();
    java.util.TreeSet treeSet4 = new java.util.TreeSet();
    java.util.Iterator iterator5 = treeSet4.descendingIterator();
    Object obj6 = treeSet1.lower((Object)treeSet4);
    int i7 = treeSet4.size();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    boolean b9 = treeSet8.isEmpty();
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    Object[] obj_array13 = new Object[] { (byte)10 };
    Object[] obj_array14 = treeSet10.toArray(obj_array13);
    java.util.SortedSet sortedSet16 = treeSet10.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet17 = new java.util.TreeSet((java.util.Collection)sortedSet16);
    boolean b18 = treeSet8.addAll((java.util.Collection)sortedSet16);
    Object obj19 = treeSet4.lower((Object)b18);
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object[] obj_array23 = new Object[] { (byte)10 };
    Object[] obj_array24 = treeSet20.toArray(obj_array23);
    java.util.SortedSet sortedSet26 = treeSet20.headSet((Object)1.0d);
    String str27 = treeSet20.toString();
    Object obj28 = treeSet4.higher((Object)treeSet20);
    java.util.TreeSet treeSet29 = new java.util.TreeSet();
    java.util.Iterator iterator30 = treeSet29.descendingIterator();
    Object[] obj_array32 = new Object[] { (byte)10 };
    Object[] obj_array33 = treeSet29.toArray(obj_array32);
    java.util.SortedSet sortedSet35 = treeSet29.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet36 = new java.util.TreeSet((java.util.SortedSet)treeSet29);
    java.util.NavigableSet navigableSet37 = treeSet29.descendingSet();
    Object obj38 = treeSet20.lower((Object)navigableSet37);
    boolean b39 = treeSet0.equals(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b18 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[]"+ "'", str27.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b39 == false);

  }

  @Test
  public void test266() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test266"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.stream.Stream stream5 = treeSet0.stream();
    boolean b6 = treeSet0.isEmpty();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    Object[] obj_array21 = new Object[] { (byte)10 };
    Object[] obj_array22 = treeSet18.toArray(obj_array21);
    Object[] obj_array23 = treeSet16.toArray(obj_array22);
    Object obj25 = treeSet16.floor((Object)(byte)(-1));
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.Iterator iterator27 = treeSet26.descendingIterator();
    Object[] obj_array29 = new Object[] { (byte)10 };
    Object[] obj_array30 = treeSet26.toArray(obj_array29);
    Object obj31 = treeSet26.pollLast();
    Object[] obj_array32 = treeSet26.toArray();
    Object[] obj_array33 = treeSet16.toArray(obj_array32);
    Object[] obj_array34 = treeSet7.toArray(obj_array33);
    boolean b35 = treeSet0.containsAll((java.util.Collection)treeSet7);
    // The following exception was thrown during execution in test generation
    try {
      Object obj36 = treeSet0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == true);

  }

  @Test
  public void test267() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test267"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Iterator iterator2 = treeSet0.descendingIterator();
    Object obj3 = treeSet0.pollFirst();
    java.util.TreeSet treeSet4 = new java.util.TreeSet();
    java.util.Iterator iterator5 = treeSet4.descendingIterator();
    Object[] obj_array7 = new Object[] { (byte)10 };
    Object[] obj_array8 = treeSet4.toArray(obj_array7);
    java.util.SortedSet sortedSet10 = treeSet4.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    Object obj16 = treeSet11.pollLast();
    java.util.Comparator comparator17 = treeSet11.comparator();
    Object obj18 = null;
    Object obj19 = treeSet11.lower(obj18);
    boolean b20 = treeSet4.containsAll((java.util.Collection)treeSet11);
    java.util.NavigableSet navigableSet21 = treeSet11.descendingSet();
    Object obj22 = treeSet0.floor((Object)navigableSet21);
    boolean b23 = treeSet0.isEmpty();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);

  }

  @Test
  public void test268() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test268"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b6 = treeSet3.isEmpty();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    java.util.Spliterator spliterator9 = treeSet7.spliterator();
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    Object obj12 = treeSet7.lower((Object)treeSet10);
    java.util.TreeSet treeSet13 = new java.util.TreeSet();
    java.util.Iterator iterator14 = treeSet13.descendingIterator();
    Object[] obj_array16 = new Object[] { (byte)10 };
    Object[] obj_array17 = treeSet13.toArray(obj_array16);
    Object obj18 = treeSet13.pollLast();
    java.util.Comparator comparator19 = treeSet13.comparator();
    boolean b20 = treeSet7.addAll((java.util.Collection)treeSet13);
    java.util.Iterator iterator21 = treeSet13.descendingIterator();
    Object obj22 = treeSet13.pollFirst();
    // The following exception was thrown during execution in test generation
    try {
      java.util.SortedSet sortedSet23 = treeSet3.tailSet(obj22);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b6 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);

  }

  @Test
  public void test269() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test269"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    int i6 = treeSet3.size();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    boolean b8 = treeSet7.isEmpty();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    Object[] obj_array12 = new Object[] { (byte)10 };
    Object[] obj_array13 = treeSet9.toArray(obj_array12);
    java.util.SortedSet sortedSet15 = treeSet9.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet16 = new java.util.TreeSet((java.util.Collection)sortedSet15);
    boolean b17 = treeSet7.addAll((java.util.Collection)sortedSet15);
    Object obj18 = treeSet3.lower((Object)b17);
    boolean b20 = treeSet3.contains((Object)(byte)100);
    java.util.stream.Stream stream21 = treeSet3.parallelStream();
    java.util.TreeSet treeSet22 = new java.util.TreeSet((java.util.Collection)treeSet3);
    java.util.Comparator comparator23 = null;
    java.util.TreeSet treeSet24 = new java.util.TreeSet(comparator23);
    boolean b25 = treeSet22.containsAll((java.util.Collection)treeSet24);
    java.util.Iterator iterator26 = treeSet22.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i6 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b8 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b17 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b25 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator26);

  }

  @Test
  public void test270() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test270"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    Object obj8 = treeSet7.clone();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    Object[] obj_array16 = treeSet9.toArray(obj_array15);
    Object obj18 = treeSet9.lower((Object)(-1.0f));
    java.util.Spliterator spliterator19 = treeSet9.spliterator();
    boolean b20 = treeSet7.addAll((java.util.Collection)treeSet9);
    java.util.Iterator iterator21 = treeSet9.iterator();
    // The following exception was thrown during execution in test generation
    try {
      Object obj22 = treeSet9.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);

  }

  @Test
  public void test271() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test271"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.TreeSet treeSet5 = new java.util.TreeSet();
    java.util.Iterator iterator6 = treeSet5.descendingIterator();
    Object[] obj_array8 = new Object[] { (byte)10 };
    Object[] obj_array9 = treeSet5.toArray(obj_array8);
    java.util.SortedSet sortedSet11 = treeSet5.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet12 = new java.util.TreeSet((java.util.Collection)sortedSet11);
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet12);
    java.util.stream.Stream stream14 = treeSet12.stream();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    java.util.Iterator iterator16 = treeSet15.descendingIterator();
    Object[] obj_array18 = new Object[] { (byte)10 };
    Object[] obj_array19 = treeSet15.toArray(obj_array18);
    java.util.SortedSet sortedSet21 = treeSet15.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet22 = new java.util.TreeSet();
    java.util.Iterator iterator23 = treeSet22.descendingIterator();
    Object[] obj_array25 = new Object[] { (byte)10 };
    Object[] obj_array26 = treeSet22.toArray(obj_array25);
    Object obj27 = treeSet22.pollLast();
    java.util.Comparator comparator28 = treeSet22.comparator();
    Object obj29 = null;
    Object obj30 = treeSet22.lower(obj29);
    boolean b31 = treeSet15.containsAll((java.util.Collection)treeSet22);
    java.util.NavigableSet navigableSet32 = treeSet22.descendingSet();
    java.util.TreeSet treeSet33 = new java.util.TreeSet((java.util.SortedSet)treeSet22);
    java.util.Comparator comparator34 = treeSet22.comparator();
    boolean b35 = treeSet12.addAll((java.util.Collection)treeSet22);
    // The following exception was thrown during execution in test generation
    try {
      Object obj36 = treeSet22.last();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b31 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b35 == false);

  }

  @Test
  public void test272() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test272"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.TreeSet treeSet6 = new java.util.TreeSet((java.util.Collection)treeSet0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    java.util.SortedSet sortedSet13 = treeSet7.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    Object[] obj_array17 = new Object[] { (byte)10 };
    Object[] obj_array18 = treeSet14.toArray(obj_array17);
    Object obj19 = treeSet14.pollLast();
    java.util.Comparator comparator20 = treeSet14.comparator();
    Object obj21 = null;
    Object obj22 = treeSet14.lower(obj21);
    boolean b23 = treeSet7.containsAll((java.util.Collection)treeSet14);
    java.util.NavigableSet navigableSet24 = treeSet14.descendingSet();
    java.util.TreeSet treeSet25 = new java.util.TreeSet();
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.Iterator iterator27 = treeSet26.descendingIterator();
    java.util.Spliterator spliterator28 = treeSet26.spliterator();
    java.util.TreeSet treeSet29 = new java.util.TreeSet();
    java.util.Iterator iterator30 = treeSet29.descendingIterator();
    Object obj31 = treeSet26.lower((Object)treeSet29);
    int i32 = treeSet29.size();
    Object obj34 = treeSet29.lower((Object)true);
    java.util.Comparator comparator35 = treeSet29.comparator();
    boolean b36 = treeSet25.equals((Object)comparator35);
    boolean b37 = treeSet14.remove((Object)b36);
    Object obj38 = treeSet14.pollLast();
    java.util.TreeSet treeSet39 = new java.util.TreeSet();
    java.util.Iterator iterator40 = treeSet39.descendingIterator();
    Object[] obj_array42 = new Object[] { (byte)10 };
    Object[] obj_array43 = treeSet39.toArray(obj_array42);
    Object obj44 = treeSet39.pollLast();
    java.util.NavigableSet navigableSet45 = treeSet39.descendingSet();
    boolean b46 = treeSet14.retainAll((java.util.Collection)treeSet39);
    Object obj47 = treeSet6.lower((Object)treeSet39);
    java.util.TreeSet treeSet48 = new java.util.TreeSet();
    java.util.Iterator iterator49 = treeSet48.descendingIterator();
    Object[] obj_array51 = new Object[] { (byte)10 };
    Object[] obj_array52 = treeSet48.toArray(obj_array51);
    Object obj53 = treeSet48.pollLast();
    java.util.TreeSet treeSet54 = new java.util.TreeSet((java.util.Collection)treeSet48);
    Object obj56 = treeSet54.ceiling((Object)0.0d);
    // The following exception was thrown during execution in test generation
    try {
      boolean b57 = treeSet39.contains(obj56);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b23 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i32 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b36 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b46 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array51);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array52);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj56);

  }

  @Test
  public void test273() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test273"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.Comparator comparator10 = treeSet0.comparator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    java.util.Spliterator spliterator13 = treeSet11.spliterator();
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.Iterator iterator15 = treeSet14.descendingIterator();
    Object obj16 = treeSet11.lower((Object)treeSet14);
    int i17 = treeSet14.size();
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    boolean b19 = treeSet18.isEmpty();
    java.util.TreeSet treeSet20 = new java.util.TreeSet();
    java.util.Iterator iterator21 = treeSet20.descendingIterator();
    Object[] obj_array23 = new Object[] { (byte)10 };
    Object[] obj_array24 = treeSet20.toArray(obj_array23);
    java.util.SortedSet sortedSet26 = treeSet20.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet27 = new java.util.TreeSet((java.util.Collection)sortedSet26);
    boolean b28 = treeSet18.addAll((java.util.Collection)sortedSet26);
    Object obj29 = treeSet14.lower((Object)b28);
    java.util.TreeSet treeSet30 = new java.util.TreeSet();
    java.util.Iterator iterator31 = treeSet30.descendingIterator();
    Object[] obj_array33 = new Object[] { (byte)10 };
    Object[] obj_array34 = treeSet30.toArray(obj_array33);
    java.util.SortedSet sortedSet36 = treeSet30.headSet((Object)1.0d);
    String str37 = treeSet30.toString();
    Object obj38 = treeSet14.higher((Object)treeSet30);
    java.util.TreeSet treeSet39 = new java.util.TreeSet();
    java.util.Iterator iterator40 = treeSet39.descendingIterator();
    Object[] obj_array42 = new Object[] { (byte)10 };
    Object[] obj_array43 = treeSet39.toArray(obj_array42);
    java.util.SortedSet sortedSet45 = treeSet39.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet46 = new java.util.TreeSet((java.util.SortedSet)treeSet39);
    java.util.NavigableSet navigableSet47 = treeSet39.descendingSet();
    Object obj48 = treeSet30.lower((Object)navigableSet47);
    boolean b49 = treeSet0.removeAll((java.util.Collection)treeSet30);
    Object obj50 = treeSet30.pollLast();
    java.util.stream.Stream stream51 = treeSet30.stream();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "[]"+ "'", str37.equals("[]"));
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj48);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b49 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj50);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream51);

  }

  @Test
  public void test274() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test274"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.Spliterator spliterator12 = treeSet10.spliterator();
    java.util.TreeSet treeSet13 = new java.util.TreeSet();
    java.util.Iterator iterator14 = treeSet13.descendingIterator();
    Object obj15 = treeSet10.lower((Object)treeSet13);
    boolean b16 = treeSet13.isEmpty();
    Object obj17 = treeSet0.floor((Object)treeSet13);
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    java.util.Iterator iterator20 = treeSet18.descendingIterator();
    java.util.NavigableSet navigableSet23 = treeSet18.tailSet((Object)(byte)10, true);
    boolean b24 = treeSet0.addAll((java.util.Collection)treeSet18);
    Object[] obj_array25 = treeSet0.toArray();
    java.util.TreeSet treeSet26 = new java.util.TreeSet();
    java.util.Iterator iterator27 = treeSet26.descendingIterator();
    java.util.Iterator iterator28 = treeSet26.descendingIterator();
    Object obj29 = treeSet26.pollFirst();
    java.util.NavigableSet navigableSet30 = treeSet26.descendingSet();
    Object obj31 = treeSet0.floor((Object)treeSet26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);

  }

  @Test
  public void test275() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test275"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.TreeSet treeSet5 = new java.util.TreeSet();
    java.util.Iterator iterator6 = treeSet5.descendingIterator();
    Object[] obj_array8 = new Object[] { (byte)10 };
    Object[] obj_array9 = treeSet5.toArray(obj_array8);
    java.util.SortedSet sortedSet11 = treeSet5.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet12 = new java.util.TreeSet((java.util.Collection)sortedSet11);
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet12);
    java.util.function.Consumer consumer14 = null;
    // The following exception was thrown during execution in test generation
    try {
      treeSet0.forEach(consumer14);
      org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException");
    } catch (NullPointerException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.lang.NullPointerException")) {
        org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);

  }

  @Test
  public void test276() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test276"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.Spliterator spliterator10 = treeSet0.spliterator();
    Object obj11 = treeSet0.clone();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj11);

  }

  @Test
  public void test277() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test277"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    java.util.TreeSet treeSet6 = new java.util.TreeSet();
    java.util.Iterator iterator7 = treeSet6.descendingIterator();
    Object[] obj_array9 = new Object[] { (byte)10 };
    Object[] obj_array10 = treeSet6.toArray(obj_array9);
    Object obj11 = treeSet6.pollLast();
    java.util.Comparator comparator12 = treeSet6.comparator();
    boolean b13 = treeSet0.addAll((java.util.Collection)treeSet6);
    java.util.Iterator iterator14 = treeSet6.descendingIterator();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    java.util.Iterator iterator16 = treeSet15.descendingIterator();
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    Object[] obj_array20 = new Object[] { (byte)10 };
    Object[] obj_array21 = treeSet17.toArray(obj_array20);
    Object[] obj_array22 = treeSet15.toArray(obj_array21);
    Object obj24 = treeSet15.lower((Object)(-1.0f));
    java.util.Comparator comparator25 = treeSet15.comparator();
    boolean b26 = treeSet6.addAll((java.util.Collection)treeSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == false);

  }

  @Test
  public void test278() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test278"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    java.util.Iterator iterator9 = treeSet8.descendingIterator();
    java.util.Iterator iterator10 = treeSet8.descendingIterator();
    java.util.NavigableSet navigableSet13 = treeSet8.tailSet((Object)(byte)10, true);
    boolean b14 = treeSet7.retainAll((java.util.Collection)treeSet8);
    java.util.NavigableSet navigableSet15 = treeSet8.descendingSet();
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    Object[] obj_array19 = new Object[] { (byte)10 };
    Object[] obj_array20 = treeSet16.toArray(obj_array19);
    Object obj21 = treeSet16.pollLast();
    Object[] obj_array22 = treeSet16.toArray();
    java.util.NavigableSet navigableSet23 = treeSet16.descendingSet();
    java.util.TreeSet treeSet24 = new java.util.TreeSet();
    java.util.Iterator iterator25 = treeSet24.descendingIterator();
    Object[] obj_array27 = new Object[] { (byte)10 };
    Object[] obj_array28 = treeSet24.toArray(obj_array27);
    java.util.SortedSet sortedSet30 = treeSet24.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.Iterator iterator32 = treeSet31.descendingIterator();
    Object[] obj_array34 = new Object[] { (byte)10 };
    Object[] obj_array35 = treeSet31.toArray(obj_array34);
    Object obj36 = treeSet31.pollLast();
    java.util.Comparator comparator37 = treeSet31.comparator();
    Object obj38 = null;
    Object obj39 = treeSet31.lower(obj38);
    boolean b40 = treeSet24.containsAll((java.util.Collection)treeSet31);
    java.util.NavigableSet navigableSet41 = treeSet31.descendingSet();
    java.util.TreeSet treeSet42 = new java.util.TreeSet((java.util.SortedSet)treeSet31);
    java.util.TreeSet treeSet43 = new java.util.TreeSet();
    java.util.SortedSet sortedSet45 = treeSet43.headSet((Object)(byte)0);
    Object obj46 = treeSet31.lower((Object)treeSet43);
    boolean b47 = treeSet16.containsAll((java.util.Collection)treeSet31);
    boolean b48 = treeSet8.removeAll((java.util.Collection)treeSet31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array34);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator37);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj39);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b40 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet41);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj46);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b47 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == false);

  }

  @Test
  public void test279() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test279"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.headSet((Object)1.0d);
    String str7 = treeSet0.toString();
    // The following exception was thrown during execution in test generation
    try {
      Object obj8 = treeSet0.first();
      org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException");
    } catch (java.util.NoSuchElementException e) {
      // Expected exception.
      if (! e.getClass().getCanonicalName().equals("java.util.NoSuchElementException")) {
        org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException, got " + e.getClass().getCanonicalName());
      }
    }
    
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[]"+ "'", str7.equals("[]"));

  }

  @Test
  public void test280() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test280"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    int i17 = treeSet0.size();
    java.util.TreeSet treeSet18 = new java.util.TreeSet((java.util.SortedSet)treeSet0);
    Object obj19 = treeSet0.pollFirst();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i17 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj19);

  }

  @Test
  public void test281() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test281"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.Comparator comparator6 = treeSet0.comparator();
    Object obj7 = null;
    Object obj8 = treeSet0.lower(obj7);
    int i9 = treeSet0.size();
    java.util.Spliterator spliterator10 = treeSet0.spliterator();
    int i11 = treeSet0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i9 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i11 == 0);

  }

  @Test
  public void test282() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test282"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    boolean b2 = treeSet1.isEmpty();
    java.util.SortedSet sortedSet3 = treeSet0.headSet((Object)b2);
    java.util.TreeSet treeSet4 = new java.util.TreeSet(sortedSet3);
    java.util.TreeSet treeSet5 = new java.util.TreeSet();
    java.util.Iterator iterator6 = treeSet5.descendingIterator();
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object[] obj_array12 = treeSet5.toArray(obj_array11);
    Object obj13 = treeSet4.lower((Object)treeSet5);
    java.util.TreeSet treeSet14 = new java.util.TreeSet();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    boolean b16 = treeSet15.isEmpty();
    java.util.SortedSet sortedSet17 = treeSet14.headSet((Object)b16);
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    java.util.Spliterator spliterator20 = treeSet18.spliterator();
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.Iterator iterator22 = treeSet21.descendingIterator();
    Object obj23 = treeSet18.lower((Object)treeSet21);
    java.util.NavigableSet navigableSet26 = treeSet21.headSet((Object)(-1.0f), true);
    boolean b27 = treeSet14.addAll((java.util.Collection)treeSet21);
    java.util.TreeSet treeSet28 = new java.util.TreeSet();
    java.util.Iterator iterator29 = treeSet28.descendingIterator();
    java.util.Spliterator spliterator30 = treeSet28.spliterator();
    java.util.TreeSet treeSet31 = new java.util.TreeSet();
    java.util.Iterator iterator32 = treeSet31.descendingIterator();
    Object obj33 = treeSet28.lower((Object)treeSet31);
    int i34 = treeSet31.size();
    Object obj36 = treeSet31.lower((Object)true);
    boolean b37 = treeSet21.retainAll((java.util.Collection)treeSet31);
    Object[] obj_array38 = treeSet31.toArray();
    Object[] obj_array39 = treeSet5.toArray(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b2 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet26);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b27 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator32);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i34 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b37 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array39);

  }

  @Test
  public void test283() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test283"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.NavigableSet navigableSet8 = treeSet0.tailSet((Object)(-1.0d), true);
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    boolean b10 = treeSet9.isEmpty();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    java.util.Iterator iterator13 = treeSet11.descendingIterator();
    boolean b14 = treeSet9.containsAll((java.util.Collection)treeSet11);
    java.util.stream.Stream stream15 = treeSet9.parallelStream();
    java.util.TreeSet treeSet16 = new java.util.TreeSet();
    java.util.Iterator iterator17 = treeSet16.descendingIterator();
    java.util.Spliterator spliterator18 = treeSet16.spliterator();
    boolean b19 = treeSet9.equals((Object)treeSet16);
    boolean b20 = treeSet0.equals((Object)b19);
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    boolean b22 = treeSet21.isEmpty();
    java.util.TreeSet treeSet23 = new java.util.TreeSet();
    java.util.Iterator iterator24 = treeSet23.descendingIterator();
    java.util.Iterator iterator25 = treeSet23.descendingIterator();
    boolean b26 = treeSet21.containsAll((java.util.Collection)treeSet23);
    Object obj28 = treeSet21.higher((Object)(short)(-1));
    Object[] obj_array29 = treeSet21.toArray();
    java.util.TreeSet treeSet30 = new java.util.TreeSet((java.util.Collection)treeSet21);
    Object obj31 = treeSet0.higher((Object)treeSet30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b10 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b14 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj28);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj31);

  }

  @Test
  public void test284() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test284"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Iterator iterator2 = treeSet0.descendingIterator();
    Object obj3 = treeSet0.pollFirst();
    java.util.TreeSet treeSet4 = new java.util.TreeSet((java.util.Collection)treeSet0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj3);

  }

  @Test
  public void test285() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test285"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet();
    java.util.Iterator iterator8 = treeSet7.descendingIterator();
    Object[] obj_array10 = new Object[] { (byte)10 };
    Object[] obj_array11 = treeSet7.toArray(obj_array10);
    Object obj12 = treeSet7.pollLast();
    java.util.Comparator comparator13 = treeSet7.comparator();
    Object obj14 = null;
    Object obj15 = treeSet7.lower(obj14);
    boolean b16 = treeSet0.containsAll((java.util.Collection)treeSet7);
    java.util.TreeSet treeSet17 = new java.util.TreeSet();
    java.util.Iterator iterator18 = treeSet17.descendingIterator();
    Object[] obj_array20 = new Object[] { (byte)10 };
    Object[] obj_array21 = treeSet17.toArray(obj_array20);
    java.util.SortedSet sortedSet23 = treeSet17.headSet((Object)1.0d);
    boolean b24 = treeSet7.retainAll((java.util.Collection)sortedSet23);
    java.util.Iterator iterator25 = treeSet7.descendingIterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator25);

  }

  @Test
  public void test286() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test286"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.TreeSet treeSet1 = new java.util.TreeSet();
    java.util.Iterator iterator2 = treeSet1.descendingIterator();
    java.util.Spliterator spliterator3 = treeSet1.spliterator();
    java.util.TreeSet treeSet4 = new java.util.TreeSet();
    java.util.Iterator iterator5 = treeSet4.descendingIterator();
    Object obj6 = treeSet1.lower((Object)treeSet4);
    int i7 = treeSet4.size();
    Object obj9 = treeSet4.lower((Object)true);
    java.util.Comparator comparator10 = treeSet4.comparator();
    boolean b11 = treeSet0.equals((Object)comparator10);
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    java.util.Spliterator spliterator14 = treeSet12.spliterator();
    java.util.TreeSet treeSet15 = new java.util.TreeSet();
    java.util.Iterator iterator16 = treeSet15.descendingIterator();
    Object obj17 = treeSet12.lower((Object)treeSet15);
    boolean b19 = treeSet15.remove((Object)(short)10);
    Object obj20 = treeSet15.clone();
    java.util.TreeSet treeSet21 = new java.util.TreeSet((java.util.Collection)treeSet15);
    boolean b22 = treeSet0.addAll((java.util.Collection)treeSet15);
    Object[] obj_array23 = treeSet0.toArray();
    int i24 = treeSet0.size();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i7 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b11 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b19 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b22 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i24 == 0);

  }

  @Test
  public void test287() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test287"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    Object obj5 = treeSet0.pollLast();
    java.util.TreeSet treeSet6 = new java.util.TreeSet((java.util.Collection)treeSet0);
    java.util.NavigableSet navigableSet7 = treeSet6.descendingSet();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet7);

  }

  @Test
  public void test288() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test288"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    boolean b7 = treeSet3.remove((Object)(short)10);
    int i8 = treeSet3.size();
    java.util.Spliterator spliterator9 = treeSet3.spliterator();
    java.util.stream.Stream stream10 = treeSet3.parallelStream();
    java.util.TreeSet treeSet11 = new java.util.TreeSet((java.util.SortedSet)treeSet3);
    java.util.TreeSet treeSet12 = new java.util.TreeSet();
    java.util.Iterator iterator13 = treeSet12.descendingIterator();
    Object[] obj_array15 = new Object[] { (byte)10 };
    Object[] obj_array16 = treeSet12.toArray(obj_array15);
    java.util.SortedSet sortedSet18 = treeSet12.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet19 = new java.util.TreeSet();
    java.util.Iterator iterator20 = treeSet19.descendingIterator();
    Object[] obj_array22 = new Object[] { (byte)10 };
    Object[] obj_array23 = treeSet19.toArray(obj_array22);
    Object obj24 = treeSet19.pollLast();
    java.util.Comparator comparator25 = treeSet19.comparator();
    Object obj26 = null;
    Object obj27 = treeSet19.lower(obj26);
    boolean b28 = treeSet12.containsAll((java.util.Collection)treeSet19);
    java.util.NavigableSet navigableSet29 = treeSet12.descendingSet();
    java.util.Spliterator spliterator30 = treeSet12.spliterator();
    java.util.stream.Stream stream31 = treeSet12.stream();
    java.util.TreeSet treeSet32 = new java.util.TreeSet();
    java.util.Iterator iterator33 = treeSet32.descendingIterator();
    Object[] obj_array35 = new Object[] { (byte)10 };
    Object[] obj_array36 = treeSet32.toArray(obj_array35);
    java.util.SortedSet sortedSet38 = treeSet32.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet39 = new java.util.TreeSet();
    java.util.Iterator iterator40 = treeSet39.descendingIterator();
    Object[] obj_array42 = new Object[] { (byte)10 };
    Object[] obj_array43 = treeSet39.toArray(obj_array42);
    Object obj44 = treeSet39.pollLast();
    java.util.Comparator comparator45 = treeSet39.comparator();
    Object obj46 = null;
    Object obj47 = treeSet39.lower(obj46);
    boolean b48 = treeSet32.containsAll((java.util.Collection)treeSet39);
    java.util.NavigableSet navigableSet49 = treeSet39.descendingSet();
    java.util.TreeSet treeSet50 = new java.util.TreeSet((java.util.SortedSet)treeSet39);
    java.util.TreeSet treeSet51 = new java.util.TreeSet();
    java.util.SortedSet sortedSet53 = treeSet51.headSet((Object)(byte)0);
    Object obj54 = treeSet39.lower((Object)treeSet51);
    Object obj55 = treeSet12.lower((Object)treeSet39);
    boolean b56 = treeSet11.retainAll((java.util.Collection)treeSet12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b7 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(i8 == 0);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator13);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj27);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b28 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet29);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator30);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(stream31);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator33);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array35);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array36);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet38);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator40);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array42);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array43);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj44);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(comparator45);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj47);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b48 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet49);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet53);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj54);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj55);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b56 == false);

  }

  @Test
  public void test289() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test289"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet2 = new java.util.TreeSet();
    java.util.Iterator iterator3 = treeSet2.descendingIterator();
    Object[] obj_array5 = new Object[] { (byte)10 };
    Object[] obj_array6 = treeSet2.toArray(obj_array5);
    Object[] obj_array7 = treeSet0.toArray(obj_array6);
    Object obj9 = treeSet0.lower((Object)(-1.0f));
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.Spliterator spliterator12 = treeSet10.spliterator();
    java.util.TreeSet treeSet13 = new java.util.TreeSet();
    java.util.Iterator iterator14 = treeSet13.descendingIterator();
    Object obj15 = treeSet10.lower((Object)treeSet13);
    boolean b16 = treeSet13.isEmpty();
    Object obj17 = treeSet0.floor((Object)treeSet13);
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    java.util.Iterator iterator20 = treeSet18.descendingIterator();
    java.util.NavigableSet navigableSet23 = treeSet18.tailSet((Object)(byte)10, true);
    boolean b24 = treeSet0.addAll((java.util.Collection)treeSet18);
    java.util.Iterator iterator25 = treeSet18.iterator();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj9);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b16 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj17);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(navigableSet23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b24 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator25);

  }

  @Test
  public void test290() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test290"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    java.util.Spliterator spliterator2 = treeSet0.spliterator();
    java.util.TreeSet treeSet3 = new java.util.TreeSet();
    java.util.Iterator iterator4 = treeSet3.descendingIterator();
    Object obj5 = treeSet0.lower((Object)treeSet3);
    Object obj6 = treeSet0.pollLast();
    java.util.Iterator iterator7 = treeSet0.descendingIterator();
    java.util.TreeSet treeSet8 = new java.util.TreeSet();
    boolean b9 = treeSet8.isEmpty();
    java.util.TreeSet treeSet10 = new java.util.TreeSet();
    java.util.Iterator iterator11 = treeSet10.descendingIterator();
    java.util.Iterator iterator12 = treeSet10.descendingIterator();
    boolean b13 = treeSet8.containsAll((java.util.Collection)treeSet10);
    Object obj15 = treeSet8.higher((Object)(short)(-1));
    Object[] obj_array16 = treeSet8.toArray();
    java.util.TreeSet treeSet17 = new java.util.TreeSet((java.util.Collection)treeSet8);
    java.util.TreeSet treeSet18 = new java.util.TreeSet();
    java.util.Iterator iterator19 = treeSet18.descendingIterator();
    java.util.Spliterator spliterator20 = treeSet18.spliterator();
    java.util.TreeSet treeSet21 = new java.util.TreeSet();
    java.util.Iterator iterator22 = treeSet21.descendingIterator();
    Object obj23 = treeSet18.lower((Object)treeSet21);
    Object obj24 = treeSet18.pollLast();
    Object obj25 = treeSet8.lower(obj24);
    boolean b26 = treeSet0.containsAll((java.util.Collection)treeSet8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator2);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj5);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator7);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b9 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator11);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b13 == true);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator20);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj24);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj25);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b26 == true);

  }

  @Test
  public void test291() throws Throwable {

    if (debug) { System.out.format("%n%s%n","RegressionTest0.test291"); }


    java.util.TreeSet treeSet0 = new java.util.TreeSet();
    java.util.Iterator iterator1 = treeSet0.descendingIterator();
    Object[] obj_array3 = new Object[] { (byte)10 };
    Object[] obj_array4 = treeSet0.toArray(obj_array3);
    java.util.SortedSet sortedSet6 = treeSet0.tailSet((Object)(byte)0);
    java.util.TreeSet treeSet7 = new java.util.TreeSet((java.util.Collection)sortedSet6);
    Object obj8 = treeSet7.clone();
    java.util.TreeSet treeSet9 = new java.util.TreeSet();
    java.util.Iterator iterator10 = treeSet9.descendingIterator();
    java.util.TreeSet treeSet11 = new java.util.TreeSet();
    java.util.Iterator iterator12 = treeSet11.descendingIterator();
    Object[] obj_array14 = new Object[] { (byte)10 };
    Object[] obj_array15 = treeSet11.toArray(obj_array14);
    Object[] obj_array16 = treeSet9.toArray(obj_array15);
    Object obj18 = treeSet9.lower((Object)(-1.0f));
    java.util.Spliterator spliterator19 = treeSet9.spliterator();
    boolean b20 = treeSet7.addAll((java.util.Collection)treeSet9);
    java.util.Iterator iterator21 = treeSet9.iterator();
    Object obj22 = treeSet9.pollLast();
    Object obj23 = treeSet9.pollLast();
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator1);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array3);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array4);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(sortedSet6);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj8);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator10);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator12);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array14);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array15);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(obj_array16);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj18);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(spliterator19);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertTrue(b20 == false);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNotNull(iterator21);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj22);
    
    // Regression assertion (captures the current behavior of the code)
    org.junit.Assert.assertNull(obj23);

  }

}
